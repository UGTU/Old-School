#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Schedule.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UGTU")]
	public partial class ScheduleDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertSheduleEvent(SheduleEvent instance);
    partial void UpdateSheduleEvent(SheduleEvent instance);
    partial void DeleteSheduleEvent(SheduleEvent instance);
    partial void InsertSheduleExamination(SheduleExamination instance);
    partial void UpdateSheduleExamination(SheduleExamination instance);
    partial void DeleteSheduleExamination(SheduleExamination instance);
    partial void InsertSheduleEventException(SheduleEventException instance);
    partial void UpdateSheduleEventException(SheduleEventException instance);
    partial void DeleteSheduleEventException(SheduleEventException instance);
    partial void InsertSheduleEventType(SheduleEventType instance);
    partial void UpdateSheduleEventType(SheduleEventType instance);
    partial void DeleteSheduleEventType(SheduleEventType instance);
    partial void InsertShedule(Shedule instance);
    partial void UpdateShedule(Shedule instance);
    partial void DeleteShedule(Shedule instance);
    partial void InsertRelation_event_plan_nagr(Relation_event_plan_nagr instance);
    partial void UpdateRelation_event_plan_nagr(Relation_event_plan_nagr instance);
    partial void DeleteRelation_event_plan_nagr(Relation_event_plan_nagr instance);
    partial void InsertRelation_exam_plan_nagr(Relation_exam_plan_nagr instance);
    partial void UpdateRelation_exam_plan_nagr(Relation_exam_plan_nagr instance);
    partial void DeleteRelation_exam_plan_nagr(Relation_exam_plan_nagr instance);
    partial void InsertRelation_calc_unit_grup(Relation_calc_unit_grup instance);
    partial void UpdateRelation_calc_unit_grup(Relation_calc_unit_grup instance);
    partial void DeleteRelation_calc_unit_grup(Relation_calc_unit_grup instance);
    partial void InsertPrepod_plan_nagr(Prepod_plan_nagr instance);
    partial void UpdatePrepod_plan_nagr(Prepod_plan_nagr instance);
    partial void DeletePrepod_plan_nagr(Prepod_plan_nagr instance);
    partial void InsertRepeatPattern(RepeatPattern instance);
    partial void UpdateRepeatPattern(RepeatPattern instance);
    partial void DeleteRepeatPattern(RepeatPattern instance);
    partial void InsertRepeatLimit(RepeatLimit instance);
    partial void UpdateRepeatLimit(RepeatLimit instance);
    partial void DeleteRepeatLimit(RepeatLimit instance);
    partial void InsertContent_plan_nagr(Content_plan_nagr instance);
    partial void UpdateContent_plan_nagr(Content_plan_nagr instance);
    partial void DeleteContent_plan_nagr(Content_plan_nagr instance);
    partial void InsertPotok(Potok instance);
    partial void UpdatePotok(Potok instance);
    partial void DeletePotok(Potok instance);
    partial void InsertShema_decompose(Shema_decompose instance);
    partial void UpdateShema_decompose(Shema_decompose instance);
    partial void DeleteShema_decompose(Shema_decompose instance);
    partial void InsertRelation_potok_grup(Relation_potok_grup instance);
    partial void UpdateRelation_potok_grup(Relation_potok_grup instance);
    partial void DeleteRelation_potok_grup(Relation_potok_grup instance);
    partial void InsertGrup(Grup instance);
    partial void UpdateGrup(Grup instance);
    partial void DeleteGrup(Grup instance);
    partial void InsertPrepod(Prepod instance);
    partial void UpdatePrepod(Prepod instance);
    partial void DeletePrepod(Prepod instance);
    partial void InsertRelation_kafedra_prep(Relation_kafedra_prep instance);
    partial void UpdateRelation_kafedra_prep(Relation_kafedra_prep instance);
    partial void DeleteRelation_kafedra_prep(Relation_kafedra_prep instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertFac(Fac instance);
    partial void UpdateFac(Fac instance);
    partial void DeleteFac(Fac instance);
    partial void InsertRelation_spec_fac(Relation_spec_fac instance);
    partial void UpdateRelation_spec_fac(Relation_spec_fac instance);
    partial void DeleteRelation_spec_fac(Relation_spec_fac instance);
    partial void InsertSpec_stud(Spec_stud instance);
    partial void UpdateSpec_stud(Spec_stud instance);
    partial void DeleteSpec_stud(Spec_stud instance);
    partial void Insertkafedra(kafedra instance);
    partial void Updatekafedra(kafedra instance);
    partial void Deletekafedra(kafedra instance);
    partial void InsertPrepodRank(PrepodRank instance);
    partial void UpdatePrepodRank(PrepodRank instance);
    partial void DeletePrepodRank(PrepodRank instance);
    partial void InsertRepeatType(RepeatType instance);
    partial void UpdateRepeatType(RepeatType instance);
    partial void DeleteRepeatType(RepeatType instance);
    partial void InsertRelation_potok_spec(Relation_potok_spec instance);
    partial void UpdateRelation_potok_spec(Relation_potok_spec instance);
    partial void DeleteRelation_potok_spec(Relation_potok_spec instance);
    partial void InsertYear_uch_pl(Year_uch_pl instance);
    partial void UpdateYear_uch_pl(Year_uch_pl instance);
    partial void DeleteYear_uch_pl(Year_uch_pl instance);
    partial void InsertSemester_length_exception(Semester_length_exception instance);
    partial void UpdateSemester_length_exception(Semester_length_exception instance);
    partial void DeleteSemester_length_exception(Semester_length_exception instance);
    partial void InsertSemesterType(SemesterType instance);
    partial void UpdateSemesterType(SemesterType instance);
    partial void DeleteSemesterType(SemesterType instance);
    partial void InsertDirection(Direction instance);
    partial void UpdateDirection(Direction instance);
    partial void DeleteDirection(Direction instance);
    partial void InsertPotok_semestr(Potok_semestr instance);
    partial void UpdatePotok_semestr(Potok_semestr instance);
    partial void DeletePotok_semestr(Potok_semestr instance);
    partial void InsertCalc_unit_semestr(Calc_unit_semestr instance);
    partial void UpdateCalc_unit_semestr(Calc_unit_semestr instance);
    partial void DeleteCalc_unit_semestr(Calc_unit_semestr instance);
    partial void InsertCalc_unit_grup(Calc_unit_grup instance);
    partial void UpdateCalc_unit_grup(Calc_unit_grup instance);
    partial void DeleteCalc_unit_grup(Calc_unit_grup instance);
    partial void InsertPotok_semestr_shema(Potok_semestr_shema instance);
    partial void UpdatePotok_semestr_shema(Potok_semestr_shema instance);
    partial void DeletePotok_semestr_shema(Potok_semestr_shema instance);
    #endregion
		
		public ScheduleDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["UGTUConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ScheduleDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SheduleEvent> SheduleEvents
		{
			get
			{
				return this.GetTable<SheduleEvent>();
			}
		}
		
		public System.Data.Linq.Table<SheduleExamination> SheduleExaminations
		{
			get
			{
				return this.GetTable<SheduleExamination>();
			}
		}
		
		public System.Data.Linq.Table<SheduleEventException> SheduleEventExceptions
		{
			get
			{
				return this.GetTable<SheduleEventException>();
			}
		}
		
		public System.Data.Linq.Table<SheduleEventType> SheduleEventTypes
		{
			get
			{
				return this.GetTable<SheduleEventType>();
			}
		}
		
		public System.Data.Linq.Table<Shedule> Shedules
		{
			get
			{
				return this.GetTable<Shedule>();
			}
		}
		
		public System.Data.Linq.Table<Relation_event_plan_nagr> Relation_event_plan_nagrs
		{
			get
			{
				return this.GetTable<Relation_event_plan_nagr>();
			}
		}
		
		public System.Data.Linq.Table<Relation_exam_plan_nagr> Relation_exam_plan_nagrs
		{
			get
			{
				return this.GetTable<Relation_exam_plan_nagr>();
			}
		}
		
		public System.Data.Linq.Table<Relation_calc_unit_grup> Relation_calc_unit_grups
		{
			get
			{
				return this.GetTable<Relation_calc_unit_grup>();
			}
		}
		
		public System.Data.Linq.Table<Prepod_plan_nagr> Prepod_plan_nagrs
		{
			get
			{
				return this.GetTable<Prepod_plan_nagr>();
			}
		}
		
		public System.Data.Linq.Table<RepeatPattern> RepeatPatterns
		{
			get
			{
				return this.GetTable<RepeatPattern>();
			}
		}
		
		public System.Data.Linq.Table<RepeatLimit> RepeatLimits
		{
			get
			{
				return this.GetTable<RepeatLimit>();
			}
		}
		
		public System.Data.Linq.Table<Content_plan_nagr> Content_plan_nagrs
		{
			get
			{
				return this.GetTable<Content_plan_nagr>();
			}
		}
		
		public System.Data.Linq.Table<Potok> Potoks
		{
			get
			{
				return this.GetTable<Potok>();
			}
		}
		
		public System.Data.Linq.Table<Shema_decompose> Shema_decomposes
		{
			get
			{
				return this.GetTable<Shema_decompose>();
			}
		}
		
		public System.Data.Linq.Table<Relation_potok_grup> Relation_potok_grups
		{
			get
			{
				return this.GetTable<Relation_potok_grup>();
			}
		}
		
		public System.Data.Linq.Table<Grup> Grups
		{
			get
			{
				return this.GetTable<Grup>();
			}
		}
		
		public System.Data.Linq.Table<Prepod> Prepods
		{
			get
			{
				return this.GetTable<Prepod>();
			}
		}
		
		public System.Data.Linq.Table<Relation_kafedra_prep> Relation_kafedra_preps
		{
			get
			{
				return this.GetTable<Relation_kafedra_prep>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Fac> Facs
		{
			get
			{
				return this.GetTable<Fac>();
			}
		}
		
		public System.Data.Linq.Table<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this.GetTable<Relation_spec_fac>();
			}
		}
		
		public System.Data.Linq.Table<Spec_stud> Spec_studs
		{
			get
			{
				return this.GetTable<Spec_stud>();
			}
		}
		
		public System.Data.Linq.Table<kafedra> kafedras
		{
			get
			{
				return this.GetTable<kafedra>();
			}
		}
		
		public System.Data.Linq.Table<PrepodRank> PrepodRanks
		{
			get
			{
				return this.GetTable<PrepodRank>();
			}
		}
		
		public System.Data.Linq.Table<RepeatType> RepeatTypes
		{
			get
			{
				return this.GetTable<RepeatType>();
			}
		}
		
		public System.Data.Linq.Table<Relation_potok_spec> Relation_potok_specs
		{
			get
			{
				return this.GetTable<Relation_potok_spec>();
			}
		}
		
		public System.Data.Linq.Table<Year_uch_pl> Year_uch_pls
		{
			get
			{
				return this.GetTable<Year_uch_pl>();
			}
		}
		
		public System.Data.Linq.Table<Semester_length_exception> Semester_length_exceptions
		{
			get
			{
				return this.GetTable<Semester_length_exception>();
			}
		}
		
		public System.Data.Linq.Table<SemesterType> SemesterTypes
		{
			get
			{
				return this.GetTable<SemesterType>();
			}
		}
		
		public System.Data.Linq.Table<Schedule_Fac> Schedule_Facs
		{
			get
			{
				return this.GetTable<Schedule_Fac>();
			}
		}
		
		public System.Data.Linq.Table<Schedule_spec> Schedule_specs
		{
			get
			{
				return this.GetTable<Schedule_spec>();
			}
		}
		
		public System.Data.Linq.Table<SheduleEventWithPlanNagr> SheduleEventWithPlanNagrs
		{
			get
			{
				return this.GetTable<SheduleEventWithPlanNagr>();
			}
		}
		
		public System.Data.Linq.Table<SheduleExaminationWithPlanNagr> SheduleExaminationWithPlanNagrs
		{
			get
			{
				return this.GetTable<SheduleExaminationWithPlanNagr>();
			}
		}
		
		public System.Data.Linq.Table<Direction> Directions
		{
			get
			{
				return this.GetTable<Direction>();
			}
		}
		
		public System.Data.Linq.Table<Potok_semestr> Potok_semestrs
		{
			get
			{
				return this.GetTable<Potok_semestr>();
			}
		}
		
		public System.Data.Linq.Table<Calc_unit_semestr> Calc_unit_semestrs
		{
			get
			{
				return this.GetTable<Calc_unit_semestr>();
			}
		}
		
		public System.Data.Linq.Table<Calc_unit_grup> Calc_unit_grups
		{
			get
			{
				return this.GetTable<Calc_unit_grup>();
			}
		}
		
		public System.Data.Linq.Table<Potok_semestr_shema> Potok_semestr_shemas
		{
			get
			{
				return this.GetTable<Potok_semestr_shema>();
			}
		}
		
		public System.Data.Linq.Table<SheduleEventWithPlanNagr_new> SheduleEventWithPlanNagr_news
		{
			get
			{
				return this.GetTable<SheduleEventWithPlanNagr_new>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PPrepodGrupsSELECT")]
		public ISingleResult<PPrepodGrupsSELECTResult> PPrepodGrupsSELECT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_year_uch_pl, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_sem_type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> nCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ik_year_uch_pl, ik_sem_type, nCode);
			return ((ISingleResult<PPrepodGrupsSELECTResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleEvent")]
	public partial class SheduleEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_event;
		
		private int _ik_shedule;
		
		private int _ik_id_prepod;
		
		private byte _ik_event_type;
		
		private System.Nullable<int> _ik_room;
		
		private System.Nullable<bool> _bit_exception;
		
		private int _ik_repeat_pattern;
		
		private System.Nullable<System.DateTime> _dBegin_date;
		
		private int _i_version;
		
		private EntitySet<SheduleEventException> _SheduleEventExceptions;
		
		private EntitySet<SheduleEventException> _SheduleEventExceptions1;
		
		private EntitySet<Relation_event_plan_nagr> _Relation_event_plan_nagrs;
		
		private EntityRef<SheduleEventType> _SheduleEventType;
		
		private EntityRef<Shedule> _Shedule;
		
		private EntityRef<RepeatPattern> _RepeatPattern;
		
		private EntityRef<Relation_kafedra_prep> _Relation_kafedra_prep;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_eventChanging(int value);
    partial void Onik_eventChanged();
    partial void Onik_sheduleChanging(int value);
    partial void Onik_sheduleChanged();
    partial void Onik_id_prepodChanging(int value);
    partial void Onik_id_prepodChanged();
    partial void Onik_event_typeChanging(byte value);
    partial void Onik_event_typeChanged();
    partial void Onik_roomChanging(System.Nullable<int> value);
    partial void Onik_roomChanged();
    partial void Onbit_exceptionChanging(System.Nullable<bool> value);
    partial void Onbit_exceptionChanged();
    partial void Onik_repeat_patternChanging(int value);
    partial void Onik_repeat_patternChanged();
    partial void OndBegin_dateChanging(System.Nullable<System.DateTime> value);
    partial void OndBegin_dateChanged();
    partial void Oni_versionChanging(int value);
    partial void Oni_versionChanged();
    #endregion
		
		public SheduleEvent()
		{
			this._SheduleEventExceptions = new EntitySet<SheduleEventException>(new Action<SheduleEventException>(this.attach_SheduleEventExceptions), new Action<SheduleEventException>(this.detach_SheduleEventExceptions));
			this._SheduleEventExceptions1 = new EntitySet<SheduleEventException>(new Action<SheduleEventException>(this.attach_SheduleEventExceptions1), new Action<SheduleEventException>(this.detach_SheduleEventExceptions1));
			this._Relation_event_plan_nagrs = new EntitySet<Relation_event_plan_nagr>(new Action<Relation_event_plan_nagr>(this.attach_Relation_event_plan_nagrs), new Action<Relation_event_plan_nagr>(this.detach_Relation_event_plan_nagrs));
			this._SheduleEventType = default(EntityRef<SheduleEventType>);
			this._Shedule = default(EntityRef<Shedule>);
			this._RepeatPattern = default(EntityRef<RepeatPattern>);
			this._Relation_kafedra_prep = default(EntityRef<Relation_kafedra_prep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_event
		{
			get
			{
				return this._ik_event;
			}
			set
			{
				if ((this._ik_event != value))
				{
					this.Onik_eventChanging(value);
					this.SendPropertyChanging();
					this._ik_event = value;
					this.SendPropertyChanged("ik_event");
					this.Onik_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL")]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					if (this._Shedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sheduleChanging(value);
					this.SendPropertyChanging();
					this._ik_shedule = value;
					this.SendPropertyChanged("ik_shedule");
					this.Onik_sheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int NOT NULL")]
		public int ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					if (this._Relation_kafedra_prep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_id_prepodChanging(value);
					this.SendPropertyChanging();
					this._ik_id_prepod = value;
					this.SendPropertyChanged("ik_id_prepod");
					this.Onik_id_prepodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event_type", DbType="TinyInt NOT NULL")]
		public byte ik_event_type
		{
			get
			{
				return this._ik_event_type;
			}
			set
			{
				if ((this._ik_event_type != value))
				{
					if (this._SheduleEventType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_event_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_event_type = value;
					this.SendPropertyChanged("ik_event_type");
					this.Onik_event_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int")]
		public System.Nullable<int> ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this.Onik_roomChanging(value);
					this.SendPropertyChanging();
					this._ik_room = value;
					this.SendPropertyChanged("ik_room");
					this.Onik_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_exception", DbType="Bit")]
		public System.Nullable<bool> bit_exception
		{
			get
			{
				return this._bit_exception;
			}
			set
			{
				if ((this._bit_exception != value))
				{
					this.Onbit_exceptionChanging(value);
					this.SendPropertyChanging();
					this._bit_exception = value;
					this.SendPropertyChanged("bit_exception");
					this.Onbit_exceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_pattern", DbType="Int NOT NULL")]
		public int ik_repeat_pattern
		{
			get
			{
				return this._ik_repeat_pattern;
			}
			set
			{
				if ((this._ik_repeat_pattern != value))
				{
					if (this._RepeatPattern.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_repeat_patternChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_pattern = value;
					this.SendPropertyChanged("ik_repeat_pattern");
					this.Onik_repeat_patternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBegin_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dBegin_date
		{
			get
			{
				return this._dBegin_date;
			}
			set
			{
				if ((this._dBegin_date != value))
				{
					this.OndBegin_dateChanging(value);
					this.SendPropertyChanging();
					this._dBegin_date = value;
					this.SendPropertyChanged("dBegin_date");
					this.OndBegin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_version", DbType="Int NOT NULL")]
		public int i_version
		{
			get
			{
				return this._i_version;
			}
			set
			{
				if ((this._i_version != value))
				{
					this.Oni_versionChanging(value);
					this.SendPropertyChanging();
					this._i_version = value;
					this.SendPropertyChanged("i_version");
					this.Oni_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_SheduleEventException", Storage="_SheduleEventExceptions", ThisKey="ik_event", OtherKey="ik_old_event")]
		public EntitySet<SheduleEventException> SheduleEventExceptions
		{
			get
			{
				return this._SheduleEventExceptions;
			}
			set
			{
				this._SheduleEventExceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_SheduleEventException1", Storage="_SheduleEventExceptions1", ThisKey="ik_event", OtherKey="ik_new_event")]
		public EntitySet<SheduleEventException> SheduleEventExceptions1
		{
			get
			{
				return this._SheduleEventExceptions1;
			}
			set
			{
				this._SheduleEventExceptions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_Relation_event_plan_nagr", Storage="_Relation_event_plan_nagrs", ThisKey="ik_event", OtherKey="ik_event")]
		public EntitySet<Relation_event_plan_nagr> Relation_event_plan_nagrs
		{
			get
			{
				return this._Relation_event_plan_nagrs;
			}
			set
			{
				this._Relation_event_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEventType_SheduleEvent", Storage="_SheduleEventType", ThisKey="ik_event_type", OtherKey="ik_event_type", IsForeignKey=true)]
		public SheduleEventType SheduleEventType
		{
			get
			{
				return this._SheduleEventType.Entity;
			}
			set
			{
				SheduleEventType previousValue = this._SheduleEventType.Entity;
				if (((previousValue != value) 
							|| (this._SheduleEventType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SheduleEventType.Entity = null;
						previousValue.SheduleEvents.Remove(this);
					}
					this._SheduleEventType.Entity = value;
					if ((value != null))
					{
						value.SheduleEvents.Add(this);
						this._ik_event_type = value.ik_event_type;
					}
					else
					{
						this._ik_event_type = default(byte);
					}
					this.SendPropertyChanged("SheduleEventType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_SheduleEvent", Storage="_Shedule", ThisKey="ik_shedule", OtherKey="ik_shedule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Shedule Shedule
		{
			get
			{
				return this._Shedule.Entity;
			}
			set
			{
				Shedule previousValue = this._Shedule.Entity;
				if (((previousValue != value) 
							|| (this._Shedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shedule.Entity = null;
						previousValue.SheduleEvents.Remove(this);
					}
					this._Shedule.Entity = value;
					if ((value != null))
					{
						value.SheduleEvents.Add(this);
						this._ik_shedule = value.ik_shedule;
					}
					else
					{
						this._ik_shedule = default(int);
					}
					this.SendPropertyChanged("Shedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatPattern_SheduleEvent", Storage="_RepeatPattern", ThisKey="ik_repeat_pattern", OtherKey="ik_repeat_pattern", IsForeignKey=true)]
		public RepeatPattern RepeatPattern
		{
			get
			{
				return this._RepeatPattern.Entity;
			}
			set
			{
				RepeatPattern previousValue = this._RepeatPattern.Entity;
				if (((previousValue != value) 
							|| (this._RepeatPattern.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepeatPattern.Entity = null;
						previousValue.SheduleEvents.Remove(this);
					}
					this._RepeatPattern.Entity = value;
					if ((value != null))
					{
						value.SheduleEvents.Add(this);
						this._ik_repeat_pattern = value.ik_repeat_pattern;
					}
					else
					{
						this._ik_repeat_pattern = default(int);
					}
					this.SendPropertyChanged("RepeatPattern");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_SheduleEvent", Storage="_Relation_kafedra_prep", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod", IsForeignKey=true)]
		public Relation_kafedra_prep Relation_kafedra_prep
		{
			get
			{
				return this._Relation_kafedra_prep.Entity;
			}
			set
			{
				Relation_kafedra_prep previousValue = this._Relation_kafedra_prep.Entity;
				if (((previousValue != value) 
							|| (this._Relation_kafedra_prep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_kafedra_prep.Entity = null;
						previousValue.SheduleEvents.Remove(this);
					}
					this._Relation_kafedra_prep.Entity = value;
					if ((value != null))
					{
						value.SheduleEvents.Add(this);
						this._ik_id_prepod = value.ik_id_prepod;
					}
					else
					{
						this._ik_id_prepod = default(int);
					}
					this.SendPropertyChanged("Relation_kafedra_prep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SheduleEventExceptions(SheduleEventException entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent = this;
		}
		
		private void detach_SheduleEventExceptions(SheduleEventException entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent = null;
		}
		
		private void attach_SheduleEventExceptions1(SheduleEventException entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent1 = this;
		}
		
		private void detach_SheduleEventExceptions1(SheduleEventException entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent1 = null;
		}
		
		private void attach_Relation_event_plan_nagrs(Relation_event_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent = this;
		}
		
		private void detach_Relation_event_plan_nagrs(Relation_event_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEvent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleExamination")]
	public partial class SheduleExamination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_examination;
		
		private System.DateTime _dt_time_start;
		
		private System.DateTime _dt_time_stop;
		
		private int _ik_shedule;
		
		private System.Nullable<int> _ik_id_prepod;
		
		private System.Nullable<int> _ik_room;
		
		private int _i_version;
		
		private EntitySet<Relation_exam_plan_nagr> _Relation_exam_plan_nagrs;
		
		private EntityRef<Shedule> _Shedule;
		
		private EntityRef<Relation_kafedra_prep> _Relation_kafedra_prep;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_examinationChanging(int value);
    partial void Onik_examinationChanged();
    partial void Ondt_time_startChanging(System.DateTime value);
    partial void Ondt_time_startChanged();
    partial void Ondt_time_stopChanging(System.DateTime value);
    partial void Ondt_time_stopChanged();
    partial void Onik_sheduleChanging(int value);
    partial void Onik_sheduleChanged();
    partial void Onik_id_prepodChanging(System.Nullable<int> value);
    partial void Onik_id_prepodChanged();
    partial void Onik_roomChanging(System.Nullable<int> value);
    partial void Onik_roomChanged();
    partial void Oni_versionChanging(int value);
    partial void Oni_versionChanged();
    #endregion
		
		public SheduleExamination()
		{
			this._Relation_exam_plan_nagrs = new EntitySet<Relation_exam_plan_nagr>(new Action<Relation_exam_plan_nagr>(this.attach_Relation_exam_plan_nagrs), new Action<Relation_exam_plan_nagr>(this.detach_Relation_exam_plan_nagrs));
			this._Shedule = default(EntityRef<Shedule>);
			this._Relation_kafedra_prep = default(EntityRef<Relation_kafedra_prep>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_examination", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_examination
		{
			get
			{
				return this._ik_examination;
			}
			set
			{
				if ((this._ik_examination != value))
				{
					this.Onik_examinationChanging(value);
					this.SendPropertyChanging();
					this._ik_examination = value;
					this.SendPropertyChanged("ik_examination");
					this.Onik_examinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_start", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_start
		{
			get
			{
				return this._dt_time_start;
			}
			set
			{
				if ((this._dt_time_start != value))
				{
					this.Ondt_time_startChanging(value);
					this.SendPropertyChanging();
					this._dt_time_start = value;
					this.SendPropertyChanged("dt_time_start");
					this.Ondt_time_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_stop", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_stop
		{
			get
			{
				return this._dt_time_stop;
			}
			set
			{
				if ((this._dt_time_stop != value))
				{
					this.Ondt_time_stopChanging(value);
					this.SendPropertyChanging();
					this._dt_time_stop = value;
					this.SendPropertyChanged("dt_time_stop");
					this.Ondt_time_stopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL")]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					if (this._Shedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sheduleChanging(value);
					this.SendPropertyChanging();
					this._ik_shedule = value;
					this.SendPropertyChanged("ik_shedule");
					this.Onik_sheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int")]
		public System.Nullable<int> ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					if (this._Relation_kafedra_prep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_id_prepodChanging(value);
					this.SendPropertyChanging();
					this._ik_id_prepod = value;
					this.SendPropertyChanged("ik_id_prepod");
					this.Onik_id_prepodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int")]
		public System.Nullable<int> ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this.Onik_roomChanging(value);
					this.SendPropertyChanging();
					this._ik_room = value;
					this.SendPropertyChanged("ik_room");
					this.Onik_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_version", DbType="Int NOT NULL")]
		public int i_version
		{
			get
			{
				return this._i_version;
			}
			set
			{
				if ((this._i_version != value))
				{
					this.Oni_versionChanging(value);
					this.SendPropertyChanging();
					this._i_version = value;
					this.SendPropertyChanged("i_version");
					this.Oni_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleExamination_Relation_exam_plan_nagr", Storage="_Relation_exam_plan_nagrs", ThisKey="ik_examination", OtherKey="ik_examination")]
		public EntitySet<Relation_exam_plan_nagr> Relation_exam_plan_nagrs
		{
			get
			{
				return this._Relation_exam_plan_nagrs;
			}
			set
			{
				this._Relation_exam_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_SheduleExamination", Storage="_Shedule", ThisKey="ik_shedule", OtherKey="ik_shedule", IsForeignKey=true)]
		public Shedule Shedule
		{
			get
			{
				return this._Shedule.Entity;
			}
			set
			{
				Shedule previousValue = this._Shedule.Entity;
				if (((previousValue != value) 
							|| (this._Shedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shedule.Entity = null;
						previousValue.SheduleExaminations.Remove(this);
					}
					this._Shedule.Entity = value;
					if ((value != null))
					{
						value.SheduleExaminations.Add(this);
						this._ik_shedule = value.ik_shedule;
					}
					else
					{
						this._ik_shedule = default(int);
					}
					this.SendPropertyChanged("Shedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_SheduleExamination", Storage="_Relation_kafedra_prep", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod", IsForeignKey=true)]
		public Relation_kafedra_prep Relation_kafedra_prep
		{
			get
			{
				return this._Relation_kafedra_prep.Entity;
			}
			set
			{
				Relation_kafedra_prep previousValue = this._Relation_kafedra_prep.Entity;
				if (((previousValue != value) 
							|| (this._Relation_kafedra_prep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_kafedra_prep.Entity = null;
						previousValue.SheduleExaminations.Remove(this);
					}
					this._Relation_kafedra_prep.Entity = value;
					if ((value != null))
					{
						value.SheduleExaminations.Add(this);
						this._ik_id_prepod = value.ik_id_prepod;
					}
					else
					{
						this._ik_id_prepod = default(Nullable<int>);
					}
					this.SendPropertyChanged("Relation_kafedra_prep");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_exam_plan_nagrs(Relation_exam_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.SheduleExamination = this;
		}
		
		private void detach_Relation_exam_plan_nagrs(Relation_exam_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.SheduleExamination = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleEventException")]
	public partial class SheduleEventException : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_old_event;
		
		private int _ik_new_event;
		
		private System.Nullable<System.DateTime> _dExceptionDate;
		
		private EntityRef<SheduleEvent> _SheduleEvent;
		
		private EntityRef<SheduleEvent> _SheduleEvent1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_old_eventChanging(int value);
    partial void Onik_old_eventChanged();
    partial void Onik_new_eventChanging(int value);
    partial void Onik_new_eventChanged();
    partial void OndExceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OndExceptionDateChanged();
    #endregion
		
		public SheduleEventException()
		{
			this._SheduleEvent = default(EntityRef<SheduleEvent>);
			this._SheduleEvent1 = default(EntityRef<SheduleEvent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_old_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_old_event
		{
			get
			{
				return this._ik_old_event;
			}
			set
			{
				if ((this._ik_old_event != value))
				{
					if (this._SheduleEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_old_eventChanging(value);
					this.SendPropertyChanging();
					this._ik_old_event = value;
					this.SendPropertyChanged("ik_old_event");
					this.Onik_old_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_new_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_new_event
		{
			get
			{
				return this._ik_new_event;
			}
			set
			{
				if ((this._ik_new_event != value))
				{
					if (this._SheduleEvent1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_new_eventChanging(value);
					this.SendPropertyChanging();
					this._ik_new_event = value;
					this.SendPropertyChanged("ik_new_event");
					this.Onik_new_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dExceptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dExceptionDate
		{
			get
			{
				return this._dExceptionDate;
			}
			set
			{
				if ((this._dExceptionDate != value))
				{
					this.OndExceptionDateChanging(value);
					this.SendPropertyChanging();
					this._dExceptionDate = value;
					this.SendPropertyChanged("dExceptionDate");
					this.OndExceptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_SheduleEventException", Storage="_SheduleEvent", ThisKey="ik_old_event", OtherKey="ik_event", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SheduleEvent SheduleEvent
		{
			get
			{
				return this._SheduleEvent.Entity;
			}
			set
			{
				SheduleEvent previousValue = this._SheduleEvent.Entity;
				if (((previousValue != value) 
							|| (this._SheduleEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SheduleEvent.Entity = null;
						previousValue.SheduleEventExceptions.Remove(this);
					}
					this._SheduleEvent.Entity = value;
					if ((value != null))
					{
						value.SheduleEventExceptions.Add(this);
						this._ik_old_event = value.ik_event;
					}
					else
					{
						this._ik_old_event = default(int);
					}
					this.SendPropertyChanged("SheduleEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_SheduleEventException1", Storage="_SheduleEvent1", ThisKey="ik_new_event", OtherKey="ik_event", IsForeignKey=true)]
		public SheduleEvent SheduleEvent1
		{
			get
			{
				return this._SheduleEvent1.Entity;
			}
			set
			{
				SheduleEvent previousValue = this._SheduleEvent1.Entity;
				if (((previousValue != value) 
							|| (this._SheduleEvent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SheduleEvent1.Entity = null;
						previousValue.SheduleEventExceptions1.Remove(this);
					}
					this._SheduleEvent1.Entity = value;
					if ((value != null))
					{
						value.SheduleEventExceptions1.Add(this);
						this._ik_new_event = value.ik_event;
					}
					else
					{
						this._ik_new_event = default(int);
					}
					this.SendPropertyChanged("SheduleEvent1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleEventType")]
	public partial class SheduleEventType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ik_event_type;
		
		private string _cName_event;
		
		private System.DateTime _dEvent_start;
		
		private System.DateTime _dEvent_stop;
		
		private EntitySet<SheduleEvent> _SheduleEvents;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_event_typeChanging(byte value);
    partial void Onik_event_typeChanged();
    partial void OncName_eventChanging(string value);
    partial void OncName_eventChanged();
    partial void OndEvent_startChanging(System.DateTime value);
    partial void OndEvent_startChanged();
    partial void OndEvent_stopChanging(System.DateTime value);
    partial void OndEvent_stopChanged();
    #endregion
		
		public SheduleEventType()
		{
			this._SheduleEvents = new EntitySet<SheduleEvent>(new Action<SheduleEvent>(this.attach_SheduleEvents), new Action<SheduleEvent>(this.detach_SheduleEvents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event_type", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ik_event_type
		{
			get
			{
				return this._ik_event_type;
			}
			set
			{
				if ((this._ik_event_type != value))
				{
					this.Onik_event_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_event_type = value;
					this.SendPropertyChanged("ik_event_type");
					this.Onik_event_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_event", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_event
		{
			get
			{
				return this._cName_event;
			}
			set
			{
				if ((this._cName_event != value))
				{
					this.OncName_eventChanging(value);
					this.SendPropertyChanging();
					this._cName_event = value;
					this.SendPropertyChanged("cName_event");
					this.OncName_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEvent_start", DbType="DateTime NOT NULL")]
		public System.DateTime dEvent_start
		{
			get
			{
				return this._dEvent_start;
			}
			set
			{
				if ((this._dEvent_start != value))
				{
					this.OndEvent_startChanging(value);
					this.SendPropertyChanging();
					this._dEvent_start = value;
					this.SendPropertyChanged("dEvent_start");
					this.OndEvent_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEvent_stop", DbType="DateTime NOT NULL")]
		public System.DateTime dEvent_stop
		{
			get
			{
				return this._dEvent_stop;
			}
			set
			{
				if ((this._dEvent_stop != value))
				{
					this.OndEvent_stopChanging(value);
					this.SendPropertyChanging();
					this._dEvent_stop = value;
					this.SendPropertyChanged("dEvent_stop");
					this.OndEvent_stopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEventType_SheduleEvent", Storage="_SheduleEvents", ThisKey="ik_event_type", OtherKey="ik_event_type")]
		public EntitySet<SheduleEvent> SheduleEvents
		{
			get
			{
				return this._SheduleEvents;
			}
			set
			{
				this._SheduleEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEventType = this;
		}
		
		private void detach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.SheduleEventType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shedule")]
	public partial class Shedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_shedule;
		
		private System.Nullable<int> _ik_year;
		
		private System.Nullable<byte> _ik_sem_type;
		
		private System.Nullable<System.DateTime> _d_sem_start;
		
		private System.Nullable<System.DateTime> _d_sem_end;
		
		private System.Nullable<System.DateTime> _d_session_end;
		
		private System.Nullable<System.DateTime> _d_session_start;
		
		private System.Nullable<System.DateTime> _d_work_time_end;
		
		private System.Nullable<System.DateTime> _d_work_time_start;
		
		private EntitySet<SheduleEvent> _SheduleEvents;
		
		private EntitySet<SheduleExamination> _SheduleExaminations;
		
		private EntitySet<Semester_length_exception> _Semester_length_exceptions;
		
		private EntityRef<Year_uch_pl> _Year_uch_pl;
		
		private EntityRef<SemesterType> _SemesterType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_sheduleChanging(int value);
    partial void Onik_sheduleChanged();
    partial void Onik_yearChanging(System.Nullable<int> value);
    partial void Onik_yearChanged();
    partial void Onik_sem_typeChanging(System.Nullable<byte> value);
    partial void Onik_sem_typeChanged();
    partial void Ond_sem_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_sem_startChanged();
    partial void Ond_sem_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_sem_endChanged();
    partial void Ond_session_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_session_endChanged();
    partial void Ond_session_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_session_startChanged();
    partial void Ond_work_time_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_work_time_endChanged();
    partial void Ond_work_time_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_work_time_startChanged();
    #endregion
		
		public Shedule()
		{
			this._SheduleEvents = new EntitySet<SheduleEvent>(new Action<SheduleEvent>(this.attach_SheduleEvents), new Action<SheduleEvent>(this.detach_SheduleEvents));
			this._SheduleExaminations = new EntitySet<SheduleExamination>(new Action<SheduleExamination>(this.attach_SheduleExaminations), new Action<SheduleExamination>(this.detach_SheduleExaminations));
			this._Semester_length_exceptions = new EntitySet<Semester_length_exception>(new Action<Semester_length_exception>(this.attach_Semester_length_exceptions), new Action<Semester_length_exception>(this.detach_Semester_length_exceptions));
			this._Year_uch_pl = default(EntityRef<Year_uch_pl>);
			this._SemesterType = default(EntityRef<SemesterType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					this.Onik_sheduleChanging(value);
					this.SendPropertyChanging();
					this._ik_shedule = value;
					this.SendPropertyChanged("ik_shedule");
					this.Onik_sheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_year", DbType="Int")]
		public System.Nullable<int> ik_year
		{
			get
			{
				return this._ik_year;
			}
			set
			{
				if ((this._ik_year != value))
				{
					if (this._Year_uch_pl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_yearChanging(value);
					this.SendPropertyChanging();
					this._ik_year = value;
					this.SendPropertyChanged("ik_year");
					this.Onik_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sem_type", DbType="TinyInt")]
		public System.Nullable<byte> ik_sem_type
		{
			get
			{
				return this._ik_sem_type;
			}
			set
			{
				if ((this._ik_sem_type != value))
				{
					if (this._SemesterType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sem_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_sem_type = value;
					this.SendPropertyChanged("ik_sem_type");
					this.Onik_sem_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_sem_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_sem_start
		{
			get
			{
				return this._d_sem_start;
			}
			set
			{
				if ((this._d_sem_start != value))
				{
					this.Ond_sem_startChanging(value);
					this.SendPropertyChanging();
					this._d_sem_start = value;
					this.SendPropertyChanged("d_sem_start");
					this.Ond_sem_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_sem_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_sem_end
		{
			get
			{
				return this._d_sem_end;
			}
			set
			{
				if ((this._d_sem_end != value))
				{
					this.Ond_sem_endChanging(value);
					this.SendPropertyChanging();
					this._d_sem_end = value;
					this.SendPropertyChanged("d_sem_end");
					this.Ond_sem_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_session_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_session_end
		{
			get
			{
				return this._d_session_end;
			}
			set
			{
				if ((this._d_session_end != value))
				{
					this.Ond_session_endChanging(value);
					this.SendPropertyChanging();
					this._d_session_end = value;
					this.SendPropertyChanged("d_session_end");
					this.Ond_session_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_session_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_session_start
		{
			get
			{
				return this._d_session_start;
			}
			set
			{
				if ((this._d_session_start != value))
				{
					this.Ond_session_startChanging(value);
					this.SendPropertyChanging();
					this._d_session_start = value;
					this.SendPropertyChanged("d_session_start");
					this.Ond_session_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_work_time_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_work_time_end
		{
			get
			{
				return this._d_work_time_end;
			}
			set
			{
				if ((this._d_work_time_end != value))
				{
					this.Ond_work_time_endChanging(value);
					this.SendPropertyChanging();
					this._d_work_time_end = value;
					this.SendPropertyChanged("d_work_time_end");
					this.Ond_work_time_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_work_time_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_work_time_start
		{
			get
			{
				return this._d_work_time_start;
			}
			set
			{
				if ((this._d_work_time_start != value))
				{
					this.Ond_work_time_startChanging(value);
					this.SendPropertyChanging();
					this._d_work_time_start = value;
					this.SendPropertyChanged("d_work_time_start");
					this.Ond_work_time_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_SheduleEvent", Storage="_SheduleEvents", ThisKey="ik_shedule", OtherKey="ik_shedule")]
		public EntitySet<SheduleEvent> SheduleEvents
		{
			get
			{
				return this._SheduleEvents;
			}
			set
			{
				this._SheduleEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_SheduleExamination", Storage="_SheduleExaminations", ThisKey="ik_shedule", OtherKey="ik_shedule")]
		public EntitySet<SheduleExamination> SheduleExaminations
		{
			get
			{
				return this._SheduleExaminations;
			}
			set
			{
				this._SheduleExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_Semester_length_exception", Storage="_Semester_length_exceptions", ThisKey="ik_shedule", OtherKey="ik_shedule")]
		public EntitySet<Semester_length_exception> Semester_length_exceptions
		{
			get
			{
				return this._Semester_length_exceptions;
			}
			set
			{
				this._Semester_length_exceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Shedule", Storage="_Year_uch_pl", ThisKey="ik_year", OtherKey="ik_year_uch_pl", IsForeignKey=true)]
		public Year_uch_pl Year_uch_pl
		{
			get
			{
				return this._Year_uch_pl.Entity;
			}
			set
			{
				Year_uch_pl previousValue = this._Year_uch_pl.Entity;
				if (((previousValue != value) 
							|| (this._Year_uch_pl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year_uch_pl.Entity = null;
						previousValue.Shedules.Remove(this);
					}
					this._Year_uch_pl.Entity = value;
					if ((value != null))
					{
						value.Shedules.Add(this);
						this._ik_year = value.ik_year_uch_pl;
					}
					else
					{
						this._ik_year = default(Nullable<int>);
					}
					this.SendPropertyChanged("Year_uch_pl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemesterType_Shedule", Storage="_SemesterType", ThisKey="ik_sem_type", OtherKey="ik_sem_type", IsForeignKey=true)]
		public SemesterType SemesterType
		{
			get
			{
				return this._SemesterType.Entity;
			}
			set
			{
				SemesterType previousValue = this._SemesterType.Entity;
				if (((previousValue != value) 
							|| (this._SemesterType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SemesterType.Entity = null;
						previousValue.Shedules.Remove(this);
					}
					this._SemesterType.Entity = value;
					if ((value != null))
					{
						value.Shedules.Add(this);
						this._ik_sem_type = value.ik_sem_type;
					}
					else
					{
						this._ik_sem_type = default(Nullable<byte>);
					}
					this.SendPropertyChanged("SemesterType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = this;
		}
		
		private void detach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = null;
		}
		
		private void attach_SheduleExaminations(SheduleExamination entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = this;
		}
		
		private void detach_SheduleExaminations(SheduleExamination entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = null;
		}
		
		private void attach_Semester_length_exceptions(Semester_length_exception entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = this;
		}
		
		private void detach_Semester_length_exceptions(Semester_length_exception entity)
		{
			this.SendPropertyChanging();
			entity.Shedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_event_plan_nagr")]
	public partial class Relation_event_plan_nagr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_event;
		
		private int _ik_prepod_plan;
		
		private EntityRef<SheduleEvent> _SheduleEvent;
		
		private EntityRef<Prepod_plan_nagr> _Prepod_plan_nagr;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_eventChanging(int value);
    partial void Onik_eventChanged();
    partial void Onik_prepod_planChanging(int value);
    partial void Onik_prepod_planChanged();
    #endregion
		
		public Relation_event_plan_nagr()
		{
			this._SheduleEvent = default(EntityRef<SheduleEvent>);
			this._Prepod_plan_nagr = default(EntityRef<Prepod_plan_nagr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_event
		{
			get
			{
				return this._ik_event;
			}
			set
			{
				if ((this._ik_event != value))
				{
					if (this._SheduleEvent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_eventChanging(value);
					this.SendPropertyChanging();
					this._ik_event = value;
					this.SendPropertyChanged("ik_event");
					this.Onik_eventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_prepod_plan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_prepod_plan
		{
			get
			{
				return this._ik_prepod_plan;
			}
			set
			{
				if ((this._ik_prepod_plan != value))
				{
					if (this._Prepod_plan_nagr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_prepod_planChanging(value);
					this.SendPropertyChanging();
					this._ik_prepod_plan = value;
					this.SendPropertyChanged("ik_prepod_plan");
					this.Onik_prepod_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleEvent_Relation_event_plan_nagr", Storage="_SheduleEvent", ThisKey="ik_event", OtherKey="ik_event", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SheduleEvent SheduleEvent
		{
			get
			{
				return this._SheduleEvent.Entity;
			}
			set
			{
				SheduleEvent previousValue = this._SheduleEvent.Entity;
				if (((previousValue != value) 
							|| (this._SheduleEvent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SheduleEvent.Entity = null;
						previousValue.Relation_event_plan_nagrs.Remove(this);
					}
					this._SheduleEvent.Entity = value;
					if ((value != null))
					{
						value.Relation_event_plan_nagrs.Add(this);
						this._ik_event = value.ik_event;
					}
					else
					{
						this._ik_event = default(int);
					}
					this.SendPropertyChanged("SheduleEvent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_plan_nagr_Relation_event_plan_nagr", Storage="_Prepod_plan_nagr", ThisKey="ik_prepod_plan", OtherKey="ik_prepod_plan", IsForeignKey=true)]
		public Prepod_plan_nagr Prepod_plan_nagr
		{
			get
			{
				return this._Prepod_plan_nagr.Entity;
			}
			set
			{
				Prepod_plan_nagr previousValue = this._Prepod_plan_nagr.Entity;
				if (((previousValue != value) 
							|| (this._Prepod_plan_nagr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prepod_plan_nagr.Entity = null;
						previousValue.Relation_event_plan_nagrs.Remove(this);
					}
					this._Prepod_plan_nagr.Entity = value;
					if ((value != null))
					{
						value.Relation_event_plan_nagrs.Add(this);
						this._ik_prepod_plan = value.ik_prepod_plan;
					}
					else
					{
						this._ik_prepod_plan = default(int);
					}
					this.SendPropertyChanged("Prepod_plan_nagr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_exam_plan_nagr")]
	public partial class Relation_exam_plan_nagr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_examination;
		
		private int _ik_prepod_plan;
		
		private EntityRef<SheduleExamination> _SheduleExamination;
		
		private EntityRef<Prepod_plan_nagr> _Prepod_plan_nagr;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_examinationChanging(int value);
    partial void Onik_examinationChanged();
    partial void Onik_prepod_planChanging(int value);
    partial void Onik_prepod_planChanged();
    #endregion
		
		public Relation_exam_plan_nagr()
		{
			this._SheduleExamination = default(EntityRef<SheduleExamination>);
			this._Prepod_plan_nagr = default(EntityRef<Prepod_plan_nagr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_examination", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_examination
		{
			get
			{
				return this._ik_examination;
			}
			set
			{
				if ((this._ik_examination != value))
				{
					if (this._SheduleExamination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_examinationChanging(value);
					this.SendPropertyChanging();
					this._ik_examination = value;
					this.SendPropertyChanged("ik_examination");
					this.Onik_examinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_prepod_plan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_prepod_plan
		{
			get
			{
				return this._ik_prepod_plan;
			}
			set
			{
				if ((this._ik_prepod_plan != value))
				{
					if (this._Prepod_plan_nagr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_prepod_planChanging(value);
					this.SendPropertyChanging();
					this._ik_prepod_plan = value;
					this.SendPropertyChanged("ik_prepod_plan");
					this.Onik_prepod_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SheduleExamination_Relation_exam_plan_nagr", Storage="_SheduleExamination", ThisKey="ik_examination", OtherKey="ik_examination", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SheduleExamination SheduleExamination
		{
			get
			{
				return this._SheduleExamination.Entity;
			}
			set
			{
				SheduleExamination previousValue = this._SheduleExamination.Entity;
				if (((previousValue != value) 
							|| (this._SheduleExamination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SheduleExamination.Entity = null;
						previousValue.Relation_exam_plan_nagrs.Remove(this);
					}
					this._SheduleExamination.Entity = value;
					if ((value != null))
					{
						value.Relation_exam_plan_nagrs.Add(this);
						this._ik_examination = value.ik_examination;
					}
					else
					{
						this._ik_examination = default(int);
					}
					this.SendPropertyChanged("SheduleExamination");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_plan_nagr_Relation_exam_plan_nagr", Storage="_Prepod_plan_nagr", ThisKey="ik_prepod_plan", OtherKey="ik_prepod_plan", IsForeignKey=true)]
		public Prepod_plan_nagr Prepod_plan_nagr
		{
			get
			{
				return this._Prepod_plan_nagr.Entity;
			}
			set
			{
				Prepod_plan_nagr previousValue = this._Prepod_plan_nagr.Entity;
				if (((previousValue != value) 
							|| (this._Prepod_plan_nagr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prepod_plan_nagr.Entity = null;
						previousValue.Relation_exam_plan_nagrs.Remove(this);
					}
					this._Prepod_plan_nagr.Entity = value;
					if ((value != null))
					{
						value.Relation_exam_plan_nagrs.Add(this);
						this._ik_prepod_plan = value.ik_prepod_plan;
					}
					else
					{
						this._ik_prepod_plan = default(int);
					}
					this.SendPropertyChanged("Prepod_plan_nagr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_calc_unit_grup")]
	public partial class Relation_calc_unit_grup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_grup;
		
		private int _ik_calc_unit;
		
		private EntityRef<Grup> _Grup;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_grupChanging(int value);
    partial void Onik_grupChanged();
    partial void Onik_calc_unitChanging(int value);
    partial void Onik_calc_unitChanged();
    #endregion
		
		public Relation_calc_unit_grup()
		{
			this._Grup = default(EntityRef<Grup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_grup", DbType="Int NOT NULL")]
		public int ik_grup
		{
			get
			{
				return this._ik_grup;
			}
			set
			{
				if ((this._ik_grup != value))
				{
					if (this._Grup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_grupChanging(value);
					this.SendPropertyChanging();
					this._ik_grup = value;
					this.SendPropertyChanged("ik_grup");
					this.Onik_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					this.Onik_calc_unitChanging(value);
					this.SendPropertyChanging();
					this._ik_calc_unit = value;
					this.SendPropertyChanged("ik_calc_unit");
					this.Onik_calc_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Relation_calc_unit_grup", Storage="_Grup", ThisKey="ik_grup", OtherKey="Ik_grup", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Grup Grup
		{
			get
			{
				return this._Grup.Entity;
			}
			set
			{
				Grup previousValue = this._Grup.Entity;
				if (((previousValue != value) 
							|| (this._Grup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grup.Entity = null;
						previousValue.Relation_calc_unit_grups.Remove(this);
					}
					this._Grup.Entity = value;
					if ((value != null))
					{
						value.Relation_calc_unit_grups.Add(this);
						this._ik_grup = value.Ik_grup;
					}
					else
					{
						this._ik_grup = default(int);
					}
					this.SendPropertyChanged("Grup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prepod_plan_nagr")]
	public partial class Prepod_plan_nagr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_prepod_plan;
		
		private int _ik_content_plan_nagr;
		
		private System.Nullable<double> _f_hour_per_unit;
		
		private System.Nullable<int> _i_student_count;
		
		private int _ik_calc_unit;
		
		private byte _by_plan_number;
		
		private int _ik_id_prepod;
		
		private System.Nullable<byte> _commission_member;
		
		private EntitySet<Relation_event_plan_nagr> _Relation_event_plan_nagrs;
		
		private EntitySet<Relation_exam_plan_nagr> _Relation_exam_plan_nagrs;
		
		private EntityRef<Content_plan_nagr> _Content_plan_nagr;
		
		private EntityRef<Relation_kafedra_prep> _Relation_kafedra_prep;
		
		private EntityRef<Calc_unit_semestr> _Calc_unit_semestr;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_prepod_planChanging(int value);
    partial void Onik_prepod_planChanged();
    partial void Onik_content_plan_nagrChanging(int value);
    partial void Onik_content_plan_nagrChanged();
    partial void Onf_hour_per_unitChanging(System.Nullable<double> value);
    partial void Onf_hour_per_unitChanged();
    partial void Oni_student_countChanging(System.Nullable<int> value);
    partial void Oni_student_countChanged();
    partial void Onik_calc_unitChanging(int value);
    partial void Onik_calc_unitChanged();
    partial void Onby_plan_numberChanging(byte value);
    partial void Onby_plan_numberChanged();
    partial void Onik_id_prepodChanging(int value);
    partial void Onik_id_prepodChanged();
    partial void Oncommission_memberChanging(System.Nullable<byte> value);
    partial void Oncommission_memberChanged();
    #endregion
		
		public Prepod_plan_nagr()
		{
			this._Relation_event_plan_nagrs = new EntitySet<Relation_event_plan_nagr>(new Action<Relation_event_plan_nagr>(this.attach_Relation_event_plan_nagrs), new Action<Relation_event_plan_nagr>(this.detach_Relation_event_plan_nagrs));
			this._Relation_exam_plan_nagrs = new EntitySet<Relation_exam_plan_nagr>(new Action<Relation_exam_plan_nagr>(this.attach_Relation_exam_plan_nagrs), new Action<Relation_exam_plan_nagr>(this.detach_Relation_exam_plan_nagrs));
			this._Content_plan_nagr = default(EntityRef<Content_plan_nagr>);
			this._Relation_kafedra_prep = default(EntityRef<Relation_kafedra_prep>);
			this._Calc_unit_semestr = default(EntityRef<Calc_unit_semestr>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_prepod_plan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_prepod_plan
		{
			get
			{
				return this._ik_prepod_plan;
			}
			set
			{
				if ((this._ik_prepod_plan != value))
				{
					this.Onik_prepod_planChanging(value);
					this.SendPropertyChanging();
					this._ik_prepod_plan = value;
					this.SendPropertyChanged("ik_prepod_plan");
					this.Onik_prepod_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_content_plan_nagr", DbType="Int NOT NULL")]
		public int ik_content_plan_nagr
		{
			get
			{
				return this._ik_content_plan_nagr;
			}
			set
			{
				if ((this._ik_content_plan_nagr != value))
				{
					if (this._Content_plan_nagr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_content_plan_nagrChanging(value);
					this.SendPropertyChanging();
					this._ik_content_plan_nagr = value;
					this.SendPropertyChanged("ik_content_plan_nagr");
					this.Onik_content_plan_nagrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_hour_per_unit", DbType="Float")]
		public System.Nullable<double> f_hour_per_unit
		{
			get
			{
				return this._f_hour_per_unit;
			}
			set
			{
				if ((this._f_hour_per_unit != value))
				{
					this.Onf_hour_per_unitChanging(value);
					this.SendPropertyChanging();
					this._f_hour_per_unit = value;
					this.SendPropertyChanged("f_hour_per_unit");
					this.Onf_hour_per_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_student_count", DbType="Int")]
		public System.Nullable<int> i_student_count
		{
			get
			{
				return this._i_student_count;
			}
			set
			{
				if ((this._i_student_count != value))
				{
					this.Oni_student_countChanging(value);
					this.SendPropertyChanging();
					this._i_student_count = value;
					this.SendPropertyChanged("i_student_count");
					this.Oni_student_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL")]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					if (this._Calc_unit_semestr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_calc_unitChanging(value);
					this.SendPropertyChanging();
					this._ik_calc_unit = value;
					this.SendPropertyChanged("ik_calc_unit");
					this.Onik_calc_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_by_plan_number", DbType="TinyInt NOT NULL")]
		public byte by_plan_number
		{
			get
			{
				return this._by_plan_number;
			}
			set
			{
				if ((this._by_plan_number != value))
				{
					this.Onby_plan_numberChanging(value);
					this.SendPropertyChanging();
					this._by_plan_number = value;
					this.SendPropertyChanged("by_plan_number");
					this.Onby_plan_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int NOT NULL")]
		public int ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					if (this._Relation_kafedra_prep.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_id_prepodChanging(value);
					this.SendPropertyChanging();
					this._ik_id_prepod = value;
					this.SendPropertyChanged("ik_id_prepod");
					this.Onik_id_prepodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commission_member", DbType="TinyInt")]
		public System.Nullable<byte> commission_member
		{
			get
			{
				return this._commission_member;
			}
			set
			{
				if ((this._commission_member != value))
				{
					this.Oncommission_memberChanging(value);
					this.SendPropertyChanging();
					this._commission_member = value;
					this.SendPropertyChanged("commission_member");
					this.Oncommission_memberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_plan_nagr_Relation_event_plan_nagr", Storage="_Relation_event_plan_nagrs", ThisKey="ik_prepod_plan", OtherKey="ik_prepod_plan")]
		public EntitySet<Relation_event_plan_nagr> Relation_event_plan_nagrs
		{
			get
			{
				return this._Relation_event_plan_nagrs;
			}
			set
			{
				this._Relation_event_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_plan_nagr_Relation_exam_plan_nagr", Storage="_Relation_exam_plan_nagrs", ThisKey="ik_prepod_plan", OtherKey="ik_prepod_plan")]
		public EntitySet<Relation_exam_plan_nagr> Relation_exam_plan_nagrs
		{
			get
			{
				return this._Relation_exam_plan_nagrs;
			}
			set
			{
				this._Relation_exam_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_plan_nagr_Prepod_plan_nagr", Storage="_Content_plan_nagr", ThisKey="ik_content_plan_nagr", OtherKey="ik_content_plan_nagr", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Content_plan_nagr Content_plan_nagr
		{
			get
			{
				return this._Content_plan_nagr.Entity;
			}
			set
			{
				Content_plan_nagr previousValue = this._Content_plan_nagr.Entity;
				if (((previousValue != value) 
							|| (this._Content_plan_nagr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Content_plan_nagr.Entity = null;
						previousValue.Prepod_plan_nagrs.Remove(this);
					}
					this._Content_plan_nagr.Entity = value;
					if ((value != null))
					{
						value.Prepod_plan_nagrs.Add(this);
						this._ik_content_plan_nagr = value.ik_content_plan_nagr;
					}
					else
					{
						this._ik_content_plan_nagr = default(int);
					}
					this.SendPropertyChanged("Content_plan_nagr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_Prepod_plan_nagr", Storage="_Relation_kafedra_prep", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Relation_kafedra_prep Relation_kafedra_prep
		{
			get
			{
				return this._Relation_kafedra_prep.Entity;
			}
			set
			{
				Relation_kafedra_prep previousValue = this._Relation_kafedra_prep.Entity;
				if (((previousValue != value) 
							|| (this._Relation_kafedra_prep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_kafedra_prep.Entity = null;
						previousValue.Prepod_plan_nagrs.Remove(this);
					}
					this._Relation_kafedra_prep.Entity = value;
					if ((value != null))
					{
						value.Prepod_plan_nagrs.Add(this);
						this._ik_id_prepod = value.ik_id_prepod;
					}
					else
					{
						this._ik_id_prepod = default(int);
					}
					this.SendPropertyChanged("Relation_kafedra_prep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calc_unit_semestr_Prepod_plan_nagr", Storage="_Calc_unit_semestr", ThisKey="ik_calc_unit", OtherKey="ik_calc_unit", IsForeignKey=true)]
		public Calc_unit_semestr Calc_unit_semestr
		{
			get
			{
				return this._Calc_unit_semestr.Entity;
			}
			set
			{
				Calc_unit_semestr previousValue = this._Calc_unit_semestr.Entity;
				if (((previousValue != value) 
							|| (this._Calc_unit_semestr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calc_unit_semestr.Entity = null;
						previousValue.Prepod_plan_nagrs.Remove(this);
					}
					this._Calc_unit_semestr.Entity = value;
					if ((value != null))
					{
						value.Prepod_plan_nagrs.Add(this);
						this._ik_calc_unit = value.ik_calc_unit;
					}
					else
					{
						this._ik_calc_unit = default(int);
					}
					this.SendPropertyChanged("Calc_unit_semestr");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_event_plan_nagrs(Relation_event_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Prepod_plan_nagr = this;
		}
		
		private void detach_Relation_event_plan_nagrs(Relation_event_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Prepod_plan_nagr = null;
		}
		
		private void attach_Relation_exam_plan_nagrs(Relation_exam_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Prepod_plan_nagr = this;
		}
		
		private void detach_Relation_exam_plan_nagrs(Relation_exam_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Prepod_plan_nagr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepeatPattern")]
	public partial class RepeatPattern : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_repeat_pattern;
		
		private byte _ik_repeat_type;
		
		private int _iRepeat_frequency;
		
		private string _cRepeat_mask;
		
		private byte _ik_repeat_limit;
		
		private System.Nullable<int> _iRepeat_count;
		
		private System.Nullable<System.DateTime> _dFinal_date;
		
		private EntitySet<SheduleEvent> _SheduleEvents;
		
		private EntityRef<RepeatLimit> _RepeatLimit;
		
		private EntityRef<RepeatType> _RepeatType;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_repeat_patternChanging(int value);
    partial void Onik_repeat_patternChanged();
    partial void Onik_repeat_typeChanging(byte value);
    partial void Onik_repeat_typeChanged();
    partial void OniRepeat_frequencyChanging(int value);
    partial void OniRepeat_frequencyChanged();
    partial void OncRepeat_maskChanging(string value);
    partial void OncRepeat_maskChanged();
    partial void Onik_repeat_limitChanging(byte value);
    partial void Onik_repeat_limitChanged();
    partial void OniRepeat_countChanging(System.Nullable<int> value);
    partial void OniRepeat_countChanged();
    partial void OndFinal_dateChanging(System.Nullable<System.DateTime> value);
    partial void OndFinal_dateChanged();
    #endregion
		
		public RepeatPattern()
		{
			this._SheduleEvents = new EntitySet<SheduleEvent>(new Action<SheduleEvent>(this.attach_SheduleEvents), new Action<SheduleEvent>(this.detach_SheduleEvents));
			this._RepeatLimit = default(EntityRef<RepeatLimit>);
			this._RepeatType = default(EntityRef<RepeatType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_pattern", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_repeat_pattern
		{
			get
			{
				return this._ik_repeat_pattern;
			}
			set
			{
				if ((this._ik_repeat_pattern != value))
				{
					this.Onik_repeat_patternChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_pattern = value;
					this.SendPropertyChanged("ik_repeat_pattern");
					this.Onik_repeat_patternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_type", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_type
		{
			get
			{
				return this._ik_repeat_type;
			}
			set
			{
				if ((this._ik_repeat_type != value))
				{
					if (this._RepeatType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_repeat_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_type = value;
					this.SendPropertyChanged("ik_repeat_type");
					this.Onik_repeat_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_frequency", DbType="Int NOT NULL")]
		public int iRepeat_frequency
		{
			get
			{
				return this._iRepeat_frequency;
			}
			set
			{
				if ((this._iRepeat_frequency != value))
				{
					this.OniRepeat_frequencyChanging(value);
					this.SendPropertyChanging();
					this._iRepeat_frequency = value;
					this.SendPropertyChanged("iRepeat_frequency");
					this.OniRepeat_frequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cRepeat_mask", DbType="VarChar(10)")]
		public string cRepeat_mask
		{
			get
			{
				return this._cRepeat_mask;
			}
			set
			{
				if ((this._cRepeat_mask != value))
				{
					this.OncRepeat_maskChanging(value);
					this.SendPropertyChanging();
					this._cRepeat_mask = value;
					this.SendPropertyChanged("cRepeat_mask");
					this.OncRepeat_maskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_limit", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_limit
		{
			get
			{
				return this._ik_repeat_limit;
			}
			set
			{
				if ((this._ik_repeat_limit != value))
				{
					if (this._RepeatLimit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_repeat_limitChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_limit = value;
					this.SendPropertyChanged("ik_repeat_limit");
					this.Onik_repeat_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_count", DbType="Int")]
		public System.Nullable<int> iRepeat_count
		{
			get
			{
				return this._iRepeat_count;
			}
			set
			{
				if ((this._iRepeat_count != value))
				{
					this.OniRepeat_countChanging(value);
					this.SendPropertyChanging();
					this._iRepeat_count = value;
					this.SendPropertyChanged("iRepeat_count");
					this.OniRepeat_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dFinal_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dFinal_date
		{
			get
			{
				return this._dFinal_date;
			}
			set
			{
				if ((this._dFinal_date != value))
				{
					this.OndFinal_dateChanging(value);
					this.SendPropertyChanging();
					this._dFinal_date = value;
					this.SendPropertyChanged("dFinal_date");
					this.OndFinal_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatPattern_SheduleEvent", Storage="_SheduleEvents", ThisKey="ik_repeat_pattern", OtherKey="ik_repeat_pattern")]
		public EntitySet<SheduleEvent> SheduleEvents
		{
			get
			{
				return this._SheduleEvents;
			}
			set
			{
				this._SheduleEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatLimit_RepeatPattern", Storage="_RepeatLimit", ThisKey="ik_repeat_limit", OtherKey="ik_repeat_limit", IsForeignKey=true)]
		public RepeatLimit RepeatLimit
		{
			get
			{
				return this._RepeatLimit.Entity;
			}
			set
			{
				RepeatLimit previousValue = this._RepeatLimit.Entity;
				if (((previousValue != value) 
							|| (this._RepeatLimit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepeatLimit.Entity = null;
						previousValue.RepeatPatterns.Remove(this);
					}
					this._RepeatLimit.Entity = value;
					if ((value != null))
					{
						value.RepeatPatterns.Add(this);
						this._ik_repeat_limit = value.ik_repeat_limit;
					}
					else
					{
						this._ik_repeat_limit = default(byte);
					}
					this.SendPropertyChanged("RepeatLimit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatType_RepeatPattern", Storage="_RepeatType", ThisKey="ik_repeat_type", OtherKey="ik_repeat_type", IsForeignKey=true)]
		public RepeatType RepeatType
		{
			get
			{
				return this._RepeatType.Entity;
			}
			set
			{
				RepeatType previousValue = this._RepeatType.Entity;
				if (((previousValue != value) 
							|| (this._RepeatType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepeatType.Entity = null;
						previousValue.RepeatPatterns.Remove(this);
					}
					this._RepeatType.Entity = value;
					if ((value != null))
					{
						value.RepeatPatterns.Add(this);
						this._ik_repeat_type = value.ik_repeat_type;
					}
					else
					{
						this._ik_repeat_type = default(byte);
					}
					this.SendPropertyChanged("RepeatType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.RepeatPattern = this;
		}
		
		private void detach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.RepeatPattern = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepeatLimit")]
	public partial class RepeatLimit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ik_repeat_limit;
		
		private string _Cname_repeat_limit;
		
		private EntitySet<RepeatPattern> _RepeatPatterns;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_repeat_limitChanging(byte value);
    partial void Onik_repeat_limitChanged();
    partial void OnCname_repeat_limitChanging(string value);
    partial void OnCname_repeat_limitChanged();
    #endregion
		
		public RepeatLimit()
		{
			this._RepeatPatterns = new EntitySet<RepeatPattern>(new Action<RepeatPattern>(this.attach_RepeatPatterns), new Action<RepeatPattern>(this.detach_RepeatPatterns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_limit", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ik_repeat_limit
		{
			get
			{
				return this._ik_repeat_limit;
			}
			set
			{
				if ((this._ik_repeat_limit != value))
				{
					this.Onik_repeat_limitChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_limit = value;
					this.SendPropertyChanged("ik_repeat_limit");
					this.Onik_repeat_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_repeat_limit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_repeat_limit
		{
			get
			{
				return this._Cname_repeat_limit;
			}
			set
			{
				if ((this._Cname_repeat_limit != value))
				{
					this.OnCname_repeat_limitChanging(value);
					this.SendPropertyChanging();
					this._Cname_repeat_limit = value;
					this.SendPropertyChanged("Cname_repeat_limit");
					this.OnCname_repeat_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatLimit_RepeatPattern", Storage="_RepeatPatterns", ThisKey="ik_repeat_limit", OtherKey="ik_repeat_limit")]
		public EntitySet<RepeatPattern> RepeatPatterns
		{
			get
			{
				return this._RepeatPatterns;
			}
			set
			{
				this._RepeatPatterns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RepeatPatterns(RepeatPattern entity)
		{
			this.SendPropertyChanging();
			entity.RepeatLimit = this;
		}
		
		private void detach_RepeatPatterns(RepeatPattern entity)
		{
			this.SendPropertyChanging();
			entity.RepeatLimit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Content_plan_nagr")]
	public partial class Content_plan_nagr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_content_plan_nagr;
		
		private int _ik_plan_nagr;
		
		private int _ik_disc;
		
		private int _ik_vid_zanyat;
		
		private int _ik_shema_of_potok;
		
		private int _ik_vid_nagruzki;
		
		private System.Nullable<byte> _i_commission_count;
		
		private EntitySet<Prepod_plan_nagr> _Prepod_plan_nagrs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_content_plan_nagrChanging(int value);
    partial void Onik_content_plan_nagrChanged();
    partial void Onik_plan_nagrChanging(int value);
    partial void Onik_plan_nagrChanged();
    partial void Onik_discChanging(int value);
    partial void Onik_discChanged();
    partial void Onik_vid_zanyatChanging(int value);
    partial void Onik_vid_zanyatChanged();
    partial void Onik_shema_of_potokChanging(int value);
    partial void Onik_shema_of_potokChanged();
    partial void Onik_vid_nagruzkiChanging(int value);
    partial void Onik_vid_nagruzkiChanged();
    partial void Oni_commission_countChanging(System.Nullable<byte> value);
    partial void Oni_commission_countChanged();
    #endregion
		
		public Content_plan_nagr()
		{
			this._Prepod_plan_nagrs = new EntitySet<Prepod_plan_nagr>(new Action<Prepod_plan_nagr>(this.attach_Prepod_plan_nagrs), new Action<Prepod_plan_nagr>(this.detach_Prepod_plan_nagrs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_content_plan_nagr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_content_plan_nagr
		{
			get
			{
				return this._ik_content_plan_nagr;
			}
			set
			{
				if ((this._ik_content_plan_nagr != value))
				{
					this.Onik_content_plan_nagrChanging(value);
					this.SendPropertyChanging();
					this._ik_content_plan_nagr = value;
					this.SendPropertyChanged("ik_content_plan_nagr");
					this.Onik_content_plan_nagrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_plan_nagr", DbType="Int NOT NULL")]
		public int ik_plan_nagr
		{
			get
			{
				return this._ik_plan_nagr;
			}
			set
			{
				if ((this._ik_plan_nagr != value))
				{
					this.Onik_plan_nagrChanging(value);
					this.SendPropertyChanging();
					this._ik_plan_nagr = value;
					this.SendPropertyChanged("ik_plan_nagr");
					this.Onik_plan_nagrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int NOT NULL")]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					this.Onik_discChanging(value);
					this.SendPropertyChanging();
					this._ik_disc = value;
					this.SendPropertyChanged("ik_disc");
					this.Onik_discChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_zanyat", DbType="Int NOT NULL")]
		public int ik_vid_zanyat
		{
			get
			{
				return this._ik_vid_zanyat;
			}
			set
			{
				if ((this._ik_vid_zanyat != value))
				{
					this.Onik_vid_zanyatChanging(value);
					this.SendPropertyChanging();
					this._ik_vid_zanyat = value;
					this.SendPropertyChanged("ik_vid_zanyat");
					this.Onik_vid_zanyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shema_of_potok", DbType="Int NOT NULL")]
		public int ik_shema_of_potok
		{
			get
			{
				return this._ik_shema_of_potok;
			}
			set
			{
				if ((this._ik_shema_of_potok != value))
				{
					this.Onik_shema_of_potokChanging(value);
					this.SendPropertyChanging();
					this._ik_shema_of_potok = value;
					this.SendPropertyChanged("ik_shema_of_potok");
					this.Onik_shema_of_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_nagruzki", DbType="Int NOT NULL")]
		public int ik_vid_nagruzki
		{
			get
			{
				return this._ik_vid_nagruzki;
			}
			set
			{
				if ((this._ik_vid_nagruzki != value))
				{
					this.Onik_vid_nagruzkiChanging(value);
					this.SendPropertyChanging();
					this._ik_vid_nagruzki = value;
					this.SendPropertyChanged("ik_vid_nagruzki");
					this.Onik_vid_nagruzkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_commission_count", DbType="TinyInt")]
		public System.Nullable<byte> i_commission_count
		{
			get
			{
				return this._i_commission_count;
			}
			set
			{
				if ((this._i_commission_count != value))
				{
					this.Oni_commission_countChanging(value);
					this.SendPropertyChanging();
					this._i_commission_count = value;
					this.SendPropertyChanged("i_commission_count");
					this.Oni_commission_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Content_plan_nagr_Prepod_plan_nagr", Storage="_Prepod_plan_nagrs", ThisKey="ik_content_plan_nagr", OtherKey="ik_content_plan_nagr")]
		public EntitySet<Prepod_plan_nagr> Prepod_plan_nagrs
		{
			get
			{
				return this._Prepod_plan_nagrs;
			}
			set
			{
				this._Prepod_plan_nagrs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Content_plan_nagr = this;
		}
		
		private void detach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Content_plan_nagr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Potok")]
	public partial class Potok : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_potok;
		
		private string _Cname_potok;
		
		private int _ik_norm_of_time;
		
		private System.Nullable<int> _ik_uch_plan;
		
		private System.Nullable<int> _ik_year_enter;
		
		private EntitySet<Relation_potok_grup> _Relation_potok_grups;
		
		private EntitySet<Relation_potok_spec> _Relation_potok_specs;
		
		private EntitySet<Potok_semestr> _Potok_semestrs;
		
		private EntityRef<Year_uch_pl> _Year_uch_pl;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_potokChanging(int value);
    partial void Onik_potokChanged();
    partial void OnCname_potokChanging(string value);
    partial void OnCname_potokChanged();
    partial void Onik_norm_of_timeChanging(int value);
    partial void Onik_norm_of_timeChanged();
    partial void Onik_uch_planChanging(System.Nullable<int> value);
    partial void Onik_uch_planChanged();
    partial void Onik_year_enterChanging(System.Nullable<int> value);
    partial void Onik_year_enterChanged();
    #endregion
		
		public Potok()
		{
			this._Relation_potok_grups = new EntitySet<Relation_potok_grup>(new Action<Relation_potok_grup>(this.attach_Relation_potok_grups), new Action<Relation_potok_grup>(this.detach_Relation_potok_grups));
			this._Relation_potok_specs = new EntitySet<Relation_potok_spec>(new Action<Relation_potok_spec>(this.attach_Relation_potok_specs), new Action<Relation_potok_spec>(this.detach_Relation_potok_specs));
			this._Potok_semestrs = new EntitySet<Potok_semestr>(new Action<Potok_semestr>(this.attach_Potok_semestrs), new Action<Potok_semestr>(this.detach_Potok_semestrs));
			this._Year_uch_pl = default(EntityRef<Year_uch_pl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_potok
		{
			get
			{
				return this._ik_potok;
			}
			set
			{
				if ((this._ik_potok != value))
				{
					this.Onik_potokChanging(value);
					this.SendPropertyChanging();
					this._ik_potok = value;
					this.SendPropertyChanged("ik_potok");
					this.Onik_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_potok", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string Cname_potok
		{
			get
			{
				return this._Cname_potok;
			}
			set
			{
				if ((this._Cname_potok != value))
				{
					this.OnCname_potokChanging(value);
					this.SendPropertyChanging();
					this._Cname_potok = value;
					this.SendPropertyChanged("Cname_potok");
					this.OnCname_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_norm_of_time", DbType="Int NOT NULL")]
		public int ik_norm_of_time
		{
			get
			{
				return this._ik_norm_of_time;
			}
			set
			{
				if ((this._ik_norm_of_time != value))
				{
					this.Onik_norm_of_timeChanging(value);
					this.SendPropertyChanging();
					this._ik_norm_of_time = value;
					this.SendPropertyChanged("ik_norm_of_time");
					this.Onik_norm_of_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_uch_plan", DbType="Int")]
		public System.Nullable<int> ik_uch_plan
		{
			get
			{
				return this._ik_uch_plan;
			}
			set
			{
				if ((this._ik_uch_plan != value))
				{
					this.Onik_uch_planChanging(value);
					this.SendPropertyChanging();
					this._ik_uch_plan = value;
					this.SendPropertyChanged("ik_uch_plan");
					this.Onik_uch_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_year_enter", DbType="Int")]
		public System.Nullable<int> ik_year_enter
		{
			get
			{
				return this._ik_year_enter;
			}
			set
			{
				if ((this._ik_year_enter != value))
				{
					if (this._Year_uch_pl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_year_enterChanging(value);
					this.SendPropertyChanging();
					this._ik_year_enter = value;
					this.SendPropertyChanged("ik_year_enter");
					this.Onik_year_enterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Relation_potok_grup", Storage="_Relation_potok_grups", ThisKey="ik_potok", OtherKey="ik_potok")]
		public EntitySet<Relation_potok_grup> Relation_potok_grups
		{
			get
			{
				return this._Relation_potok_grups;
			}
			set
			{
				this._Relation_potok_grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Relation_potok_spec", Storage="_Relation_potok_specs", ThisKey="ik_potok", OtherKey="ik_potok")]
		public EntitySet<Relation_potok_spec> Relation_potok_specs
		{
			get
			{
				return this._Relation_potok_specs;
			}
			set
			{
				this._Relation_potok_specs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Potok_semestr", Storage="_Potok_semestrs", ThisKey="ik_potok", OtherKey="id_potok")]
		public EntitySet<Potok_semestr> Potok_semestrs
		{
			get
			{
				return this._Potok_semestrs;
			}
			set
			{
				this._Potok_semestrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Potok", Storage="_Year_uch_pl", ThisKey="ik_year_enter", OtherKey="ik_year_uch_pl", IsForeignKey=true)]
		public Year_uch_pl Year_uch_pl
		{
			get
			{
				return this._Year_uch_pl.Entity;
			}
			set
			{
				Year_uch_pl previousValue = this._Year_uch_pl.Entity;
				if (((previousValue != value) 
							|| (this._Year_uch_pl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year_uch_pl.Entity = null;
						previousValue.Potoks.Remove(this);
					}
					this._Year_uch_pl.Entity = value;
					if ((value != null))
					{
						value.Potoks.Add(this);
						this._ik_year_enter = value.ik_year_uch_pl;
					}
					else
					{
						this._ik_year_enter = default(Nullable<int>);
					}
					this.SendPropertyChanged("Year_uch_pl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_potok_grups(Relation_potok_grup entity)
		{
			this.SendPropertyChanging();
			entity.Potok = this;
		}
		
		private void detach_Relation_potok_grups(Relation_potok_grup entity)
		{
			this.SendPropertyChanging();
			entity.Potok = null;
		}
		
		private void attach_Relation_potok_specs(Relation_potok_spec entity)
		{
			this.SendPropertyChanging();
			entity.Potok = this;
		}
		
		private void detach_Relation_potok_specs(Relation_potok_spec entity)
		{
			this.SendPropertyChanging();
			entity.Potok = null;
		}
		
		private void attach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Potok = this;
		}
		
		private void detach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Potok = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shema_decompose")]
	public partial class Shema_decompose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ik_decompose_type;
		
		private string _cName_decompose;
		
		private EntitySet<Potok_semestr_shema> _Potok_semestr_shemas;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_decompose_typeChanging(byte value);
    partial void Onik_decompose_typeChanged();
    partial void OncName_decomposeChanging(string value);
    partial void OncName_decomposeChanged();
    #endregion
		
		public Shema_decompose()
		{
			this._Potok_semestr_shemas = new EntitySet<Potok_semestr_shema>(new Action<Potok_semestr_shema>(this.attach_Potok_semestr_shemas), new Action<Potok_semestr_shema>(this.detach_Potok_semestr_shemas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_decompose_type", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ik_decompose_type
		{
			get
			{
				return this._ik_decompose_type;
			}
			set
			{
				if ((this._ik_decompose_type != value))
				{
					this.Onik_decompose_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_decompose_type = value;
					this.SendPropertyChanged("ik_decompose_type");
					this.Onik_decompose_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_decompose", DbType="VarChar(30)")]
		public string cName_decompose
		{
			get
			{
				return this._cName_decompose;
			}
			set
			{
				if ((this._cName_decompose != value))
				{
					this.OncName_decomposeChanging(value);
					this.SendPropertyChanging();
					this._cName_decompose = value;
					this.SendPropertyChanged("cName_decompose");
					this.OncName_decomposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shema_decompose_Potok_semestr_shema", Storage="_Potok_semestr_shemas", ThisKey="ik_decompose_type", OtherKey="ik_decompose_type")]
		public EntitySet<Potok_semestr_shema> Potok_semestr_shemas
		{
			get
			{
				return this._Potok_semestr_shemas;
			}
			set
			{
				this._Potok_semestr_shemas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Potok_semestr_shemas(Potok_semestr_shema entity)
		{
			this.SendPropertyChanging();
			entity.Shema_decompose = this;
		}
		
		private void detach_Potok_semestr_shemas(Potok_semestr_shema entity)
		{
			this.SendPropertyChanging();
			entity.Shema_decompose = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_potok_grup")]
	public partial class Relation_potok_grup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_potok;
		
		private int _ik_grup;
		
		private EntityRef<Potok> _Potok;
		
		private EntityRef<Grup> _Grup;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_potokChanging(int value);
    partial void Onik_potokChanged();
    partial void Onik_grupChanging(int value);
    partial void Onik_grupChanged();
    #endregion
		
		public Relation_potok_grup()
		{
			this._Potok = default(EntityRef<Potok>);
			this._Grup = default(EntityRef<Grup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_potok
		{
			get
			{
				return this._ik_potok;
			}
			set
			{
				if ((this._ik_potok != value))
				{
					if (this._Potok.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_potokChanging(value);
					this.SendPropertyChanging();
					this._ik_potok = value;
					this.SendPropertyChanged("ik_potok");
					this.Onik_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_grup", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_grup
		{
			get
			{
				return this._ik_grup;
			}
			set
			{
				if ((this._ik_grup != value))
				{
					if (this._Grup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_grupChanging(value);
					this.SendPropertyChanging();
					this._ik_grup = value;
					this.SendPropertyChanged("ik_grup");
					this.Onik_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Relation_potok_grup", Storage="_Potok", ThisKey="ik_potok", OtherKey="ik_potok", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Potok Potok
		{
			get
			{
				return this._Potok.Entity;
			}
			set
			{
				Potok previousValue = this._Potok.Entity;
				if (((previousValue != value) 
							|| (this._Potok.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Potok.Entity = null;
						previousValue.Relation_potok_grups.Remove(this);
					}
					this._Potok.Entity = value;
					if ((value != null))
					{
						value.Relation_potok_grups.Add(this);
						this._ik_potok = value.ik_potok;
					}
					else
					{
						this._ik_potok = default(int);
					}
					this.SendPropertyChanged("Potok");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Relation_potok_grup", Storage="_Grup", ThisKey="ik_grup", OtherKey="Ik_grup", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Grup Grup
		{
			get
			{
				return this._Grup.Entity;
			}
			set
			{
				Grup previousValue = this._Grup.Entity;
				if (((previousValue != value) 
							|| (this._Grup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grup.Entity = null;
						previousValue.Relation_potok_grups.Remove(this);
					}
					this._Grup.Entity = value;
					if ((value != null))
					{
						value.Relation_potok_grups.Add(this);
						this._ik_grup = value.Ik_grup;
					}
					else
					{
						this._ik_grup = default(int);
					}
					this.SendPropertyChanged("Grup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grup")]
	public partial class Grup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_grup;
		
		private int _ik_spec_fac;
		
		private string _Cname_grup;
		
		private System.Nullable<int> _Ik_uch_plan;
		
		private System.Nullable<int> _nYear_post;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateExit;
		
		private EntitySet<Relation_calc_unit_grup> _Relation_calc_unit_grups;
		
		private EntitySet<Relation_potok_grup> _Relation_potok_grups;
		
		private EntitySet<Calc_unit_grup> _Calc_unit_grups;
		
		private EntityRef<Relation_spec_fac> _Relation_spec_fac;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_grupChanging(int value);
    partial void OnIk_grupChanged();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void OnCname_grupChanging(string value);
    partial void OnCname_grupChanged();
    partial void OnIk_uch_planChanging(System.Nullable<int> value);
    partial void OnIk_uch_planChanged();
    partial void OnnYear_postChanging(System.Nullable<int> value);
    partial void OnnYear_postChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExitChanged();
    #endregion
		
		public Grup()
		{
			this._Relation_calc_unit_grups = new EntitySet<Relation_calc_unit_grup>(new Action<Relation_calc_unit_grup>(this.attach_Relation_calc_unit_grups), new Action<Relation_calc_unit_grup>(this.detach_Relation_calc_unit_grups));
			this._Relation_potok_grups = new EntitySet<Relation_potok_grup>(new Action<Relation_potok_grup>(this.attach_Relation_potok_grups), new Action<Relation_potok_grup>(this.detach_Relation_potok_grups));
			this._Calc_unit_grups = new EntitySet<Calc_unit_grup>(new Action<Calc_unit_grup>(this.attach_Calc_unit_grups), new Action<Calc_unit_grup>(this.detach_Calc_unit_grups));
			this._Relation_spec_fac = default(EntityRef<Relation_spec_fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grup", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_grup
		{
			get
			{
				return this._Ik_grup;
			}
			set
			{
				if ((this._Ik_grup != value))
				{
					this.OnIk_grupChanging(value);
					this.SendPropertyChanging();
					this._Ik_grup = value;
					this.SendPropertyChanged("Ik_grup");
					this.OnIk_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", DbType="Int NOT NULL")]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					if (this._Relation_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_grup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_grup
		{
			get
			{
				return this._Cname_grup;
			}
			set
			{
				if ((this._Cname_grup != value))
				{
					this.OnCname_grupChanging(value);
					this.SendPropertyChanging();
					this._Cname_grup = value;
					this.SendPropertyChanged("Cname_grup");
					this.OnCname_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_uch_plan", DbType="Int")]
		public System.Nullable<int> Ik_uch_plan
		{
			get
			{
				return this._Ik_uch_plan;
			}
			set
			{
				if ((this._Ik_uch_plan != value))
				{
					this.OnIk_uch_planChanging(value);
					this.SendPropertyChanging();
					this._Ik_uch_plan = value;
					this.SendPropertyChanged("Ik_uch_plan");
					this.OnIk_uch_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nYear_post", DbType="Int")]
		public System.Nullable<int> nYear_post
		{
			get
			{
				return this._nYear_post;
			}
			set
			{
				if ((this._nYear_post != value))
				{
					this.OnnYear_postChanging(value);
					this.SendPropertyChanging();
					this._nYear_post = value;
					this.SendPropertyChanged("nYear_post");
					this.OnnYear_postChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateExit
		{
			get
			{
				return this._DateExit;
			}
			set
			{
				if ((this._DateExit != value))
				{
					this.OnDateExitChanging(value);
					this.SendPropertyChanging();
					this._DateExit = value;
					this.SendPropertyChanged("DateExit");
					this.OnDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Relation_calc_unit_grup", Storage="_Relation_calc_unit_grups", ThisKey="Ik_grup", OtherKey="ik_grup")]
		public EntitySet<Relation_calc_unit_grup> Relation_calc_unit_grups
		{
			get
			{
				return this._Relation_calc_unit_grups;
			}
			set
			{
				this._Relation_calc_unit_grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Relation_potok_grup", Storage="_Relation_potok_grups", ThisKey="Ik_grup", OtherKey="ik_grup")]
		public EntitySet<Relation_potok_grup> Relation_potok_grups
		{
			get
			{
				return this._Relation_potok_grups;
			}
			set
			{
				this._Relation_potok_grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Calc_unit_grup", Storage="_Calc_unit_grups", ThisKey="Ik_grup", OtherKey="Ik_grup")]
		public EntitySet<Calc_unit_grup> Calc_unit_grups
		{
			get
			{
				return this._Calc_unit_grups;
			}
			set
			{
				this._Calc_unit_grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Grup", Storage="_Relation_spec_fac", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac", IsForeignKey=true)]
		public Relation_spec_fac Relation_spec_fac
		{
			get
			{
				return this._Relation_spec_fac.Entity;
			}
			set
			{
				Relation_spec_fac previousValue = this._Relation_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._Relation_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_spec_fac.Entity = null;
						previousValue.Grups.Remove(this);
					}
					this._Relation_spec_fac.Entity = value;
					if ((value != null))
					{
						value.Grups.Add(this);
						this._ik_spec_fac = value.ik_spec_fac;
					}
					else
					{
						this._ik_spec_fac = default(int);
					}
					this.SendPropertyChanged("Relation_spec_fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_calc_unit_grups(Relation_calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = this;
		}
		
		private void detach_Relation_calc_unit_grups(Relation_calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = null;
		}
		
		private void attach_Relation_potok_grups(Relation_potok_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = this;
		}
		
		private void detach_Relation_potok_grups(Relation_potok_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = null;
		}
		
		private void attach_Calc_unit_grups(Calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = this;
		}
		
		private void detach_Calc_unit_grups(Calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prepod")]
	public partial class Prepod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itab_n;
		
		private System.Nullable<int> _ik_rank;
		
		private System.Nullable<int> _ik_degree;
		
		private string _prepLogin;
		
		private decimal _nCode;
		
		private EntitySet<Relation_kafedra_prep> _Relation_kafedra_preps;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<PrepodRank> _PrepodRank;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onitab_nChanging(int value);
    partial void Onitab_nChanged();
    partial void Onik_rankChanging(System.Nullable<int> value);
    partial void Onik_rankChanged();
    partial void Onik_degreeChanging(System.Nullable<int> value);
    partial void Onik_degreeChanged();
    partial void OnprepLoginChanging(string value);
    partial void OnprepLoginChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    #endregion
		
		public Prepod()
		{
			this._Relation_kafedra_preps = new EntitySet<Relation_kafedra_prep>(new Action<Relation_kafedra_prep>(this.attach_Relation_kafedra_preps), new Action<Relation_kafedra_prep>(this.detach_Relation_kafedra_preps));
			this._Person = default(EntityRef<Person>);
			this._PrepodRank = default(EntityRef<PrepodRank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_rank", DbType="Int")]
		public System.Nullable<int> ik_rank
		{
			get
			{
				return this._ik_rank;
			}
			set
			{
				if ((this._ik_rank != value))
				{
					if (this._PrepodRank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_rankChanging(value);
					this.SendPropertyChanging();
					this._ik_rank = value;
					this.SendPropertyChanged("ik_rank");
					this.Onik_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_degree", DbType="Int")]
		public System.Nullable<int> ik_degree
		{
			get
			{
				return this._ik_degree;
			}
			set
			{
				if ((this._ik_degree != value))
				{
					this.Onik_degreeChanging(value);
					this.SendPropertyChanging();
					this._ik_degree = value;
					this.SendPropertyChanged("ik_degree");
					this.Onik_degreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prepLogin", DbType="VarChar(50)")]
		public string prepLogin
		{
			get
			{
				return this._prepLogin;
			}
			set
			{
				if ((this._prepLogin != value))
				{
					this.OnprepLoginChanging(value);
					this.SendPropertyChanging();
					this._prepLogin = value;
					this.SendPropertyChanged("prepLogin");
					this.OnprepLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_Relation_kafedra_prep", Storage="_Relation_kafedra_preps", ThisKey="itab_n", OtherKey="itab_n")]
		public EntitySet<Relation_kafedra_prep> Relation_kafedra_preps
		{
			get
			{
				return this._Relation_kafedra_preps;
			}
			set
			{
				this._Relation_kafedra_preps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Prepod", Storage="_Person", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Prepods.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Prepods.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrepodRank_Prepod", Storage="_PrepodRank", ThisKey="ik_rank", OtherKey="ik_rank", IsForeignKey=true)]
		public PrepodRank PrepodRank
		{
			get
			{
				return this._PrepodRank.Entity;
			}
			set
			{
				PrepodRank previousValue = this._PrepodRank.Entity;
				if (((previousValue != value) 
							|| (this._PrepodRank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrepodRank.Entity = null;
						previousValue.Prepods.Remove(this);
					}
					this._PrepodRank.Entity = value;
					if ((value != null))
					{
						value.Prepods.Add(this);
						this._ik_rank = value.ik_rank;
					}
					else
					{
						this._ik_rank = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrepodRank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_kafedra_preps(Relation_kafedra_prep entity)
		{
			this.SendPropertyChanging();
			entity.Prepod = this;
		}
		
		private void detach_Relation_kafedra_preps(Relation_kafedra_prep entity)
		{
			this.SendPropertyChanging();
			entity.Prepod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_kafedra_prep")]
	public partial class Relation_kafedra_prep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_kaf;
		
		private int _itab_n;
		
		private int _ik_work_type;
		
		private System.Nullable<int> _ik_capacity;
		
		private System.Nullable<byte> _ik_defence_fund;
		
		private System.Nullable<double> _f_rates;
		
		private int _ik_id_prepod;
		
		private System.Nullable<System.DateTime> _release_date;
		
		private EntitySet<SheduleEvent> _SheduleEvents;
		
		private EntitySet<SheduleExamination> _SheduleExaminations;
		
		private EntitySet<Prepod_plan_nagr> _Prepod_plan_nagrs;
		
		private EntityRef<Prepod> _Prepod;
		
		private EntityRef<kafedra> _kafedra;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_kafChanging(int value);
    partial void Onik_kafChanged();
    partial void Onitab_nChanging(int value);
    partial void Onitab_nChanged();
    partial void Onik_work_typeChanging(int value);
    partial void Onik_work_typeChanged();
    partial void Onik_capacityChanging(System.Nullable<int> value);
    partial void Onik_capacityChanged();
    partial void Onik_defence_fundChanging(System.Nullable<byte> value);
    partial void Onik_defence_fundChanged();
    partial void Onf_ratesChanging(System.Nullable<double> value);
    partial void Onf_ratesChanged();
    partial void Onik_id_prepodChanging(int value);
    partial void Onik_id_prepodChanged();
    partial void Onrelease_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrelease_dateChanged();
    #endregion
		
		public Relation_kafedra_prep()
		{
			this._SheduleEvents = new EntitySet<SheduleEvent>(new Action<SheduleEvent>(this.attach_SheduleEvents), new Action<SheduleEvent>(this.detach_SheduleEvents));
			this._SheduleExaminations = new EntitySet<SheduleExamination>(new Action<SheduleExamination>(this.attach_SheduleExaminations), new Action<SheduleExamination>(this.detach_SheduleExaminations));
			this._Prepod_plan_nagrs = new EntitySet<Prepod_plan_nagr>(new Action<Prepod_plan_nagr>(this.attach_Prepod_plan_nagrs), new Action<Prepod_plan_nagr>(this.detach_Prepod_plan_nagrs));
			this._Prepod = default(EntityRef<Prepod>);
			this._kafedra = default(EntityRef<kafedra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kaf", DbType="Int NOT NULL")]
		public int ik_kaf
		{
			get
			{
				return this._ik_kaf;
			}
			set
			{
				if ((this._ik_kaf != value))
				{
					if (this._kafedra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_kafChanging(value);
					this.SendPropertyChanging();
					this._ik_kaf = value;
					this.SendPropertyChanged("ik_kaf");
					this.Onik_kafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int NOT NULL")]
		public int itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					if (this._Prepod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_work_type", DbType="Int NOT NULL")]
		public int ik_work_type
		{
			get
			{
				return this._ik_work_type;
			}
			set
			{
				if ((this._ik_work_type != value))
				{
					this.Onik_work_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_work_type = value;
					this.SendPropertyChanged("ik_work_type");
					this.Onik_work_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_capacity", DbType="Int")]
		public System.Nullable<int> ik_capacity
		{
			get
			{
				return this._ik_capacity;
			}
			set
			{
				if ((this._ik_capacity != value))
				{
					this.Onik_capacityChanging(value);
					this.SendPropertyChanging();
					this._ik_capacity = value;
					this.SendPropertyChanged("ik_capacity");
					this.Onik_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_defence_fund", DbType="TinyInt")]
		public System.Nullable<byte> ik_defence_fund
		{
			get
			{
				return this._ik_defence_fund;
			}
			set
			{
				if ((this._ik_defence_fund != value))
				{
					this.Onik_defence_fundChanging(value);
					this.SendPropertyChanging();
					this._ik_defence_fund = value;
					this.SendPropertyChanged("ik_defence_fund");
					this.Onik_defence_fundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_rates", DbType="Float")]
		public System.Nullable<double> f_rates
		{
			get
			{
				return this._f_rates;
			}
			set
			{
				if ((this._f_rates != value))
				{
					this.Onf_ratesChanging(value);
					this.SendPropertyChanging();
					this._f_rates = value;
					this.SendPropertyChanged("f_rates");
					this.Onf_ratesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					this.Onik_id_prepodChanging(value);
					this.SendPropertyChanging();
					this._ik_id_prepod = value;
					this.SendPropertyChanged("ik_id_prepod");
					this.Onik_id_prepodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_release_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> release_date
		{
			get
			{
				return this._release_date;
			}
			set
			{
				if ((this._release_date != value))
				{
					this.Onrelease_dateChanging(value);
					this.SendPropertyChanging();
					this._release_date = value;
					this.SendPropertyChanged("release_date");
					this.Onrelease_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_SheduleEvent", Storage="_SheduleEvents", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod")]
		public EntitySet<SheduleEvent> SheduleEvents
		{
			get
			{
				return this._SheduleEvents;
			}
			set
			{
				this._SheduleEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_SheduleExamination", Storage="_SheduleExaminations", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod")]
		public EntitySet<SheduleExamination> SheduleExaminations
		{
			get
			{
				return this._SheduleExaminations;
			}
			set
			{
				this._SheduleExaminations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_kafedra_prep_Prepod_plan_nagr", Storage="_Prepod_plan_nagrs", ThisKey="ik_id_prepod", OtherKey="ik_id_prepod")]
		public EntitySet<Prepod_plan_nagr> Prepod_plan_nagrs
		{
			get
			{
				return this._Prepod_plan_nagrs;
			}
			set
			{
				this._Prepod_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prepod_Relation_kafedra_prep", Storage="_Prepod", ThisKey="itab_n", OtherKey="itab_n", IsForeignKey=true)]
		public Prepod Prepod
		{
			get
			{
				return this._Prepod.Entity;
			}
			set
			{
				Prepod previousValue = this._Prepod.Entity;
				if (((previousValue != value) 
							|| (this._Prepod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prepod.Entity = null;
						previousValue.Relation_kafedra_preps.Remove(this);
					}
					this._Prepod.Entity = value;
					if ((value != null))
					{
						value.Relation_kafedra_preps.Add(this);
						this._itab_n = value.itab_n;
					}
					else
					{
						this._itab_n = default(int);
					}
					this.SendPropertyChanged("Prepod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kafedra_Relation_kafedra_prep", Storage="_kafedra", ThisKey="ik_kaf", OtherKey="ik_kaf", IsForeignKey=true)]
		public kafedra kafedra
		{
			get
			{
				return this._kafedra.Entity;
			}
			set
			{
				kafedra previousValue = this._kafedra.Entity;
				if (((previousValue != value) 
							|| (this._kafedra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._kafedra.Entity = null;
						previousValue.Relation_kafedra_preps.Remove(this);
					}
					this._kafedra.Entity = value;
					if ((value != null))
					{
						value.Relation_kafedra_preps.Add(this);
						this._ik_kaf = value.ik_kaf;
					}
					else
					{
						this._ik_kaf = default(int);
					}
					this.SendPropertyChanged("kafedra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = this;
		}
		
		private void detach_SheduleEvents(SheduleEvent entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = null;
		}
		
		private void attach_SheduleExaminations(SheduleExamination entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = this;
		}
		
		private void detach_SheduleExaminations(SheduleExamination entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = null;
		}
		
		private void attach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = this;
		}
		
		private void detach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Relation_kafedra_prep = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _nCode;
		
		private string _Clastname;
		
		private string _Cfirstname;
		
		private string _Cotch;
		
		private System.Nullable<System.DateTime> _Dd_birth;
		
		private string _Cplacebirth;
		
		private System.Nullable<bool> _Linval;
		
		private System.Nullable<bool> _Ldeti;
		
		private System.Nullable<bool> _Lrab;
		
		private System.Nullable<bool> _lSex;
		
		private System.Nullable<bool> _Lobchegit;
		
		private string _cSotTel;
		
		private string _ctelefon;
		
		private string _cEmail;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<int> _Ik_grazd;
		
		private System.Nullable<int> _Ik_nac;
		
		private System.Nullable<int> _Ik_sem_pol;
		
		private string _cInn;
		
		private string _cStrax;
		
		private System.Nullable<int> _ik_voen_zvanie;
		
		private System.Nullable<int> _itab_n;
		
		private EntitySet<Prepod> _Prepods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    partial void OnClastnameChanging(string value);
    partial void OnClastnameChanged();
    partial void OnCfirstnameChanging(string value);
    partial void OnCfirstnameChanged();
    partial void OnCotchChanging(string value);
    partial void OnCotchChanged();
    partial void OnDd_birthChanging(System.Nullable<System.DateTime> value);
    partial void OnDd_birthChanged();
    partial void OnCplacebirthChanging(string value);
    partial void OnCplacebirthChanged();
    partial void OnLinvalChanging(System.Nullable<bool> value);
    partial void OnLinvalChanged();
    partial void OnLdetiChanging(System.Nullable<bool> value);
    partial void OnLdetiChanged();
    partial void OnLrabChanging(System.Nullable<bool> value);
    partial void OnLrabChanged();
    partial void OnlSexChanging(System.Nullable<bool> value);
    partial void OnlSexChanged();
    partial void OnLobchegitChanging(System.Nullable<bool> value);
    partial void OnLobchegitChanged();
    partial void OncSotTelChanging(string value);
    partial void OncSotTelChanged();
    partial void OnctelefonChanging(string value);
    partial void OnctelefonChanged();
    partial void OncEmailChanging(string value);
    partial void OncEmailChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnIk_grazdChanging(System.Nullable<int> value);
    partial void OnIk_grazdChanged();
    partial void OnIk_nacChanging(System.Nullable<int> value);
    partial void OnIk_nacChanged();
    partial void OnIk_sem_polChanging(System.Nullable<int> value);
    partial void OnIk_sem_polChanged();
    partial void OncInnChanging(string value);
    partial void OncInnChanged();
    partial void OncStraxChanging(string value);
    partial void OncStraxChanged();
    partial void Onik_voen_zvanieChanging(System.Nullable<int> value);
    partial void Onik_voen_zvanieChanged();
    partial void Onitab_nChanging(System.Nullable<int> value);
    partial void Onitab_nChanged();
    #endregion
		
		public Person()
		{
			this._Prepods = new EntitySet<Prepod>(new Action<Prepod>(this.attach_Prepods), new Action<Prepod>(this.detach_Prepods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Clastname
		{
			get
			{
				return this._Clastname;
			}
			set
			{
				if ((this._Clastname != value))
				{
					this.OnClastnameChanging(value);
					this.SendPropertyChanging();
					this._Clastname = value;
					this.SendPropertyChanged("Clastname");
					this.OnClastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cfirstname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cfirstname
		{
			get
			{
				return this._Cfirstname;
			}
			set
			{
				if ((this._Cfirstname != value))
				{
					this.OnCfirstnameChanging(value);
					this.SendPropertyChanging();
					this._Cfirstname = value;
					this.SendPropertyChanged("Cfirstname");
					this.OnCfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotch", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cotch
		{
			get
			{
				return this._Cotch;
			}
			set
			{
				if ((this._Cotch != value))
				{
					this.OnCotchChanging(value);
					this.SendPropertyChanging();
					this._Cotch = value;
					this.SendPropertyChanged("Cotch");
					this.OnCotchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dd_birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dd_birth
		{
			get
			{
				return this._Dd_birth;
			}
			set
			{
				if ((this._Dd_birth != value))
				{
					this.OnDd_birthChanging(value);
					this.SendPropertyChanging();
					this._Dd_birth = value;
					this.SendPropertyChanged("Dd_birth");
					this.OnDd_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cplacebirth", DbType="VarChar(300)")]
		public string Cplacebirth
		{
			get
			{
				return this._Cplacebirth;
			}
			set
			{
				if ((this._Cplacebirth != value))
				{
					this.OnCplacebirthChanging(value);
					this.SendPropertyChanging();
					this._Cplacebirth = value;
					this.SendPropertyChanged("Cplacebirth");
					this.OnCplacebirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linval", DbType="Bit")]
		public System.Nullable<bool> Linval
		{
			get
			{
				return this._Linval;
			}
			set
			{
				if ((this._Linval != value))
				{
					this.OnLinvalChanging(value);
					this.SendPropertyChanging();
					this._Linval = value;
					this.SendPropertyChanged("Linval");
					this.OnLinvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ldeti", DbType="Bit")]
		public System.Nullable<bool> Ldeti
		{
			get
			{
				return this._Ldeti;
			}
			set
			{
				if ((this._Ldeti != value))
				{
					this.OnLdetiChanging(value);
					this.SendPropertyChanging();
					this._Ldeti = value;
					this.SendPropertyChanged("Ldeti");
					this.OnLdetiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lrab", DbType="Bit")]
		public System.Nullable<bool> Lrab
		{
			get
			{
				return this._Lrab;
			}
			set
			{
				if ((this._Lrab != value))
				{
					this.OnLrabChanging(value);
					this.SendPropertyChanging();
					this._Lrab = value;
					this.SendPropertyChanged("Lrab");
					this.OnLrabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lSex", DbType="Bit")]
		public System.Nullable<bool> lSex
		{
			get
			{
				return this._lSex;
			}
			set
			{
				if ((this._lSex != value))
				{
					this.OnlSexChanging(value);
					this.SendPropertyChanging();
					this._lSex = value;
					this.SendPropertyChanged("lSex");
					this.OnlSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lobchegit", DbType="Bit")]
		public System.Nullable<bool> Lobchegit
		{
			get
			{
				return this._Lobchegit;
			}
			set
			{
				if ((this._Lobchegit != value))
				{
					this.OnLobchegitChanging(value);
					this.SendPropertyChanging();
					this._Lobchegit = value;
					this.SendPropertyChanged("Lobchegit");
					this.OnLobchegitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cSotTel", DbType="VarChar(50)")]
		public string cSotTel
		{
			get
			{
				return this._cSotTel;
			}
			set
			{
				if ((this._cSotTel != value))
				{
					this.OncSotTelChanging(value);
					this.SendPropertyChanging();
					this._cSotTel = value;
					this.SendPropertyChanged("cSotTel");
					this.OncSotTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctelefon", DbType="VarChar(20)")]
		public string ctelefon
		{
			get
			{
				return this._ctelefon;
			}
			set
			{
				if ((this._ctelefon != value))
				{
					this.OnctelefonChanging(value);
					this.SendPropertyChanging();
					this._ctelefon = value;
					this.SendPropertyChanged("ctelefon");
					this.OnctelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cEmail", DbType="VarChar(50)")]
		public string cEmail
		{
			get
			{
				return this._cEmail;
			}
			set
			{
				if ((this._cEmail != value))
				{
					this.OncEmailChanging(value);
					this.SendPropertyChanging();
					this._cEmail = value;
					this.SendPropertyChanged("cEmail");
					this.OncEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grazd", DbType="Int")]
		public System.Nullable<int> Ik_grazd
		{
			get
			{
				return this._Ik_grazd;
			}
			set
			{
				if ((this._Ik_grazd != value))
				{
					this.OnIk_grazdChanging(value);
					this.SendPropertyChanging();
					this._Ik_grazd = value;
					this.SendPropertyChanged("Ik_grazd");
					this.OnIk_grazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_nac", DbType="Int")]
		public System.Nullable<int> Ik_nac
		{
			get
			{
				return this._Ik_nac;
			}
			set
			{
				if ((this._Ik_nac != value))
				{
					this.OnIk_nacChanging(value);
					this.SendPropertyChanging();
					this._Ik_nac = value;
					this.SendPropertyChanged("Ik_nac");
					this.OnIk_nacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_sem_pol", DbType="Int")]
		public System.Nullable<int> Ik_sem_pol
		{
			get
			{
				return this._Ik_sem_pol;
			}
			set
			{
				if ((this._Ik_sem_pol != value))
				{
					this.OnIk_sem_polChanging(value);
					this.SendPropertyChanging();
					this._Ik_sem_pol = value;
					this.SendPropertyChanged("Ik_sem_pol");
					this.OnIk_sem_polChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cInn", DbType="VarChar(20)")]
		public string cInn
		{
			get
			{
				return this._cInn;
			}
			set
			{
				if ((this._cInn != value))
				{
					this.OncInnChanging(value);
					this.SendPropertyChanging();
					this._cInn = value;
					this.SendPropertyChanged("cInn");
					this.OncInnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStrax", DbType="VarChar(20)")]
		public string cStrax
		{
			get
			{
				return this._cStrax;
			}
			set
			{
				if ((this._cStrax != value))
				{
					this.OncStraxChanging(value);
					this.SendPropertyChanging();
					this._cStrax = value;
					this.SendPropertyChanged("cStrax");
					this.OncStraxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_voen_zvanie", DbType="Int")]
		public System.Nullable<int> ik_voen_zvanie
		{
			get
			{
				return this._ik_voen_zvanie;
			}
			set
			{
				if ((this._ik_voen_zvanie != value))
				{
					this.Onik_voen_zvanieChanging(value);
					this.SendPropertyChanging();
					this._ik_voen_zvanie = value;
					this.SendPropertyChanged("ik_voen_zvanie");
					this.Onik_voen_zvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int")]
		public System.Nullable<int> itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Prepod", Storage="_Prepods", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<Prepod> Prepods
		{
			get
			{
				return this._Prepods;
			}
			set
			{
				this._Prepods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prepods(Prepod entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Prepods(Prepod entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fac")]
	public partial class Fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_fac;
		
		private string _Cname_fac;
		
		private string _Cshort_name_fac;
		
		private System.Nullable<System.DateTime> _fDateExit;
		
		private System.Nullable<bool> _bit_calc_nagr;
		
		private EntitySet<Relation_spec_fac> _Relation_spec_facs;
		
		private EntitySet<kafedra> _kafedras;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_facChanging(int value);
    partial void OnIk_facChanged();
    partial void OnCname_facChanging(string value);
    partial void OnCname_facChanged();
    partial void OnCshort_name_facChanging(string value);
    partial void OnCshort_name_facChanged();
    partial void OnfDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnfDateExitChanged();
    partial void Onbit_calc_nagrChanging(System.Nullable<bool> value);
    partial void Onbit_calc_nagrChanged();
    #endregion
		
		public Fac()
		{
			this._Relation_spec_facs = new EntitySet<Relation_spec_fac>(new Action<Relation_spec_fac>(this.attach_Relation_spec_facs), new Action<Relation_spec_fac>(this.detach_Relation_spec_facs));
			this._kafedras = new EntitySet<kafedra>(new Action<kafedra>(this.attach_kafedras), new Action<kafedra>(this.detach_kafedras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_fac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_fac
		{
			get
			{
				return this._Ik_fac;
			}
			set
			{
				if ((this._Ik_fac != value))
				{
					this.OnIk_facChanging(value);
					this.SendPropertyChanging();
					this._Ik_fac = value;
					this.SendPropertyChanged("Ik_fac");
					this.OnIk_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_fac", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_fac
		{
			get
			{
				return this._Cname_fac;
			}
			set
			{
				if ((this._Cname_fac != value))
				{
					this.OnCname_facChanging(value);
					this.SendPropertyChanging();
					this._Cname_fac = value;
					this.SendPropertyChanged("Cname_fac");
					this.OnCname_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cshort_name_fac", DbType="VarChar(20)")]
		public string Cshort_name_fac
		{
			get
			{
				return this._Cshort_name_fac;
			}
			set
			{
				if ((this._Cshort_name_fac != value))
				{
					this.OnCshort_name_facChanging(value);
					this.SendPropertyChanging();
					this._Cshort_name_fac = value;
					this.SendPropertyChanged("Cshort_name_fac");
					this.OnCshort_name_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> fDateExit
		{
			get
			{
				return this._fDateExit;
			}
			set
			{
				if ((this._fDateExit != value))
				{
					this.OnfDateExitChanging(value);
					this.SendPropertyChanging();
					this._fDateExit = value;
					this.SendPropertyChanged("fDateExit");
					this.OnfDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_calc_nagr", DbType="Bit")]
		public System.Nullable<bool> bit_calc_nagr
		{
			get
			{
				return this._bit_calc_nagr;
			}
			set
			{
				if ((this._bit_calc_nagr != value))
				{
					this.Onbit_calc_nagrChanging(value);
					this.SendPropertyChanging();
					this._bit_calc_nagr = value;
					this.SendPropertyChanged("bit_calc_nagr");
					this.Onbit_calc_nagrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Relation_spec_fac", Storage="_Relation_spec_facs", ThisKey="Ik_fac", OtherKey="ik_fac")]
		public EntitySet<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this._Relation_spec_facs;
			}
			set
			{
				this._Relation_spec_facs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_kafedra", Storage="_kafedras", ThisKey="Ik_fac", OtherKey="ik_fac")]
		public EntitySet<kafedra> kafedras
		{
			get
			{
				return this._kafedras;
			}
			set
			{
				this._kafedras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Fac = this;
		}
		
		private void detach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Fac = null;
		}
		
		private void attach_kafedras(kafedra entity)
		{
			this.SendPropertyChanging();
			entity.Fac = this;
		}
		
		private void detach_kafedras(kafedra entity)
		{
			this.SendPropertyChanging();
			entity.Fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_spec_fac")]
	public partial class Relation_spec_fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_spec_fac;
		
		private int _ik_spec;
		
		private int _ik_fac;
		
		private System.Nullable<int> _YearObuch;
		
		private System.Nullable<int> _ik_rule;
		
		private System.Nullable<int> _Ik_form_ed;
		
		private int _ik_kat_zaved;
		
		private EntitySet<Grup> _Grups;
		
		private EntitySet<Relation_potok_spec> _Relation_potok_specs;
		
		private EntitySet<Semester_length_exception> _Semester_length_exceptions;
		
		private EntityRef<Fac> _Fac;
		
		private EntityRef<Spec_stud> _Spec_stud;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void Onik_specChanging(int value);
    partial void Onik_specChanged();
    partial void Onik_facChanging(int value);
    partial void Onik_facChanged();
    partial void OnYearObuchChanging(System.Nullable<int> value);
    partial void OnYearObuchChanged();
    partial void Onik_ruleChanging(System.Nullable<int> value);
    partial void Onik_ruleChanged();
    partial void OnIk_form_edChanging(System.Nullable<int> value);
    partial void OnIk_form_edChanged();
    partial void Onik_kat_zavedChanging(int value);
    partial void Onik_kat_zavedChanged();
    #endregion
		
		public Relation_spec_fac()
		{
			this._Grups = new EntitySet<Grup>(new Action<Grup>(this.attach_Grups), new Action<Grup>(this.detach_Grups));
			this._Relation_potok_specs = new EntitySet<Relation_potok_spec>(new Action<Relation_potok_spec>(this.attach_Relation_potok_specs), new Action<Relation_potok_spec>(this.detach_Relation_potok_specs));
			this._Semester_length_exceptions = new EntitySet<Semester_length_exception>(new Action<Semester_length_exception>(this.attach_Semester_length_exceptions), new Action<Semester_length_exception>(this.detach_Semester_length_exceptions));
			this._Fac = default(EntityRef<Fac>);
			this._Spec_stud = default(EntityRef<Spec_stud>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec", DbType="Int NOT NULL")]
		public int ik_spec
		{
			get
			{
				return this._ik_spec;
			}
			set
			{
				if ((this._ik_spec != value))
				{
					if (this._Spec_stud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_specChanging(value);
					this.SendPropertyChanging();
					this._ik_spec = value;
					this.SendPropertyChanged("ik_spec");
					this.Onik_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int NOT NULL")]
		public int ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					if (this._Fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_facChanging(value);
					this.SendPropertyChanging();
					this._ik_fac = value;
					this.SendPropertyChanged("ik_fac");
					this.Onik_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearObuch", DbType="Int")]
		public System.Nullable<int> YearObuch
		{
			get
			{
				return this._YearObuch;
			}
			set
			{
				if ((this._YearObuch != value))
				{
					this.OnYearObuchChanging(value);
					this.SendPropertyChanging();
					this._YearObuch = value;
					this.SendPropertyChanged("YearObuch");
					this.OnYearObuchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_rule", DbType="Int")]
		public System.Nullable<int> ik_rule
		{
			get
			{
				return this._ik_rule;
			}
			set
			{
				if ((this._ik_rule != value))
				{
					this.Onik_ruleChanging(value);
					this.SendPropertyChanging();
					this._ik_rule = value;
					this.SendPropertyChanged("ik_rule");
					this.Onik_ruleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_form_ed", DbType="Int")]
		public System.Nullable<int> Ik_form_ed
		{
			get
			{
				return this._Ik_form_ed;
			}
			set
			{
				if ((this._Ik_form_ed != value))
				{
					this.OnIk_form_edChanging(value);
					this.SendPropertyChanging();
					this._Ik_form_ed = value;
					this.SendPropertyChanged("Ik_form_ed");
					this.OnIk_form_edChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zaved", DbType="Int NOT NULL")]
		public int ik_kat_zaved
		{
			get
			{
				return this._ik_kat_zaved;
			}
			set
			{
				if ((this._ik_kat_zaved != value))
				{
					this.Onik_kat_zavedChanging(value);
					this.SendPropertyChanging();
					this._ik_kat_zaved = value;
					this.SendPropertyChanged("ik_kat_zaved");
					this.Onik_kat_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Grup", Storage="_Grups", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac")]
		public EntitySet<Grup> Grups
		{
			get
			{
				return this._Grups;
			}
			set
			{
				this._Grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Relation_potok_spec", Storage="_Relation_potok_specs", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac")]
		public EntitySet<Relation_potok_spec> Relation_potok_specs
		{
			get
			{
				return this._Relation_potok_specs;
			}
			set
			{
				this._Relation_potok_specs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Semester_length_exception", Storage="_Semester_length_exceptions", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac")]
		public EntitySet<Semester_length_exception> Semester_length_exceptions
		{
			get
			{
				return this._Semester_length_exceptions;
			}
			set
			{
				this._Semester_length_exceptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Relation_spec_fac", Storage="_Fac", ThisKey="ik_fac", OtherKey="Ik_fac", IsForeignKey=true)]
		public Fac Fac
		{
			get
			{
				return this._Fac.Entity;
			}
			set
			{
				Fac previousValue = this._Fac.Entity;
				if (((previousValue != value) 
							|| (this._Fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fac.Entity = null;
						previousValue.Relation_spec_facs.Remove(this);
					}
					this._Fac.Entity = value;
					if ((value != null))
					{
						value.Relation_spec_facs.Add(this);
						this._ik_fac = value.Ik_fac;
					}
					else
					{
						this._ik_fac = default(int);
					}
					this.SendPropertyChanged("Fac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_stud_Relation_spec_fac", Storage="_Spec_stud", ThisKey="ik_spec", OtherKey="ik_spec", IsForeignKey=true)]
		public Spec_stud Spec_stud
		{
			get
			{
				return this._Spec_stud.Entity;
			}
			set
			{
				Spec_stud previousValue = this._Spec_stud.Entity;
				if (((previousValue != value) 
							|| (this._Spec_stud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spec_stud.Entity = null;
						previousValue.Relation_spec_facs.Remove(this);
					}
					this._Spec_stud.Entity = value;
					if ((value != null))
					{
						value.Relation_spec_facs.Add(this);
						this._ik_spec = value.ik_spec;
					}
					else
					{
						this._ik_spec = default(int);
					}
					this.SendPropertyChanged("Spec_stud");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Grups(Grup entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = this;
		}
		
		private void detach_Grups(Grup entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = null;
		}
		
		private void attach_Relation_potok_specs(Relation_potok_spec entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = this;
		}
		
		private void detach_Relation_potok_specs(Relation_potok_spec entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = null;
		}
		
		private void attach_Semester_length_exceptions(Semester_length_exception entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = this;
		}
		
		private void detach_Semester_length_exceptions(Semester_length_exception entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spec_stud")]
	public partial class Spec_stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_spec;
		
		private string _Cname_spec;
		
		private string _Cshort_spec;
		
		private string _Sh_spec;
		
		private System.Nullable<int> _ik_direction;
		
		private System.Nullable<int> _Ik_vip_dep;
		
		private System.Nullable<System.DateTime> _dDate_spec;
		
		private System.Nullable<decimal> _nN_prikaz;
		
		private System.Nullable<System.DateTime> _spDateExit;
		
		private string _Cname_qualif;
		
		private EntitySet<Relation_spec_fac> _Relation_spec_facs;
		
		private EntityRef<Direction> _Direction;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_specChanging(int value);
    partial void Onik_specChanged();
    partial void OnCname_specChanging(string value);
    partial void OnCname_specChanged();
    partial void OnCshort_specChanging(string value);
    partial void OnCshort_specChanged();
    partial void OnSh_specChanging(string value);
    partial void OnSh_specChanged();
    partial void Onik_directionChanging(System.Nullable<int> value);
    partial void Onik_directionChanged();
    partial void OnIk_vip_depChanging(System.Nullable<int> value);
    partial void OnIk_vip_depChanged();
    partial void OndDate_specChanging(System.Nullable<System.DateTime> value);
    partial void OndDate_specChanged();
    partial void OnnN_prikazChanging(System.Nullable<decimal> value);
    partial void OnnN_prikazChanged();
    partial void OnspDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnspDateExitChanged();
    partial void OnCname_qualifChanging(string value);
    partial void OnCname_qualifChanged();
    #endregion
		
		public Spec_stud()
		{
			this._Relation_spec_facs = new EntitySet<Relation_spec_fac>(new Action<Relation_spec_fac>(this.attach_Relation_spec_facs), new Action<Relation_spec_fac>(this.detach_Relation_spec_facs));
			this._Direction = default(EntityRef<Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_spec
		{
			get
			{
				return this._ik_spec;
			}
			set
			{
				if ((this._ik_spec != value))
				{
					this.Onik_specChanging(value);
					this.SendPropertyChanging();
					this._ik_spec = value;
					this.SendPropertyChanged("ik_spec");
					this.Onik_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_spec", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Cname_spec
		{
			get
			{
				return this._Cname_spec;
			}
			set
			{
				if ((this._Cname_spec != value))
				{
					this.OnCname_specChanging(value);
					this.SendPropertyChanging();
					this._Cname_spec = value;
					this.SendPropertyChanged("Cname_spec");
					this.OnCname_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cshort_spec", DbType="VarChar(10)")]
		public string Cshort_spec
		{
			get
			{
				return this._Cshort_spec;
			}
			set
			{
				if ((this._Cshort_spec != value))
				{
					this.OnCshort_specChanging(value);
					this.SendPropertyChanging();
					this._Cshort_spec = value;
					this.SendPropertyChanged("Cshort_spec");
					this.OnCshort_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sh_spec", DbType="VarChar(10)")]
		public string Sh_spec
		{
			get
			{
				return this._Sh_spec;
			}
			set
			{
				if ((this._Sh_spec != value))
				{
					this.OnSh_specChanging(value);
					this.SendPropertyChanging();
					this._Sh_spec = value;
					this.SendPropertyChanged("Sh_spec");
					this.OnSh_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_direction", DbType="Int")]
		public System.Nullable<int> ik_direction
		{
			get
			{
				return this._ik_direction;
			}
			set
			{
				if ((this._ik_direction != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_directionChanging(value);
					this.SendPropertyChanging();
					this._ik_direction = value;
					this.SendPropertyChanged("ik_direction");
					this.Onik_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_vip_dep", DbType="Int")]
		public System.Nullable<int> Ik_vip_dep
		{
			get
			{
				return this._Ik_vip_dep;
			}
			set
			{
				if ((this._Ik_vip_dep != value))
				{
					this.OnIk_vip_depChanging(value);
					this.SendPropertyChanging();
					this._Ik_vip_dep = value;
					this.SendPropertyChanged("Ik_vip_dep");
					this.OnIk_vip_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDate_spec", DbType="DateTime")]
		public System.Nullable<System.DateTime> dDate_spec
		{
			get
			{
				return this._dDate_spec;
			}
			set
			{
				if ((this._dDate_spec != value))
				{
					this.OndDate_specChanging(value);
					this.SendPropertyChanging();
					this._dDate_spec = value;
					this.SendPropertyChanged("dDate_spec");
					this.OndDate_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nN_prikaz", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> nN_prikaz
		{
			get
			{
				return this._nN_prikaz;
			}
			set
			{
				if ((this._nN_prikaz != value))
				{
					this.OnnN_prikazChanging(value);
					this.SendPropertyChanging();
					this._nN_prikaz = value;
					this.SendPropertyChanged("nN_prikaz");
					this.OnnN_prikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> spDateExit
		{
			get
			{
				return this._spDateExit;
			}
			set
			{
				if ((this._spDateExit != value))
				{
					this.OnspDateExitChanging(value);
					this.SendPropertyChanging();
					this._spDateExit = value;
					this.SendPropertyChanged("spDateExit");
					this.OnspDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_qualif", DbType="VarChar(50)")]
		public string Cname_qualif
		{
			get
			{
				return this._Cname_qualif;
			}
			set
			{
				if ((this._Cname_qualif != value))
				{
					this.OnCname_qualifChanging(value);
					this.SendPropertyChanging();
					this._Cname_qualif = value;
					this.SendPropertyChanged("Cname_qualif");
					this.OnCname_qualifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_stud_Relation_spec_fac", Storage="_Relation_spec_facs", ThisKey="ik_spec", OtherKey="ik_spec")]
		public EntitySet<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this._Relation_spec_facs;
			}
			set
			{
				this._Relation_spec_facs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_Spec_stud", Storage="_Direction", ThisKey="ik_direction", OtherKey="ik_direction", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.Spec_studs.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.Spec_studs.Add(this);
						this._ik_direction = value.ik_direction;
					}
					else
					{
						this._ik_direction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Spec_stud = this;
		}
		
		private void detach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Spec_stud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.kafedra")]
	public partial class kafedra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_kaf;
		
		private System.Nullable<int> _ik_fac;
		
		private string _cname_kaf;
		
		private string _cshort_name_kaf;
		
		private System.Nullable<double> _kolvo;
		
		private System.Nullable<System.DateTime> _kDateExit;
		
		private EntitySet<Relation_kafedra_prep> _Relation_kafedra_preps;
		
		private EntityRef<Fac> _Fac;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_kafChanging(int value);
    partial void Onik_kafChanged();
    partial void Onik_facChanging(System.Nullable<int> value);
    partial void Onik_facChanged();
    partial void Oncname_kafChanging(string value);
    partial void Oncname_kafChanged();
    partial void Oncshort_name_kafChanging(string value);
    partial void Oncshort_name_kafChanged();
    partial void OnkolvoChanging(System.Nullable<double> value);
    partial void OnkolvoChanged();
    partial void OnkDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnkDateExitChanged();
    #endregion
		
		public kafedra()
		{
			this._Relation_kafedra_preps = new EntitySet<Relation_kafedra_prep>(new Action<Relation_kafedra_prep>(this.attach_Relation_kafedra_preps), new Action<Relation_kafedra_prep>(this.detach_Relation_kafedra_preps));
			this._Fac = default(EntityRef<Fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kaf", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_kaf
		{
			get
			{
				return this._ik_kaf;
			}
			set
			{
				if ((this._ik_kaf != value))
				{
					this.Onik_kafChanging(value);
					this.SendPropertyChanging();
					this._ik_kaf = value;
					this.SendPropertyChanged("ik_kaf");
					this.Onik_kafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int")]
		public System.Nullable<int> ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					if (this._Fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_facChanging(value);
					this.SendPropertyChanging();
					this._ik_fac = value;
					this.SendPropertyChanged("ik_fac");
					this.Onik_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname_kaf", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string cname_kaf
		{
			get
			{
				return this._cname_kaf;
			}
			set
			{
				if ((this._cname_kaf != value))
				{
					this.Oncname_kafChanging(value);
					this.SendPropertyChanging();
					this._cname_kaf = value;
					this.SendPropertyChanged("cname_kaf");
					this.Oncname_kafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cshort_name_kaf", DbType="VarChar(15)")]
		public string cshort_name_kaf
		{
			get
			{
				return this._cshort_name_kaf;
			}
			set
			{
				if ((this._cshort_name_kaf != value))
				{
					this.Oncshort_name_kafChanging(value);
					this.SendPropertyChanging();
					this._cshort_name_kaf = value;
					this.SendPropertyChanged("cshort_name_kaf");
					this.Oncshort_name_kafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kolvo", DbType="Float")]
		public System.Nullable<double> kolvo
		{
			get
			{
				return this._kolvo;
			}
			set
			{
				if ((this._kolvo != value))
				{
					this.OnkolvoChanging(value);
					this.SendPropertyChanging();
					this._kolvo = value;
					this.SendPropertyChanged("kolvo");
					this.OnkolvoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> kDateExit
		{
			get
			{
				return this._kDateExit;
			}
			set
			{
				if ((this._kDateExit != value))
				{
					this.OnkDateExitChanging(value);
					this.SendPropertyChanging();
					this._kDateExit = value;
					this.SendPropertyChanged("kDateExit");
					this.OnkDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kafedra_Relation_kafedra_prep", Storage="_Relation_kafedra_preps", ThisKey="ik_kaf", OtherKey="ik_kaf")]
		public EntitySet<Relation_kafedra_prep> Relation_kafedra_preps
		{
			get
			{
				return this._Relation_kafedra_preps;
			}
			set
			{
				this._Relation_kafedra_preps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_kafedra", Storage="_Fac", ThisKey="ik_fac", OtherKey="Ik_fac", IsForeignKey=true)]
		public Fac Fac
		{
			get
			{
				return this._Fac.Entity;
			}
			set
			{
				Fac previousValue = this._Fac.Entity;
				if (((previousValue != value) 
							|| (this._Fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fac.Entity = null;
						previousValue.kafedras.Remove(this);
					}
					this._Fac.Entity = value;
					if ((value != null))
					{
						value.kafedras.Add(this);
						this._ik_fac = value.Ik_fac;
					}
					else
					{
						this._ik_fac = default(Nullable<int>);
					}
					this.SendPropertyChanged("Fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_kafedra_preps(Relation_kafedra_prep entity)
		{
			this.SendPropertyChanging();
			entity.kafedra = this;
		}
		
		private void detach_Relation_kafedra_preps(Relation_kafedra_prep entity)
		{
			this.SendPropertyChanging();
			entity.kafedra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrepodRank")]
	public partial class PrepodRank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_rank;
		
		private string _cName_rank;
		
		private EntitySet<Prepod> _Prepods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_rankChanging(int value);
    partial void Onik_rankChanged();
    partial void OncName_rankChanging(string value);
    partial void OncName_rankChanged();
    #endregion
		
		public PrepodRank()
		{
			this._Prepods = new EntitySet<Prepod>(new Action<Prepod>(this.attach_Prepods), new Action<Prepod>(this.detach_Prepods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_rank", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_rank
		{
			get
			{
				return this._ik_rank;
			}
			set
			{
				if ((this._ik_rank != value))
				{
					this.Onik_rankChanging(value);
					this.SendPropertyChanging();
					this._ik_rank = value;
					this.SendPropertyChanged("ik_rank");
					this.Onik_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_rank", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_rank
		{
			get
			{
				return this._cName_rank;
			}
			set
			{
				if ((this._cName_rank != value))
				{
					this.OncName_rankChanging(value);
					this.SendPropertyChanging();
					this._cName_rank = value;
					this.SendPropertyChanged("cName_rank");
					this.OncName_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrepodRank_Prepod", Storage="_Prepods", ThisKey="ik_rank", OtherKey="ik_rank")]
		public EntitySet<Prepod> Prepods
		{
			get
			{
				return this._Prepods;
			}
			set
			{
				this._Prepods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prepods(Prepod entity)
		{
			this.SendPropertyChanging();
			entity.PrepodRank = this;
		}
		
		private void detach_Prepods(Prepod entity)
		{
			this.SendPropertyChanging();
			entity.PrepodRank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepeatType")]
	public partial class RepeatType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ik_repeat_type;
		
		private string _cName_repeat_type;
		
		private EntitySet<RepeatPattern> _RepeatPatterns;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_repeat_typeChanging(byte value);
    partial void Onik_repeat_typeChanged();
    partial void OncName_repeat_typeChanging(string value);
    partial void OncName_repeat_typeChanged();
    #endregion
		
		public RepeatType()
		{
			this._RepeatPatterns = new EntitySet<RepeatPattern>(new Action<RepeatPattern>(this.attach_RepeatPatterns), new Action<RepeatPattern>(this.detach_RepeatPatterns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_type", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ik_repeat_type
		{
			get
			{
				return this._ik_repeat_type;
			}
			set
			{
				if ((this._ik_repeat_type != value))
				{
					this.Onik_repeat_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_repeat_type = value;
					this.SendPropertyChanged("ik_repeat_type");
					this.Onik_repeat_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_repeat_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_repeat_type
		{
			get
			{
				return this._cName_repeat_type;
			}
			set
			{
				if ((this._cName_repeat_type != value))
				{
					this.OncName_repeat_typeChanging(value);
					this.SendPropertyChanging();
					this._cName_repeat_type = value;
					this.SendPropertyChanged("cName_repeat_type");
					this.OncName_repeat_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepeatType_RepeatPattern", Storage="_RepeatPatterns", ThisKey="ik_repeat_type", OtherKey="ik_repeat_type")]
		public EntitySet<RepeatPattern> RepeatPatterns
		{
			get
			{
				return this._RepeatPatterns;
			}
			set
			{
				this._RepeatPatterns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RepeatPatterns(RepeatPattern entity)
		{
			this.SendPropertyChanging();
			entity.RepeatType = this;
		}
		
		private void detach_RepeatPatterns(RepeatPattern entity)
		{
			this.SendPropertyChanging();
			entity.RepeatType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_potok_spec")]
	public partial class Relation_potok_spec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_potok;
		
		private int _ik_spec_fac;
		
		private EntityRef<Potok> _Potok;
		
		private EntityRef<Relation_spec_fac> _Relation_spec_fac;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_potokChanging(int value);
    partial void Onik_potokChanged();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    #endregion
		
		public Relation_potok_spec()
		{
			this._Potok = default(EntityRef<Potok>);
			this._Relation_spec_fac = default(EntityRef<Relation_spec_fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_potok
		{
			get
			{
				return this._ik_potok;
			}
			set
			{
				if ((this._ik_potok != value))
				{
					if (this._Potok.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_potokChanging(value);
					this.SendPropertyChanging();
					this._ik_potok = value;
					this.SendPropertyChanged("ik_potok");
					this.Onik_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					if (this._Relation_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Relation_potok_spec", Storage="_Potok", ThisKey="ik_potok", OtherKey="ik_potok", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Potok Potok
		{
			get
			{
				return this._Potok.Entity;
			}
			set
			{
				Potok previousValue = this._Potok.Entity;
				if (((previousValue != value) 
							|| (this._Potok.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Potok.Entity = null;
						previousValue.Relation_potok_specs.Remove(this);
					}
					this._Potok.Entity = value;
					if ((value != null))
					{
						value.Relation_potok_specs.Add(this);
						this._ik_potok = value.ik_potok;
					}
					else
					{
						this._ik_potok = default(int);
					}
					this.SendPropertyChanged("Potok");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Relation_potok_spec", Storage="_Relation_spec_fac", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac", IsForeignKey=true)]
		public Relation_spec_fac Relation_spec_fac
		{
			get
			{
				return this._Relation_spec_fac.Entity;
			}
			set
			{
				Relation_spec_fac previousValue = this._Relation_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._Relation_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_spec_fac.Entity = null;
						previousValue.Relation_potok_specs.Remove(this);
					}
					this._Relation_spec_fac.Entity = value;
					if ((value != null))
					{
						value.Relation_potok_specs.Add(this);
						this._ik_spec_fac = value.ik_spec_fac;
					}
					else
					{
						this._ik_spec_fac = default(int);
					}
					this.SendPropertyChanged("Relation_spec_fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Year_uch_pl")]
	public partial class Year_uch_pl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_year_uch_pl;
		
		private int _year_value;
		
		private EntitySet<Shedule> _Shedules;
		
		private EntitySet<Potok> _Potoks;
		
		private EntitySet<Potok_semestr> _Potok_semestrs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_year_uch_plChanging(int value);
    partial void Onik_year_uch_plChanged();
    partial void Onyear_valueChanging(int value);
    partial void Onyear_valueChanged();
    #endregion
		
		public Year_uch_pl()
		{
			this._Shedules = new EntitySet<Shedule>(new Action<Shedule>(this.attach_Shedules), new Action<Shedule>(this.detach_Shedules));
			this._Potoks = new EntitySet<Potok>(new Action<Potok>(this.attach_Potoks), new Action<Potok>(this.detach_Potoks));
			this._Potok_semestrs = new EntitySet<Potok_semestr>(new Action<Potok_semestr>(this.attach_Potok_semestrs), new Action<Potok_semestr>(this.detach_Potok_semestrs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_year_uch_pl", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_year_uch_pl
		{
			get
			{
				return this._ik_year_uch_pl;
			}
			set
			{
				if ((this._ik_year_uch_pl != value))
				{
					this.Onik_year_uch_plChanging(value);
					this.SendPropertyChanging();
					this._ik_year_uch_pl = value;
					this.SendPropertyChanged("ik_year_uch_pl");
					this.Onik_year_uch_plChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_value", DbType="Int NOT NULL")]
		public int year_value
		{
			get
			{
				return this._year_value;
			}
			set
			{
				if ((this._year_value != value))
				{
					this.Onyear_valueChanging(value);
					this.SendPropertyChanging();
					this._year_value = value;
					this.SendPropertyChanged("year_value");
					this.Onyear_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Shedule", Storage="_Shedules", ThisKey="ik_year_uch_pl", OtherKey="ik_year")]
		public EntitySet<Shedule> Shedules
		{
			get
			{
				return this._Shedules;
			}
			set
			{
				this._Shedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Potok", Storage="_Potoks", ThisKey="ik_year_uch_pl", OtherKey="ik_year_enter")]
		public EntitySet<Potok> Potoks
		{
			get
			{
				return this._Potoks;
			}
			set
			{
				this._Potoks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Potok_semestr", Storage="_Potok_semestrs", ThisKey="ik_year_uch_pl", OtherKey="id_year")]
		public EntitySet<Potok_semestr> Potok_semestrs
		{
			get
			{
				return this._Potok_semestrs;
			}
			set
			{
				this._Potok_semestrs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shedules(Shedule entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = this;
		}
		
		private void detach_Shedules(Shedule entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = null;
		}
		
		private void attach_Potoks(Potok entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = this;
		}
		
		private void detach_Potoks(Potok entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = null;
		}
		
		private void attach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = this;
		}
		
		private void detach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Year_uch_pl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Semester_length_exception")]
	public partial class Semester_length_exception : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_shedule;
		
		private int _ik_spec_fac;
		
		private byte _course_number;
		
		private System.Nullable<System.DateTime> _d_sem_start;
		
		private System.Nullable<System.DateTime> _d_sem_end;
		
		private System.Nullable<System.DateTime> _d_session_start;
		
		private System.Nullable<System.DateTime> _d_session_end;
		
		private System.Nullable<System.DateTime> _d_work_time_start;
		
		private System.Nullable<System.DateTime> _d_work_time_end;
		
		private EntityRef<Relation_spec_fac> _Relation_spec_fac;
		
		private EntityRef<Shedule> _Shedule;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_sheduleChanging(int value);
    partial void Onik_sheduleChanged();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void Oncourse_numberChanging(byte value);
    partial void Oncourse_numberChanged();
    partial void Ond_sem_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_sem_startChanged();
    partial void Ond_sem_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_sem_endChanged();
    partial void Ond_session_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_session_startChanged();
    partial void Ond_session_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_session_endChanged();
    partial void Ond_work_time_startChanging(System.Nullable<System.DateTime> value);
    partial void Ond_work_time_startChanged();
    partial void Ond_work_time_endChanging(System.Nullable<System.DateTime> value);
    partial void Ond_work_time_endChanged();
    #endregion
		
		public Semester_length_exception()
		{
			this._Relation_spec_fac = default(EntityRef<Relation_spec_fac>);
			this._Shedule = default(EntityRef<Shedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					if (this._Shedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sheduleChanging(value);
					this.SendPropertyChanging();
					this._ik_shedule = value;
					this.SendPropertyChanged("ik_shedule");
					this.Onik_sheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					if (this._Relation_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_number", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte course_number
		{
			get
			{
				return this._course_number;
			}
			set
			{
				if ((this._course_number != value))
				{
					this.Oncourse_numberChanging(value);
					this.SendPropertyChanging();
					this._course_number = value;
					this.SendPropertyChanged("course_number");
					this.Oncourse_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_sem_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_sem_start
		{
			get
			{
				return this._d_sem_start;
			}
			set
			{
				if ((this._d_sem_start != value))
				{
					this.Ond_sem_startChanging(value);
					this.SendPropertyChanging();
					this._d_sem_start = value;
					this.SendPropertyChanged("d_sem_start");
					this.Ond_sem_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_sem_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_sem_end
		{
			get
			{
				return this._d_sem_end;
			}
			set
			{
				if ((this._d_sem_end != value))
				{
					this.Ond_sem_endChanging(value);
					this.SendPropertyChanging();
					this._d_sem_end = value;
					this.SendPropertyChanged("d_sem_end");
					this.Ond_sem_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_session_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_session_start
		{
			get
			{
				return this._d_session_start;
			}
			set
			{
				if ((this._d_session_start != value))
				{
					this.Ond_session_startChanging(value);
					this.SendPropertyChanging();
					this._d_session_start = value;
					this.SendPropertyChanged("d_session_start");
					this.Ond_session_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_session_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_session_end
		{
			get
			{
				return this._d_session_end;
			}
			set
			{
				if ((this._d_session_end != value))
				{
					this.Ond_session_endChanging(value);
					this.SendPropertyChanging();
					this._d_session_end = value;
					this.SendPropertyChanged("d_session_end");
					this.Ond_session_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_work_time_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_work_time_start
		{
			get
			{
				return this._d_work_time_start;
			}
			set
			{
				if ((this._d_work_time_start != value))
				{
					this.Ond_work_time_startChanging(value);
					this.SendPropertyChanging();
					this._d_work_time_start = value;
					this.SendPropertyChanged("d_work_time_start");
					this.Ond_work_time_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_work_time_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> d_work_time_end
		{
			get
			{
				return this._d_work_time_end;
			}
			set
			{
				if ((this._d_work_time_end != value))
				{
					this.Ond_work_time_endChanging(value);
					this.SendPropertyChanging();
					this._d_work_time_end = value;
					this.SendPropertyChanged("d_work_time_end");
					this.Ond_work_time_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Semester_length_exception", Storage="_Relation_spec_fac", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac", IsForeignKey=true)]
		public Relation_spec_fac Relation_spec_fac
		{
			get
			{
				return this._Relation_spec_fac.Entity;
			}
			set
			{
				Relation_spec_fac previousValue = this._Relation_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._Relation_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_spec_fac.Entity = null;
						previousValue.Semester_length_exceptions.Remove(this);
					}
					this._Relation_spec_fac.Entity = value;
					if ((value != null))
					{
						value.Semester_length_exceptions.Add(this);
						this._ik_spec_fac = value.ik_spec_fac;
					}
					else
					{
						this._ik_spec_fac = default(int);
					}
					this.SendPropertyChanged("Relation_spec_fac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shedule_Semester_length_exception", Storage="_Shedule", ThisKey="ik_shedule", OtherKey="ik_shedule", IsForeignKey=true)]
		public Shedule Shedule
		{
			get
			{
				return this._Shedule.Entity;
			}
			set
			{
				Shedule previousValue = this._Shedule.Entity;
				if (((previousValue != value) 
							|| (this._Shedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shedule.Entity = null;
						previousValue.Semester_length_exceptions.Remove(this);
					}
					this._Shedule.Entity = value;
					if ((value != null))
					{
						value.Semester_length_exceptions.Add(this);
						this._ik_shedule = value.ik_shedule;
					}
					else
					{
						this._ik_shedule = default(int);
					}
					this.SendPropertyChanged("Shedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SemesterType")]
	public partial class SemesterType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ik_sem_type;
		
		private string _Cname_sem_type;
		
		private EntitySet<Shedule> _Shedules;
		
		private EntitySet<Potok_semestr> _Potok_semestrs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_sem_typeChanging(byte value);
    partial void Onik_sem_typeChanged();
    partial void OnCname_sem_typeChanging(string value);
    partial void OnCname_sem_typeChanged();
    #endregion
		
		public SemesterType()
		{
			this._Shedules = new EntitySet<Shedule>(new Action<Shedule>(this.attach_Shedules), new Action<Shedule>(this.detach_Shedules));
			this._Potok_semestrs = new EntitySet<Potok_semestr>(new Action<Potok_semestr>(this.attach_Potok_semestrs), new Action<Potok_semestr>(this.detach_Potok_semestrs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sem_type", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte ik_sem_type
		{
			get
			{
				return this._ik_sem_type;
			}
			set
			{
				if ((this._ik_sem_type != value))
				{
					this.Onik_sem_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_sem_type = value;
					this.SendPropertyChanged("ik_sem_type");
					this.Onik_sem_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_sem_type", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Cname_sem_type
		{
			get
			{
				return this._Cname_sem_type;
			}
			set
			{
				if ((this._Cname_sem_type != value))
				{
					this.OnCname_sem_typeChanging(value);
					this.SendPropertyChanging();
					this._Cname_sem_type = value;
					this.SendPropertyChanged("Cname_sem_type");
					this.OnCname_sem_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemesterType_Shedule", Storage="_Shedules", ThisKey="ik_sem_type", OtherKey="ik_sem_type")]
		public EntitySet<Shedule> Shedules
		{
			get
			{
				return this._Shedules;
			}
			set
			{
				this._Shedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemesterType_Potok_semestr", Storage="_Potok_semestrs", ThisKey="ik_sem_type", OtherKey="id_sem_type")]
		public EntitySet<Potok_semestr> Potok_semestrs
		{
			get
			{
				return this._Potok_semestrs;
			}
			set
			{
				this._Potok_semestrs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Shedules(Shedule entity)
		{
			this.SendPropertyChanging();
			entity.SemesterType = this;
		}
		
		private void detach_Shedules(Shedule entity)
		{
			this.SendPropertyChanging();
			entity.SemesterType = null;
		}
		
		private void attach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.SemesterType = this;
		}
		
		private void detach_Potok_semestrs(Potok_semestr entity)
		{
			this.SendPropertyChanging();
			entity.SemesterType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule_Facs")]
	public partial class Schedule_Fac
	{
		
		private int _Ik_fac;
		
		private string _Cname_fac;
		
		private string _Cshort_name_fac;
		
		private System.Nullable<System.DateTime> _fDateExit;
		
		private System.Nullable<bool> _bit_calc_nagr;
		
		public Schedule_Fac()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_fac", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Ik_fac
		{
			get
			{
				return this._Ik_fac;
			}
			set
			{
				if ((this._Ik_fac != value))
				{
					this._Ik_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_fac", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_fac
		{
			get
			{
				return this._Cname_fac;
			}
			set
			{
				if ((this._Cname_fac != value))
				{
					this._Cname_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cshort_name_fac", DbType="VarChar(20)")]
		public string Cshort_name_fac
		{
			get
			{
				return this._Cshort_name_fac;
			}
			set
			{
				if ((this._Cshort_name_fac != value))
				{
					this._Cshort_name_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> fDateExit
		{
			get
			{
				return this._fDateExit;
			}
			set
			{
				if ((this._fDateExit != value))
				{
					this._fDateExit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_calc_nagr", DbType="Bit")]
		public System.Nullable<bool> bit_calc_nagr
		{
			get
			{
				return this._bit_calc_nagr;
			}
			set
			{
				if ((this._bit_calc_nagr != value))
				{
					this._bit_calc_nagr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule_specs")]
	public partial class Schedule_spec
	{
		
		private int _ik_spec_fac;
		
		private int _ik_spec;
		
		private int _ik_fac;
		
		private System.Nullable<int> _YearObuch;
		
		private System.Nullable<int> _ik_rule;
		
		private System.Nullable<int> _Ik_form_ed;
		
		private int _ik_kat_zaved;
		
		public Schedule_spec()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					this._ik_spec_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec", DbType="Int NOT NULL")]
		public int ik_spec
		{
			get
			{
				return this._ik_spec;
			}
			set
			{
				if ((this._ik_spec != value))
				{
					this._ik_spec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int NOT NULL")]
		public int ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					this._ik_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearObuch", DbType="Int")]
		public System.Nullable<int> YearObuch
		{
			get
			{
				return this._YearObuch;
			}
			set
			{
				if ((this._YearObuch != value))
				{
					this._YearObuch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_rule", DbType="Int")]
		public System.Nullable<int> ik_rule
		{
			get
			{
				return this._ik_rule;
			}
			set
			{
				if ((this._ik_rule != value))
				{
					this._ik_rule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_form_ed", DbType="Int")]
		public System.Nullable<int> Ik_form_ed
		{
			get
			{
				return this._Ik_form_ed;
			}
			set
			{
				if ((this._Ik_form_ed != value))
				{
					this._Ik_form_ed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zaved", DbType="Int NOT NULL")]
		public int ik_kat_zaved
		{
			get
			{
				return this._ik_kat_zaved;
			}
			set
			{
				if ((this._ik_kat_zaved != value))
				{
					this._ik_kat_zaved = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleEventWithPlanNagr")]
	public partial class SheduleEventWithPlanNagr
	{
		
		private int _ik_event;
		
		private int _ik_shedule;
		
		private int _i_version;
		
		private int _ik_id_prepod;
		
		private System.Nullable<int> _ik_room;
		
		private byte _ik_event_type;
		
		private int _ik_repeat_pattern;
		
		private byte _ik_repeat_type;
		
		private int _iRepeat_frequency;
		
		private string _cRepeat_mask;
		
		private byte _ik_repeat_limit;
		
		private System.Nullable<int> _iRepeat_count;
		
		private System.Nullable<System.DateTime> _dFinal_date;
		
		private System.Nullable<System.DateTime> _dBegin_date;
		
		private System.DateTime _dt_time_start;
		
		private System.DateTime _dt_time_stop;
		
		private int _ik_disc;
		
		private string _cName_disc;
		
		private int _ik_vid_zanyat;
		
		private string _cName_vid_zanyat;
		
		private int _ik_vid_nagruzki;
		
		private string _Сname_vid_nagruzki_short;
		
		private int _ik_calc_unit;
		
		private string _cName_calc_unit;
		
		private System.Nullable<byte> _ik_decompose_type;
		
		private System.Nullable<int> _ik_potok;
		
		private System.Nullable<int> _ik_grup;
		
		private System.Nullable<int> _ik_fac;
		
		private int _ik_id_plan_prepod;
		
		private int _ik_kaf;
		
		private int _ik_form_ed;
		
		private string _Clastname;
		
		private string _Cfirstname;
		
		private string _Cotch;
		
		private int _itab_n;
		
		private string _cName_work_type_short;
		
		private string _Cname_room;
		
		private string _CName_campus;
		
		private System.Nullable<int> _except_count;
		
		private string _cshort_vid_zanyat;
		
		private string _cName_disc_short;
		
		public SheduleEventWithPlanNagr()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event", DbType="Int NOT NULL")]
		public int ik_event
		{
			get
			{
				return this._ik_event;
			}
			set
			{
				if ((this._ik_event != value))
				{
					this._ik_event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL")]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					this._ik_shedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_version", DbType="Int NOT NULL")]
		public int i_version
		{
			get
			{
				return this._i_version;
			}
			set
			{
				if ((this._i_version != value))
				{
					this._i_version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int NOT NULL")]
		public int ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					this._ik_id_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int")]
		public System.Nullable<int> ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this._ik_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event_type", DbType="TinyInt NOT NULL")]
		public byte ik_event_type
		{
			get
			{
				return this._ik_event_type;
			}
			set
			{
				if ((this._ik_event_type != value))
				{
					this._ik_event_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_pattern", DbType="Int NOT NULL")]
		public int ik_repeat_pattern
		{
			get
			{
				return this._ik_repeat_pattern;
			}
			set
			{
				if ((this._ik_repeat_pattern != value))
				{
					this._ik_repeat_pattern = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_type", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_type
		{
			get
			{
				return this._ik_repeat_type;
			}
			set
			{
				if ((this._ik_repeat_type != value))
				{
					this._ik_repeat_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_frequency", DbType="Int NOT NULL")]
		public int iRepeat_frequency
		{
			get
			{
				return this._iRepeat_frequency;
			}
			set
			{
				if ((this._iRepeat_frequency != value))
				{
					this._iRepeat_frequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cRepeat_mask", DbType="VarChar(10)")]
		public string cRepeat_mask
		{
			get
			{
				return this._cRepeat_mask;
			}
			set
			{
				if ((this._cRepeat_mask != value))
				{
					this._cRepeat_mask = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_limit", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_limit
		{
			get
			{
				return this._ik_repeat_limit;
			}
			set
			{
				if ((this._ik_repeat_limit != value))
				{
					this._ik_repeat_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_count", DbType="Int")]
		public System.Nullable<int> iRepeat_count
		{
			get
			{
				return this._iRepeat_count;
			}
			set
			{
				if ((this._iRepeat_count != value))
				{
					this._iRepeat_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dFinal_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dFinal_date
		{
			get
			{
				return this._dFinal_date;
			}
			set
			{
				if ((this._dFinal_date != value))
				{
					this._dFinal_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBegin_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dBegin_date
		{
			get
			{
				return this._dBegin_date;
			}
			set
			{
				if ((this._dBegin_date != value))
				{
					this._dBegin_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_start", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_start
		{
			get
			{
				return this._dt_time_start;
			}
			set
			{
				if ((this._dt_time_start != value))
				{
					this._dt_time_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_stop", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_stop
		{
			get
			{
				return this._dt_time_stop;
			}
			set
			{
				if ((this._dt_time_stop != value))
				{
					this._dt_time_stop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int NOT NULL")]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					this._ik_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string cName_disc
		{
			get
			{
				return this._cName_disc;
			}
			set
			{
				if ((this._cName_disc != value))
				{
					this._cName_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_zanyat", DbType="Int NOT NULL")]
		public int ik_vid_zanyat
		{
			get
			{
				return this._ik_vid_zanyat;
			}
			set
			{
				if ((this._ik_vid_zanyat != value))
				{
					this._ik_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_vid_zanyat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_vid_zanyat
		{
			get
			{
				return this._cName_vid_zanyat;
			}
			set
			{
				if ((this._cName_vid_zanyat != value))
				{
					this._cName_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_nagruzki", DbType="Int NOT NULL")]
		public int ik_vid_nagruzki
		{
			get
			{
				return this._ik_vid_nagruzki;
			}
			set
			{
				if ((this._ik_vid_nagruzki != value))
				{
					this._ik_vid_nagruzki = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сname_vid_nagruzki_short", DbType="VarChar(20)")]
		public string Сname_vid_nagruzki_short
		{
			get
			{
				return this._Сname_vid_nagruzki_short;
			}
			set
			{
				if ((this._Сname_vid_nagruzki_short != value))
				{
					this._Сname_vid_nagruzki_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL")]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					this._ik_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_calc_unit", DbType="VarChar(30)")]
		public string cName_calc_unit
		{
			get
			{
				return this._cName_calc_unit;
			}
			set
			{
				if ((this._cName_calc_unit != value))
				{
					this._cName_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_decompose_type", DbType="TinyInt")]
		public System.Nullable<byte> ik_decompose_type
		{
			get
			{
				return this._ik_decompose_type;
			}
			set
			{
				if ((this._ik_decompose_type != value))
				{
					this._ik_decompose_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok", DbType="Int")]
		public System.Nullable<int> ik_potok
		{
			get
			{
				return this._ik_potok;
			}
			set
			{
				if ((this._ik_potok != value))
				{
					this._ik_potok = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_grup", DbType="Int")]
		public System.Nullable<int> ik_grup
		{
			get
			{
				return this._ik_grup;
			}
			set
			{
				if ((this._ik_grup != value))
				{
					this._ik_grup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int")]
		public System.Nullable<int> ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					this._ik_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_plan_prepod", DbType="Int NOT NULL")]
		public int ik_id_plan_prepod
		{
			get
			{
				return this._ik_id_plan_prepod;
			}
			set
			{
				if ((this._ik_id_plan_prepod != value))
				{
					this._ik_id_plan_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kaf", DbType="Int NOT NULL")]
		public int ik_kaf
		{
			get
			{
				return this._ik_kaf;
			}
			set
			{
				if ((this._ik_kaf != value))
				{
					this._ik_kaf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_form_ed", DbType="Int NOT NULL")]
		public int ik_form_ed
		{
			get
			{
				return this._ik_form_ed;
			}
			set
			{
				if ((this._ik_form_ed != value))
				{
					this._ik_form_ed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Clastname
		{
			get
			{
				return this._Clastname;
			}
			set
			{
				if ((this._Clastname != value))
				{
					this._Clastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cfirstname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cfirstname
		{
			get
			{
				return this._Cfirstname;
			}
			set
			{
				if ((this._Cfirstname != value))
				{
					this._Cfirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotch", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cotch
		{
			get
			{
				return this._Cotch;
			}
			set
			{
				if ((this._Cotch != value))
				{
					this._Cotch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int NOT NULL")]
		public int itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this._itab_n = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_work_type_short", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cName_work_type_short
		{
			get
			{
				return this._cName_work_type_short;
			}
			set
			{
				if ((this._cName_work_type_short != value))
				{
					this._cName_work_type_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_room
		{
			get
			{
				return this._Cname_room;
			}
			set
			{
				if ((this._Cname_room != value))
				{
					this._Cname_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName_campus", DbType="VarChar(15)")]
		public string CName_campus
		{
			get
			{
				return this._CName_campus;
			}
			set
			{
				if ((this._CName_campus != value))
				{
					this._CName_campus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_except_count", DbType="Int")]
		public System.Nullable<int> except_count
		{
			get
			{
				return this._except_count;
			}
			set
			{
				if ((this._except_count != value))
				{
					this._except_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cshort_vid_zanyat", DbType="VarChar(20)")]
		public string cshort_vid_zanyat
		{
			get
			{
				return this._cshort_vid_zanyat;
			}
			set
			{
				if ((this._cshort_vid_zanyat != value))
				{
					this._cshort_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc_short", DbType="VarChar(40)")]
		public string cName_disc_short
		{
			get
			{
				return this._cName_disc_short;
			}
			set
			{
				if ((this._cName_disc_short != value))
				{
					this._cName_disc_short = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleExaminationWithPlanNagr")]
	public partial class SheduleExaminationWithPlanNagr
	{
		
		private int _ik_examination;
		
		private int _ik_shedule;
		
		private int _i_version;
		
		private System.Nullable<int> _ik_id_prepod;
		
		private System.Nullable<int> _ik_room;
		
		private System.DateTime _dt_time_start;
		
		private System.DateTime _dt_time_stop;
		
		private int _ik_disc;
		
		private string _cName_disc;
		
		private int _ik_vid_zanyat;
		
		private string _cName_vid_zanyat;
		
		private int _ik_vid_nagruzki;
		
		private string _Сname_vid_nagruzki_short;
		
		private int _ik_calc_unit;
		
		private string _cName_calc_unit;
		
		private System.Nullable<byte> _ik_decompose_type;
		
		private System.Nullable<int> _ik_potok;
		
		private System.Nullable<int> _ik_grup;
		
		private System.Nullable<int> _ik_fac;
		
		private int _ik_id_plan_prepod;
		
		private int _ik_kaf;
		
		private int _ik_form_ed;
		
		private string _Clastname;
		
		private string _Cfirstname;
		
		private string _Cotch;
		
		private int _itab_n;
		
		private string _cName_work_type_short;
		
		private string _Cname_room;
		
		private string _CName_campus;
		
		private string _cshort_vid_zanyat;
		
		private string _cName_disc_short;
		
		public SheduleExaminationWithPlanNagr()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_examination", DbType="Int NOT NULL")]
		public int ik_examination
		{
			get
			{
				return this._ik_examination;
			}
			set
			{
				if ((this._ik_examination != value))
				{
					this._ik_examination = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL")]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					this._ik_shedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_version", DbType="Int NOT NULL")]
		public int i_version
		{
			get
			{
				return this._i_version;
			}
			set
			{
				if ((this._i_version != value))
				{
					this._i_version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int")]
		public System.Nullable<int> ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					this._ik_id_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int")]
		public System.Nullable<int> ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this._ik_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_start", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_start
		{
			get
			{
				return this._dt_time_start;
			}
			set
			{
				if ((this._dt_time_start != value))
				{
					this._dt_time_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_stop", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_stop
		{
			get
			{
				return this._dt_time_stop;
			}
			set
			{
				if ((this._dt_time_stop != value))
				{
					this._dt_time_stop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int NOT NULL")]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					this._ik_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string cName_disc
		{
			get
			{
				return this._cName_disc;
			}
			set
			{
				if ((this._cName_disc != value))
				{
					this._cName_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_zanyat", DbType="Int NOT NULL")]
		public int ik_vid_zanyat
		{
			get
			{
				return this._ik_vid_zanyat;
			}
			set
			{
				if ((this._ik_vid_zanyat != value))
				{
					this._ik_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_vid_zanyat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_vid_zanyat
		{
			get
			{
				return this._cName_vid_zanyat;
			}
			set
			{
				if ((this._cName_vid_zanyat != value))
				{
					this._cName_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_nagruzki", DbType="Int NOT NULL")]
		public int ik_vid_nagruzki
		{
			get
			{
				return this._ik_vid_nagruzki;
			}
			set
			{
				if ((this._ik_vid_nagruzki != value))
				{
					this._ik_vid_nagruzki = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сname_vid_nagruzki_short", DbType="VarChar(20)")]
		public string Сname_vid_nagruzki_short
		{
			get
			{
				return this._Сname_vid_nagruzki_short;
			}
			set
			{
				if ((this._Сname_vid_nagruzki_short != value))
				{
					this._Сname_vid_nagruzki_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL")]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					this._ik_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_calc_unit", DbType="VarChar(30)")]
		public string cName_calc_unit
		{
			get
			{
				return this._cName_calc_unit;
			}
			set
			{
				if ((this._cName_calc_unit != value))
				{
					this._cName_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_decompose_type", DbType="TinyInt")]
		public System.Nullable<byte> ik_decompose_type
		{
			get
			{
				return this._ik_decompose_type;
			}
			set
			{
				if ((this._ik_decompose_type != value))
				{
					this._ik_decompose_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok", DbType="Int")]
		public System.Nullable<int> ik_potok
		{
			get
			{
				return this._ik_potok;
			}
			set
			{
				if ((this._ik_potok != value))
				{
					this._ik_potok = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_grup", DbType="Int")]
		public System.Nullable<int> ik_grup
		{
			get
			{
				return this._ik_grup;
			}
			set
			{
				if ((this._ik_grup != value))
				{
					this._ik_grup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int")]
		public System.Nullable<int> ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					this._ik_fac = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_plan_prepod", DbType="Int NOT NULL")]
		public int ik_id_plan_prepod
		{
			get
			{
				return this._ik_id_plan_prepod;
			}
			set
			{
				if ((this._ik_id_plan_prepod != value))
				{
					this._ik_id_plan_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kaf", DbType="Int NOT NULL")]
		public int ik_kaf
		{
			get
			{
				return this._ik_kaf;
			}
			set
			{
				if ((this._ik_kaf != value))
				{
					this._ik_kaf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_form_ed", DbType="Int NOT NULL")]
		public int ik_form_ed
		{
			get
			{
				return this._ik_form_ed;
			}
			set
			{
				if ((this._ik_form_ed != value))
				{
					this._ik_form_ed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Clastname
		{
			get
			{
				return this._Clastname;
			}
			set
			{
				if ((this._Clastname != value))
				{
					this._Clastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cfirstname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cfirstname
		{
			get
			{
				return this._Cfirstname;
			}
			set
			{
				if ((this._Cfirstname != value))
				{
					this._Cfirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotch", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cotch
		{
			get
			{
				return this._Cotch;
			}
			set
			{
				if ((this._Cotch != value))
				{
					this._Cotch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int NOT NULL")]
		public int itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this._itab_n = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_work_type_short", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cName_work_type_short
		{
			get
			{
				return this._cName_work_type_short;
			}
			set
			{
				if ((this._cName_work_type_short != value))
				{
					this._cName_work_type_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_room
		{
			get
			{
				return this._Cname_room;
			}
			set
			{
				if ((this._Cname_room != value))
				{
					this._Cname_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName_campus", DbType="VarChar(15)")]
		public string CName_campus
		{
			get
			{
				return this._CName_campus;
			}
			set
			{
				if ((this._CName_campus != value))
				{
					this._CName_campus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cshort_vid_zanyat", DbType="VarChar(20)")]
		public string cshort_vid_zanyat
		{
			get
			{
				return this._cshort_vid_zanyat;
			}
			set
			{
				if ((this._cshort_vid_zanyat != value))
				{
					this._cshort_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc_short", DbType="VarChar(40)")]
		public string cName_disc_short
		{
			get
			{
				return this._cName_disc_short;
			}
			set
			{
				if ((this._cName_disc_short != value))
				{
					this._cName_disc_short = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction")]
	public partial class Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_direction;
		
		private string _cName_direction;
		
		private string _cShort_name_direction;
		
		private string _ThesisName;
		
		private EntitySet<Spec_stud> _Spec_studs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_directionChanging(int value);
    partial void Onik_directionChanged();
    partial void OncName_directionChanging(string value);
    partial void OncName_directionChanged();
    partial void OncShort_name_directionChanging(string value);
    partial void OncShort_name_directionChanged();
    partial void OnThesisNameChanging(string value);
    partial void OnThesisNameChanged();
    #endregion
		
		public Direction()
		{
			this._Spec_studs = new EntitySet<Spec_stud>(new Action<Spec_stud>(this.attach_Spec_studs), new Action<Spec_stud>(this.detach_Spec_studs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_direction", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_direction
		{
			get
			{
				return this._ik_direction;
			}
			set
			{
				if ((this._ik_direction != value))
				{
					this.Onik_directionChanging(value);
					this.SendPropertyChanging();
					this._ik_direction = value;
					this.SendPropertyChanged("ik_direction");
					this.Onik_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_direction", DbType="VarChar(20)")]
		public string cName_direction
		{
			get
			{
				return this._cName_direction;
			}
			set
			{
				if ((this._cName_direction != value))
				{
					this.OncName_directionChanging(value);
					this.SendPropertyChanging();
					this._cName_direction = value;
					this.SendPropertyChanged("cName_direction");
					this.OncName_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cShort_name_direction", DbType="VarChar(10)")]
		public string cShort_name_direction
		{
			get
			{
				return this._cShort_name_direction;
			}
			set
			{
				if ((this._cShort_name_direction != value))
				{
					this.OncShort_name_directionChanging(value);
					this.SendPropertyChanging();
					this._cShort_name_direction = value;
					this.SendPropertyChanged("cShort_name_direction");
					this.OncShort_name_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThesisName", DbType="VarChar(30)")]
		public string ThesisName
		{
			get
			{
				return this._ThesisName;
			}
			set
			{
				if ((this._ThesisName != value))
				{
					this.OnThesisNameChanging(value);
					this.SendPropertyChanging();
					this._ThesisName = value;
					this.SendPropertyChanged("ThesisName");
					this.OnThesisNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_Spec_stud", Storage="_Spec_studs", ThisKey="ik_direction", OtherKey="ik_direction")]
		public EntitySet<Spec_stud> Spec_studs
		{
			get
			{
				return this._Spec_studs;
			}
			set
			{
				this._Spec_studs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Spec_studs(Spec_stud entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_Spec_studs(Spec_stud entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Potok_semestr")]
	public partial class Potok_semestr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_potok;
		
		private int _id_year;
		
		private byte _id_sem_type;
		
		private int _ik_potok_semestr;
		
		private System.Nullable<int> _ik_norm_of_time;
		
		private EntitySet<Potok_semestr_shema> _Potok_semestr_shemas;
		
		private EntityRef<Potok> _Potok;
		
		private EntityRef<SemesterType> _SemesterType;
		
		private EntityRef<Year_uch_pl> _Year_uch_pl;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_potokChanging(int value);
    partial void Onid_potokChanged();
    partial void Onid_yearChanging(int value);
    partial void Onid_yearChanged();
    partial void Onid_sem_typeChanging(byte value);
    partial void Onid_sem_typeChanged();
    partial void Onik_potok_semestrChanging(int value);
    partial void Onik_potok_semestrChanged();
    partial void Onik_norm_of_timeChanging(System.Nullable<int> value);
    partial void Onik_norm_of_timeChanged();
    #endregion
		
		public Potok_semestr()
		{
			this._Potok_semestr_shemas = new EntitySet<Potok_semestr_shema>(new Action<Potok_semestr_shema>(this.attach_Potok_semestr_shemas), new Action<Potok_semestr_shema>(this.detach_Potok_semestr_shemas));
			this._Potok = default(EntityRef<Potok>);
			this._SemesterType = default(EntityRef<SemesterType>);
			this._Year_uch_pl = default(EntityRef<Year_uch_pl>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_potok", DbType="Int NOT NULL")]
		public int id_potok
		{
			get
			{
				return this._id_potok;
			}
			set
			{
				if ((this._id_potok != value))
				{
					if (this._Potok.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_potokChanging(value);
					this.SendPropertyChanging();
					this._id_potok = value;
					this.SendPropertyChanged("id_potok");
					this.Onid_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_year", DbType="Int NOT NULL")]
		public int id_year
		{
			get
			{
				return this._id_year;
			}
			set
			{
				if ((this._id_year != value))
				{
					if (this._Year_uch_pl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_yearChanging(value);
					this.SendPropertyChanging();
					this._id_year = value;
					this.SendPropertyChanged("id_year");
					this.Onid_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sem_type", DbType="TinyInt NOT NULL")]
		public byte id_sem_type
		{
			get
			{
				return this._id_sem_type;
			}
			set
			{
				if ((this._id_sem_type != value))
				{
					if (this._SemesterType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_sem_typeChanging(value);
					this.SendPropertyChanging();
					this._id_sem_type = value;
					this.SendPropertyChanged("id_sem_type");
					this.Onid_sem_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok_semestr", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_potok_semestr
		{
			get
			{
				return this._ik_potok_semestr;
			}
			set
			{
				if ((this._ik_potok_semestr != value))
				{
					this.Onik_potok_semestrChanging(value);
					this.SendPropertyChanging();
					this._ik_potok_semestr = value;
					this.SendPropertyChanged("ik_potok_semestr");
					this.Onik_potok_semestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_norm_of_time", DbType="Int")]
		public System.Nullable<int> ik_norm_of_time
		{
			get
			{
				return this._ik_norm_of_time;
			}
			set
			{
				if ((this._ik_norm_of_time != value))
				{
					this.Onik_norm_of_timeChanging(value);
					this.SendPropertyChanging();
					this._ik_norm_of_time = value;
					this.SendPropertyChanged("ik_norm_of_time");
					this.Onik_norm_of_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_semestr_Potok_semestr_shema", Storage="_Potok_semestr_shemas", ThisKey="ik_potok_semestr", OtherKey="ik_potok_semestr")]
		public EntitySet<Potok_semestr_shema> Potok_semestr_shemas
		{
			get
			{
				return this._Potok_semestr_shemas;
			}
			set
			{
				this._Potok_semestr_shemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_Potok_semestr", Storage="_Potok", ThisKey="id_potok", OtherKey="ik_potok", IsForeignKey=true)]
		public Potok Potok
		{
			get
			{
				return this._Potok.Entity;
			}
			set
			{
				Potok previousValue = this._Potok.Entity;
				if (((previousValue != value) 
							|| (this._Potok.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Potok.Entity = null;
						previousValue.Potok_semestrs.Remove(this);
					}
					this._Potok.Entity = value;
					if ((value != null))
					{
						value.Potok_semestrs.Add(this);
						this._id_potok = value.ik_potok;
					}
					else
					{
						this._id_potok = default(int);
					}
					this.SendPropertyChanged("Potok");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SemesterType_Potok_semestr", Storage="_SemesterType", ThisKey="id_sem_type", OtherKey="ik_sem_type", IsForeignKey=true)]
		public SemesterType SemesterType
		{
			get
			{
				return this._SemesterType.Entity;
			}
			set
			{
				SemesterType previousValue = this._SemesterType.Entity;
				if (((previousValue != value) 
							|| (this._SemesterType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SemesterType.Entity = null;
						previousValue.Potok_semestrs.Remove(this);
					}
					this._SemesterType.Entity = value;
					if ((value != null))
					{
						value.Potok_semestrs.Add(this);
						this._id_sem_type = value.ik_sem_type;
					}
					else
					{
						this._id_sem_type = default(byte);
					}
					this.SendPropertyChanged("SemesterType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_uch_pl_Potok_semestr", Storage="_Year_uch_pl", ThisKey="id_year", OtherKey="ik_year_uch_pl", IsForeignKey=true)]
		public Year_uch_pl Year_uch_pl
		{
			get
			{
				return this._Year_uch_pl.Entity;
			}
			set
			{
				Year_uch_pl previousValue = this._Year_uch_pl.Entity;
				if (((previousValue != value) 
							|| (this._Year_uch_pl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Year_uch_pl.Entity = null;
						previousValue.Potok_semestrs.Remove(this);
					}
					this._Year_uch_pl.Entity = value;
					if ((value != null))
					{
						value.Potok_semestrs.Add(this);
						this._id_year = value.ik_year_uch_pl;
					}
					else
					{
						this._id_year = default(int);
					}
					this.SendPropertyChanged("Year_uch_pl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Potok_semestr_shemas(Potok_semestr_shema entity)
		{
			this.SendPropertyChanging();
			entity.Potok_semestr = this;
		}
		
		private void detach_Potok_semestr_shemas(Potok_semestr_shema entity)
		{
			this.SendPropertyChanging();
			entity.Potok_semestr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calc_unit_semestr")]
	public partial class Calc_unit_semestr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_calc_unit;
		
		private string _cName_calc_unit;
		
		private int _ik_shema;
		
		private System.Nullable<int> _budget_count;
		
		private System.Nullable<int> _contract_count;
		
		private EntitySet<Prepod_plan_nagr> _Prepod_plan_nagrs;
		
		private EntitySet<Calc_unit_grup> _Calc_unit_grups;
		
		private EntityRef<Potok_semestr_shema> _Potok_semestr_shema;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_calc_unitChanging(int value);
    partial void Onik_calc_unitChanged();
    partial void OncName_calc_unitChanging(string value);
    partial void OncName_calc_unitChanged();
    partial void Onik_shemaChanging(int value);
    partial void Onik_shemaChanged();
    partial void Onbudget_countChanging(System.Nullable<int> value);
    partial void Onbudget_countChanged();
    partial void Oncontract_countChanging(System.Nullable<int> value);
    partial void Oncontract_countChanged();
    #endregion
		
		public Calc_unit_semestr()
		{
			this._Prepod_plan_nagrs = new EntitySet<Prepod_plan_nagr>(new Action<Prepod_plan_nagr>(this.attach_Prepod_plan_nagrs), new Action<Prepod_plan_nagr>(this.detach_Prepod_plan_nagrs));
			this._Calc_unit_grups = new EntitySet<Calc_unit_grup>(new Action<Calc_unit_grup>(this.attach_Calc_unit_grups), new Action<Calc_unit_grup>(this.detach_Calc_unit_grups));
			this._Potok_semestr_shema = default(EntityRef<Potok_semestr_shema>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					this.Onik_calc_unitChanging(value);
					this.SendPropertyChanging();
					this._ik_calc_unit = value;
					this.SendPropertyChanged("ik_calc_unit");
					this.Onik_calc_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_calc_unit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_calc_unit
		{
			get
			{
				return this._cName_calc_unit;
			}
			set
			{
				if ((this._cName_calc_unit != value))
				{
					this.OncName_calc_unitChanging(value);
					this.SendPropertyChanging();
					this._cName_calc_unit = value;
					this.SendPropertyChanged("cName_calc_unit");
					this.OncName_calc_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shema", DbType="Int NOT NULL")]
		public int ik_shema
		{
			get
			{
				return this._ik_shema;
			}
			set
			{
				if ((this._ik_shema != value))
				{
					if (this._Potok_semestr_shema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_shemaChanging(value);
					this.SendPropertyChanging();
					this._ik_shema = value;
					this.SendPropertyChanged("ik_shema");
					this.Onik_shemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_budget_count", DbType="Int")]
		public System.Nullable<int> budget_count
		{
			get
			{
				return this._budget_count;
			}
			set
			{
				if ((this._budget_count != value))
				{
					this.Onbudget_countChanging(value);
					this.SendPropertyChanging();
					this._budget_count = value;
					this.SendPropertyChanged("budget_count");
					this.Onbudget_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_count", DbType="Int")]
		public System.Nullable<int> contract_count
		{
			get
			{
				return this._contract_count;
			}
			set
			{
				if ((this._contract_count != value))
				{
					this.Oncontract_countChanging(value);
					this.SendPropertyChanging();
					this._contract_count = value;
					this.SendPropertyChanged("contract_count");
					this.Oncontract_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calc_unit_semestr_Prepod_plan_nagr", Storage="_Prepod_plan_nagrs", ThisKey="ik_calc_unit", OtherKey="ik_calc_unit")]
		public EntitySet<Prepod_plan_nagr> Prepod_plan_nagrs
		{
			get
			{
				return this._Prepod_plan_nagrs;
			}
			set
			{
				this._Prepod_plan_nagrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calc_unit_semestr_Calc_unit_grup", Storage="_Calc_unit_grups", ThisKey="ik_calc_unit", OtherKey="ik_calc_unit")]
		public EntitySet<Calc_unit_grup> Calc_unit_grups
		{
			get
			{
				return this._Calc_unit_grups;
			}
			set
			{
				this._Calc_unit_grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_semestr_shema_Calc_unit_semestr", Storage="_Potok_semestr_shema", ThisKey="ik_shema", OtherKey="ik_shema", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Potok_semestr_shema Potok_semestr_shema
		{
			get
			{
				return this._Potok_semestr_shema.Entity;
			}
			set
			{
				Potok_semestr_shema previousValue = this._Potok_semestr_shema.Entity;
				if (((previousValue != value) 
							|| (this._Potok_semestr_shema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Potok_semestr_shema.Entity = null;
						previousValue.Calc_unit_semestrs.Remove(this);
					}
					this._Potok_semestr_shema.Entity = value;
					if ((value != null))
					{
						value.Calc_unit_semestrs.Add(this);
						this._ik_shema = value.ik_shema;
					}
					else
					{
						this._ik_shema = default(int);
					}
					this.SendPropertyChanged("Potok_semestr_shema");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Calc_unit_semestr = this;
		}
		
		private void detach_Prepod_plan_nagrs(Prepod_plan_nagr entity)
		{
			this.SendPropertyChanging();
			entity.Calc_unit_semestr = null;
		}
		
		private void attach_Calc_unit_grups(Calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Calc_unit_semestr = this;
		}
		
		private void detach_Calc_unit_grups(Calc_unit_grup entity)
		{
			this.SendPropertyChanging();
			entity.Calc_unit_semestr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calc_unit_grup")]
	public partial class Calc_unit_grup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_grup;
		
		private int _ik_calc_unit;
		
		private EntityRef<Calc_unit_semestr> _Calc_unit_semestr;
		
		private EntityRef<Grup> _Grup;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_grupChanging(int value);
    partial void OnIk_grupChanged();
    partial void Onik_calc_unitChanging(int value);
    partial void Onik_calc_unitChanged();
    #endregion
		
		public Calc_unit_grup()
		{
			this._Calc_unit_semestr = default(EntityRef<Calc_unit_semestr>);
			this._Grup = default(EntityRef<Grup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grup", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ik_grup
		{
			get
			{
				return this._Ik_grup;
			}
			set
			{
				if ((this._Ik_grup != value))
				{
					if (this._Grup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_grupChanging(value);
					this.SendPropertyChanging();
					this._Ik_grup = value;
					this.SendPropertyChanged("Ik_grup");
					this.OnIk_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					if (this._Calc_unit_semestr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_calc_unitChanging(value);
					this.SendPropertyChanging();
					this._ik_calc_unit = value;
					this.SendPropertyChanged("ik_calc_unit");
					this.Onik_calc_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Calc_unit_semestr_Calc_unit_grup", Storage="_Calc_unit_semestr", ThisKey="ik_calc_unit", OtherKey="ik_calc_unit", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Calc_unit_semestr Calc_unit_semestr
		{
			get
			{
				return this._Calc_unit_semestr.Entity;
			}
			set
			{
				Calc_unit_semestr previousValue = this._Calc_unit_semestr.Entity;
				if (((previousValue != value) 
							|| (this._Calc_unit_semestr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Calc_unit_semestr.Entity = null;
						previousValue.Calc_unit_grups.Remove(this);
					}
					this._Calc_unit_semestr.Entity = value;
					if ((value != null))
					{
						value.Calc_unit_grups.Add(this);
						this._ik_calc_unit = value.ik_calc_unit;
					}
					else
					{
						this._ik_calc_unit = default(int);
					}
					this.SendPropertyChanged("Calc_unit_semestr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_Calc_unit_grup", Storage="_Grup", ThisKey="Ik_grup", OtherKey="Ik_grup", IsForeignKey=true)]
		public Grup Grup
		{
			get
			{
				return this._Grup.Entity;
			}
			set
			{
				Grup previousValue = this._Grup.Entity;
				if (((previousValue != value) 
							|| (this._Grup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grup.Entity = null;
						previousValue.Calc_unit_grups.Remove(this);
					}
					this._Grup.Entity = value;
					if ((value != null))
					{
						value.Calc_unit_grups.Add(this);
						this._Ik_grup = value.Ik_grup;
					}
					else
					{
						this._Ik_grup = default(int);
					}
					this.SendPropertyChanged("Grup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Potok_semestr_shema")]
	public partial class Potok_semestr_shema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_potok_semestr;
		
		private byte _ik_decompose_type;
		
		private string _Name_shema;
		
		private int _ik_shema;
		
		private System.Nullable<int> _ik_shema_of_potok;
		
		private EntitySet<Calc_unit_semestr> _Calc_unit_semestrs;
		
		private EntityRef<Potok_semestr> _Potok_semestr;
		
		private EntityRef<Shema_decompose> _Shema_decompose;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_potok_semestrChanging(int value);
    partial void Onik_potok_semestrChanged();
    partial void Onik_decompose_typeChanging(byte value);
    partial void Onik_decompose_typeChanged();
    partial void OnName_shemaChanging(string value);
    partial void OnName_shemaChanged();
    partial void Onik_shemaChanging(int value);
    partial void Onik_shemaChanged();
    partial void Onik_shema_of_potokChanging(System.Nullable<int> value);
    partial void Onik_shema_of_potokChanged();
    #endregion
		
		public Potok_semestr_shema()
		{
			this._Calc_unit_semestrs = new EntitySet<Calc_unit_semestr>(new Action<Calc_unit_semestr>(this.attach_Calc_unit_semestrs), new Action<Calc_unit_semestr>(this.detach_Calc_unit_semestrs));
			this._Potok_semestr = default(EntityRef<Potok_semestr>);
			this._Shema_decompose = default(EntityRef<Shema_decompose>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok_semestr", DbType="Int NOT NULL")]
		public int ik_potok_semestr
		{
			get
			{
				return this._ik_potok_semestr;
			}
			set
			{
				if ((this._ik_potok_semestr != value))
				{
					if (this._Potok_semestr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_potok_semestrChanging(value);
					this.SendPropertyChanging();
					this._ik_potok_semestr = value;
					this.SendPropertyChanged("ik_potok_semestr");
					this.Onik_potok_semestrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_decompose_type", DbType="TinyInt NOT NULL")]
		public byte ik_decompose_type
		{
			get
			{
				return this._ik_decompose_type;
			}
			set
			{
				if ((this._ik_decompose_type != value))
				{
					if (this._Shema_decompose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_decompose_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_decompose_type = value;
					this.SendPropertyChanged("ik_decompose_type");
					this.Onik_decompose_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_shema", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_shema
		{
			get
			{
				return this._Name_shema;
			}
			set
			{
				if ((this._Name_shema != value))
				{
					this.OnName_shemaChanging(value);
					this.SendPropertyChanging();
					this._Name_shema = value;
					this.SendPropertyChanged("Name_shema");
					this.OnName_shemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shema", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_shema
		{
			get
			{
				return this._ik_shema;
			}
			set
			{
				if ((this._ik_shema != value))
				{
					this.Onik_shemaChanging(value);
					this.SendPropertyChanging();
					this._ik_shema = value;
					this.SendPropertyChanged("ik_shema");
					this.Onik_shemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shema_of_potok", DbType="Int")]
		public System.Nullable<int> ik_shema_of_potok
		{
			get
			{
				return this._ik_shema_of_potok;
			}
			set
			{
				if ((this._ik_shema_of_potok != value))
				{
					this.Onik_shema_of_potokChanging(value);
					this.SendPropertyChanging();
					this._ik_shema_of_potok = value;
					this.SendPropertyChanged("ik_shema_of_potok");
					this.Onik_shema_of_potokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_semestr_shema_Calc_unit_semestr", Storage="_Calc_unit_semestrs", ThisKey="ik_shema", OtherKey="ik_shema")]
		public EntitySet<Calc_unit_semestr> Calc_unit_semestrs
		{
			get
			{
				return this._Calc_unit_semestrs;
			}
			set
			{
				this._Calc_unit_semestrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Potok_semestr_Potok_semestr_shema", Storage="_Potok_semestr", ThisKey="ik_potok_semestr", OtherKey="ik_potok_semestr", IsForeignKey=true)]
		public Potok_semestr Potok_semestr
		{
			get
			{
				return this._Potok_semestr.Entity;
			}
			set
			{
				Potok_semestr previousValue = this._Potok_semestr.Entity;
				if (((previousValue != value) 
							|| (this._Potok_semestr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Potok_semestr.Entity = null;
						previousValue.Potok_semestr_shemas.Remove(this);
					}
					this._Potok_semestr.Entity = value;
					if ((value != null))
					{
						value.Potok_semestr_shemas.Add(this);
						this._ik_potok_semestr = value.ik_potok_semestr;
					}
					else
					{
						this._ik_potok_semestr = default(int);
					}
					this.SendPropertyChanged("Potok_semestr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shema_decompose_Potok_semestr_shema", Storage="_Shema_decompose", ThisKey="ik_decompose_type", OtherKey="ik_decompose_type", IsForeignKey=true)]
		public Shema_decompose Shema_decompose
		{
			get
			{
				return this._Shema_decompose.Entity;
			}
			set
			{
				Shema_decompose previousValue = this._Shema_decompose.Entity;
				if (((previousValue != value) 
							|| (this._Shema_decompose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shema_decompose.Entity = null;
						previousValue.Potok_semestr_shemas.Remove(this);
					}
					this._Shema_decompose.Entity = value;
					if ((value != null))
					{
						value.Potok_semestr_shemas.Add(this);
						this._ik_decompose_type = value.ik_decompose_type;
					}
					else
					{
						this._ik_decompose_type = default(byte);
					}
					this.SendPropertyChanged("Shema_decompose");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calc_unit_semestrs(Calc_unit_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Potok_semestr_shema = this;
		}
		
		private void detach_Calc_unit_semestrs(Calc_unit_semestr entity)
		{
			this.SendPropertyChanging();
			entity.Potok_semestr_shema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SheduleEventWithPlanNagr_new")]
	public partial class SheduleEventWithPlanNagr_new
	{
		
		private int _ik_event;
		
		private int _ik_shedule;
		
		private int _i_version;
		
		private int _ik_id_prepod;
		
		private System.Nullable<int> _ik_room;
		
		private byte _ik_event_type;
		
		private int _ik_repeat_pattern;
		
		private byte _ik_repeat_type;
		
		private int _iRepeat_frequency;
		
		private string _cRepeat_mask;
		
		private byte _ik_repeat_limit;
		
		private System.Nullable<int> _iRepeat_count;
		
		private System.Nullable<System.DateTime> _dFinal_date;
		
		private System.Nullable<System.DateTime> _dBegin_date;
		
		private System.DateTime _dt_time_start;
		
		private System.DateTime _dt_time_stop;
		
		private int _ik_disc;
		
		private string _cName_disc;
		
		private int _ik_vid_zanyat;
		
		private string _cName_vid_zanyat;
		
		private int _ik_vid_nagruzki;
		
		private string _Сname_vid_nagruzki_short;
		
		private int _ik_calc_unit;
		
		private int _ik_id_plan_prepod;
		
		private int _ik_kaf;
		
		private int _ik_form_ed;
		
		private string _Clastname;
		
		private string _Cfirstname;
		
		private string _Cotch;
		
		private int _itab_n;
		
		private string _cName_work_type_short;
		
		private string _Cname_room;
		
		private string _CName_campus;
		
		private System.Nullable<int> _except_count;
		
		private string _cshort_vid_zanyat;
		
		private string _cName_disc_short;
		
		private string _cName_calc_unit;
		
		private int _Ik_grup;
		
		private int _ik_potok_semestr;
		
		private byte _ik_decompose_type;
		
		private int _Expr1;
		
		private int _ik_shema;
		
		private byte _ik_sem_type;
		
		private int _ik_year_uch_pl;
		
		private int _ik_prepod_plan;
		
		public SheduleEventWithPlanNagr_new()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event", DbType="Int NOT NULL")]
		public int ik_event
		{
			get
			{
				return this._ik_event;
			}
			set
			{
				if ((this._ik_event != value))
				{
					this._ik_event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shedule", DbType="Int NOT NULL")]
		public int ik_shedule
		{
			get
			{
				return this._ik_shedule;
			}
			set
			{
				if ((this._ik_shedule != value))
				{
					this._ik_shedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i_version", DbType="Int NOT NULL")]
		public int i_version
		{
			get
			{
				return this._i_version;
			}
			set
			{
				if ((this._i_version != value))
				{
					this._i_version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_prepod", DbType="Int NOT NULL")]
		public int ik_id_prepod
		{
			get
			{
				return this._ik_id_prepod;
			}
			set
			{
				if ((this._ik_id_prepod != value))
				{
					this._ik_id_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int")]
		public System.Nullable<int> ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this._ik_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_event_type", DbType="TinyInt NOT NULL")]
		public byte ik_event_type
		{
			get
			{
				return this._ik_event_type;
			}
			set
			{
				if ((this._ik_event_type != value))
				{
					this._ik_event_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_pattern", DbType="Int NOT NULL")]
		public int ik_repeat_pattern
		{
			get
			{
				return this._ik_repeat_pattern;
			}
			set
			{
				if ((this._ik_repeat_pattern != value))
				{
					this._ik_repeat_pattern = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_type", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_type
		{
			get
			{
				return this._ik_repeat_type;
			}
			set
			{
				if ((this._ik_repeat_type != value))
				{
					this._ik_repeat_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_frequency", DbType="Int NOT NULL")]
		public int iRepeat_frequency
		{
			get
			{
				return this._iRepeat_frequency;
			}
			set
			{
				if ((this._iRepeat_frequency != value))
				{
					this._iRepeat_frequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cRepeat_mask", DbType="VarChar(10)")]
		public string cRepeat_mask
		{
			get
			{
				return this._cRepeat_mask;
			}
			set
			{
				if ((this._cRepeat_mask != value))
				{
					this._cRepeat_mask = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_repeat_limit", DbType="TinyInt NOT NULL")]
		public byte ik_repeat_limit
		{
			get
			{
				return this._ik_repeat_limit;
			}
			set
			{
				if ((this._ik_repeat_limit != value))
				{
					this._ik_repeat_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRepeat_count", DbType="Int")]
		public System.Nullable<int> iRepeat_count
		{
			get
			{
				return this._iRepeat_count;
			}
			set
			{
				if ((this._iRepeat_count != value))
				{
					this._iRepeat_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dFinal_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dFinal_date
		{
			get
			{
				return this._dFinal_date;
			}
			set
			{
				if ((this._dFinal_date != value))
				{
					this._dFinal_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dBegin_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> dBegin_date
		{
			get
			{
				return this._dBegin_date;
			}
			set
			{
				if ((this._dBegin_date != value))
				{
					this._dBegin_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_start", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_start
		{
			get
			{
				return this._dt_time_start;
			}
			set
			{
				if ((this._dt_time_start != value))
				{
					this._dt_time_start = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt_time_stop", DbType="DateTime NOT NULL")]
		public System.DateTime dt_time_stop
		{
			get
			{
				return this._dt_time_stop;
			}
			set
			{
				if ((this._dt_time_stop != value))
				{
					this._dt_time_stop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int NOT NULL")]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					this._ik_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string cName_disc
		{
			get
			{
				return this._cName_disc;
			}
			set
			{
				if ((this._cName_disc != value))
				{
					this._cName_disc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_zanyat", DbType="Int NOT NULL")]
		public int ik_vid_zanyat
		{
			get
			{
				return this._ik_vid_zanyat;
			}
			set
			{
				if ((this._ik_vid_zanyat != value))
				{
					this._ik_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_vid_zanyat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_vid_zanyat
		{
			get
			{
				return this._cName_vid_zanyat;
			}
			set
			{
				if ((this._cName_vid_zanyat != value))
				{
					this._cName_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_nagruzki", DbType="Int NOT NULL")]
		public int ik_vid_nagruzki
		{
			get
			{
				return this._ik_vid_nagruzki;
			}
			set
			{
				if ((this._ik_vid_nagruzki != value))
				{
					this._ik_vid_nagruzki = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сname_vid_nagruzki_short", DbType="VarChar(20)")]
		public string Сname_vid_nagruzki_short
		{
			get
			{
				return this._Сname_vid_nagruzki_short;
			}
			set
			{
				if ((this._Сname_vid_nagruzki_short != value))
				{
					this._Сname_vid_nagruzki_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_calc_unit", DbType="Int NOT NULL")]
		public int ik_calc_unit
		{
			get
			{
				return this._ik_calc_unit;
			}
			set
			{
				if ((this._ik_calc_unit != value))
				{
					this._ik_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_id_plan_prepod", DbType="Int NOT NULL")]
		public int ik_id_plan_prepod
		{
			get
			{
				return this._ik_id_plan_prepod;
			}
			set
			{
				if ((this._ik_id_plan_prepod != value))
				{
					this._ik_id_plan_prepod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kaf", DbType="Int NOT NULL")]
		public int ik_kaf
		{
			get
			{
				return this._ik_kaf;
			}
			set
			{
				if ((this._ik_kaf != value))
				{
					this._ik_kaf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_form_ed", DbType="Int NOT NULL")]
		public int ik_form_ed
		{
			get
			{
				return this._ik_form_ed;
			}
			set
			{
				if ((this._ik_form_ed != value))
				{
					this._ik_form_ed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Clastname
		{
			get
			{
				return this._Clastname;
			}
			set
			{
				if ((this._Clastname != value))
				{
					this._Clastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cfirstname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cfirstname
		{
			get
			{
				return this._Cfirstname;
			}
			set
			{
				if ((this._Cfirstname != value))
				{
					this._Cfirstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotch", DbType="VarChar(30)")]
		public string Cotch
		{
			get
			{
				return this._Cotch;
			}
			set
			{
				if ((this._Cotch != value))
				{
					this._Cotch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int NOT NULL")]
		public int itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this._itab_n = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_work_type_short", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string cName_work_type_short
		{
			get
			{
				return this._cName_work_type_short;
			}
			set
			{
				if ((this._cName_work_type_short != value))
				{
					this._cName_work_type_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_room
		{
			get
			{
				return this._Cname_room;
			}
			set
			{
				if ((this._Cname_room != value))
				{
					this._Cname_room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName_campus", DbType="VarChar(15)")]
		public string CName_campus
		{
			get
			{
				return this._CName_campus;
			}
			set
			{
				if ((this._CName_campus != value))
				{
					this._CName_campus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_except_count", DbType="Int")]
		public System.Nullable<int> except_count
		{
			get
			{
				return this._except_count;
			}
			set
			{
				if ((this._except_count != value))
				{
					this._except_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cshort_vid_zanyat", DbType="VarChar(20)")]
		public string cshort_vid_zanyat
		{
			get
			{
				return this._cshort_vid_zanyat;
			}
			set
			{
				if ((this._cshort_vid_zanyat != value))
				{
					this._cshort_vid_zanyat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_disc_short", DbType="VarChar(40)")]
		public string cName_disc_short
		{
			get
			{
				return this._cName_disc_short;
			}
			set
			{
				if ((this._cName_disc_short != value))
				{
					this._cName_disc_short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_calc_unit", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cName_calc_unit
		{
			get
			{
				return this._cName_calc_unit;
			}
			set
			{
				if ((this._cName_calc_unit != value))
				{
					this._cName_calc_unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grup", DbType="Int NOT NULL")]
		public int Ik_grup
		{
			get
			{
				return this._Ik_grup;
			}
			set
			{
				if ((this._Ik_grup != value))
				{
					this._Ik_grup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_potok_semestr", DbType="Int NOT NULL")]
		public int ik_potok_semestr
		{
			get
			{
				return this._ik_potok_semestr;
			}
			set
			{
				if ((this._ik_potok_semestr != value))
				{
					this._ik_potok_semestr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_decompose_type", DbType="TinyInt NOT NULL")]
		public byte ik_decompose_type
		{
			get
			{
				return this._ik_decompose_type;
			}
			set
			{
				if ((this._ik_decompose_type != value))
				{
					this._ik_decompose_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Int NOT NULL")]
		public int Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_shema", DbType="Int NOT NULL")]
		public int ik_shema
		{
			get
			{
				return this._ik_shema;
			}
			set
			{
				if ((this._ik_shema != value))
				{
					this._ik_shema = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sem_type", DbType="TinyInt NOT NULL")]
		public byte ik_sem_type
		{
			get
			{
				return this._ik_sem_type;
			}
			set
			{
				if ((this._ik_sem_type != value))
				{
					this._ik_sem_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_year_uch_pl", DbType="Int NOT NULL")]
		public int ik_year_uch_pl
		{
			get
			{
				return this._ik_year_uch_pl;
			}
			set
			{
				if ((this._ik_year_uch_pl != value))
				{
					this._ik_year_uch_pl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_prepod_plan", DbType="Int NOT NULL")]
		public int ik_prepod_plan
		{
			get
			{
				return this._ik_prepod_plan;
			}
			set
			{
				if ((this._ik_prepod_plan != value))
				{
					this._ik_prepod_plan = value;
				}
			}
		}
	}
	
	public partial class PPrepodGrupsSELECTResult
	{
		
		private int _idгруппы;
		
		private string _название_группы;
		
		private System.Nullable<int> _Год_поступления;
		
		public PPrepodGrupsSELECTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idгруппы", DbType="Int NOT NULL")]
		public int idгруппы
		{
			get
			{
				return this._idгруппы;
			}
			set
			{
				if ((this._idгруппы != value))
				{
					this._idгруппы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[название группы]", Storage="_название_группы", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string название_группы
		{
			get
			{
				return this._название_группы;
			}
			set
			{
				if ((this._название_группы != value))
				{
					this._название_группы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Год поступления]", Storage="_Год_поступления", DbType="Int")]
		public System.Nullable<int> Год_поступления
		{
			get
			{
				return this._Год_поступления;
			}
			set
			{
				if ((this._Год_поступления != value))
				{
					this._Год_поступления = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
