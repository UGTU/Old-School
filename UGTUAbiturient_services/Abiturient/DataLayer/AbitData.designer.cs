#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abiturient.DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UGTU")]
	public partial class AbitDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertFac(Fac instance);
    partial void UpdateFac(Fac instance);
    partial void DeleteFac(Fac instance);
    partial void InsertABIT_Diapazon_spec_fac(ABIT_Diapazon_spec_fac instance);
    partial void UpdateABIT_Diapazon_spec_fac(ABIT_Diapazon_spec_fac instance);
    partial void DeleteABIT_Diapazon_spec_fac(ABIT_Diapazon_spec_fac instance);
    partial void InsertSpec_stud(Spec_stud instance);
    partial void UpdateSpec_stud(Spec_stud instance);
    partial void DeleteSpec_stud(Spec_stud instance);
    partial void InsertRelation_spec_fac(Relation_spec_fac instance);
    partial void UpdateRelation_spec_fac(Relation_spec_fac instance);
    partial void DeleteRelation_spec_fac(Relation_spec_fac instance);
    partial void Insertgrazd(grazd instance);
    partial void Updategrazd(grazd instance);
    partial void Deletegrazd(grazd instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertStreet(Street instance);
    partial void UpdateStreet(Street instance);
    partial void DeleteStreet(Street instance);
    partial void InsertStrana(Strana instance);
    partial void UpdateStrana(Strana instance);
    partial void DeleteStrana(Strana instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertRaion(Raion instance);
    partial void UpdateRaion(Raion instance);
    partial void DeleteRaion(Raion instance);
    partial void InsertGorod(Gorod instance);
    partial void UpdateGorod(Gorod instance);
    partial void DeleteGorod(Gorod instance);
    partial void InsertZaved_stud(Zaved_stud instance);
    partial void UpdateZaved_stud(Zaved_stud instance);
    partial void DeleteZaved_stud(Zaved_stud instance);
    partial void InsertVid_ob_rab(Vid_ob_rab instance);
    partial void UpdateVid_ob_rab(Vid_ob_rab instance);
    partial void DeleteVid_ob_rab(Vid_ob_rab instance);
    partial void InsertAbit_podg(Abit_podg instance);
    partial void UpdateAbit_podg(Abit_podg instance);
    partial void DeleteAbit_podg(Abit_podg instance);
    partial void Insertmedal_abit(medal_abit instance);
    partial void Updatemedal_abit(medal_abit instance);
    partial void Deletemedal_abit(medal_abit instance);
    partial void InsertSpecial_uchet(Special_uchet instance);
    partial void UpdateSpecial_uchet(Special_uchet instance);
    partial void DeleteSpecial_uchet(Special_uchet instance);
    partial void InsertPredpr(Predpr instance);
    partial void UpdatePredpr(Predpr instance);
    partial void DeletePredpr(Predpr instance);
    partial void Insertdocument(document instance);
    partial void Updatedocument(document instance);
    partial void Deletedocument(document instance);
    partial void InsertDoc_stud(Doc_stud instance);
    partial void UpdateDoc_stud(Doc_stud instance);
    partial void DeleteDoc_stud(Doc_stud instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertVoen_zvanie(Voen_zvanie instance);
    partial void UpdateVoen_zvanie(Voen_zvanie instance);
    partial void DeleteVoen_zvanie(Voen_zvanie instance);
    partial void Insertsem_pol(sem_pol instance);
    partial void Updatesem_pol(sem_pol instance);
    partial void Deletesem_pol(sem_pol instance);
    partial void InsertKat_zach(Kat_zach instance);
    partial void UpdateKat_zach(Kat_zach instance);
    partial void DeleteKat_zach(Kat_zach instance);
    partial void InsertDirection(Direction instance);
    partial void UpdateDirection(Direction instance);
    partial void DeleteDirection(Direction instance);
    partial void InsertLang(Lang instance);
    partial void UpdateLang(Lang instance);
    partial void DeleteLang(Lang instance);
    partial void InsertLang_stud(Lang_stud instance);
    partial void UpdateLang_stud(Lang_stud instance);
    partial void DeleteLang_stud(Lang_stud instance);
    partial void InsertStep_vlad(Step_vlad instance);
    partial void UpdateStep_vlad(Step_vlad instance);
    partial void DeleteStep_vlad(Step_vlad instance);
    partial void InsertABIT_Vstup_exam(ABIT_Vstup_exam instance);
    partial void UpdateABIT_Vstup_exam(ABIT_Vstup_exam instance);
    partial void DeleteABIT_Vstup_exam(ABIT_Vstup_exam instance);
    partial void InsertABIT_VidSdachi(ABIT_VidSdachi instance);
    partial void UpdateABIT_VidSdachi(ABIT_VidSdachi instance);
    partial void DeleteABIT_VidSdachi(ABIT_VidSdachi instance);
    partial void InsertABIT_Disc(ABIT_Disc instance);
    partial void UpdateABIT_Disc(ABIT_Disc instance);
    partial void DeleteABIT_Disc(ABIT_Disc instance);
    partial void InsertPersonAddress(PersonAddress instance);
    partial void UpdatePersonAddress(PersonAddress instance);
    partial void DeletePersonAddress(PersonAddress instance);
    partial void InsertABIT_postup(ABIT_postup instance);
    partial void UpdateABIT_postup(ABIT_postup instance);
    partial void DeleteABIT_postup(ABIT_postup instance);
    partial void InsertABIT_sost_zach(ABIT_sost_zach instance);
    partial void UpdateABIT_sost_zach(ABIT_sost_zach instance);
    partial void DeleteABIT_sost_zach(ABIT_sost_zach instance);
    partial void InsertABIT_Meropriatie(ABIT_Meropriatie instance);
    partial void UpdateABIT_Meropriatie(ABIT_Meropriatie instance);
    partial void DeleteABIT_Meropriatie(ABIT_Meropriatie instance);
    partial void InsertABIT_Raspisanie(ABIT_Raspisanie instance);
    partial void UpdateABIT_Raspisanie(ABIT_Raspisanie instance);
    partial void DeleteABIT_Raspisanie(ABIT_Raspisanie instance);
    partial void InsertABIT_Rassadka(ABIT_Rassadka instance);
    partial void UpdateABIT_Rassadka(ABIT_Rassadka instance);
    partial void DeleteABIT_Rassadka(ABIT_Rassadka instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertStudGrup(StudGrup instance);
    partial void UpdateStudGrup(StudGrup instance);
    partial void DeleteStudGrup(StudGrup instance);
    partial void InsertZach(Zach instance);
    partial void UpdateZach(Zach instance);
    partial void DeleteZach(Zach instance);
    partial void InsertTypeKatZach(TypeKatZach instance);
    partial void UpdateTypeKatZach(TypeKatZach instance);
    partial void DeleteTypeKatZach(TypeKatZach instance);
    partial void InsertABIT_proh_ball(ABIT_proh_ball instance);
    partial void UpdateABIT_proh_ball(ABIT_proh_ball instance);
    partial void DeleteABIT_proh_ball(ABIT_proh_ball instance);
    partial void InsertGrup(Grup instance);
    partial void UpdateGrup(Grup instance);
    partial void DeleteGrup(Grup instance);
    #endregion
		
		public AbitDataContext() : 
				base("Data Source=172.16.16.20;Initial Catalog=UGTU;User ID=serg;Password=se1t1sMerg", mappingSource)
		{
			OnCreated();
		}
		
		public AbitDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbitDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbitDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AbitDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Fac> Facs
		{
			get
			{
				return this.GetTable<Fac>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Diapazon_spec_fac> ABIT_Diapazon_spec_facs
		{
			get
			{
				return this.GetTable<ABIT_Diapazon_spec_fac>();
			}
		}
		
		public System.Data.Linq.Table<Spec_stud> Spec_studs
		{
			get
			{
				return this.GetTable<Spec_stud>();
			}
		}
		
		public System.Data.Linq.Table<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this.GetTable<Relation_spec_fac>();
			}
		}
		
		public System.Data.Linq.Table<grazd> grazds
		{
			get
			{
				return this.GetTable<grazd>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Street> Streets
		{
			get
			{
				return this.GetTable<Street>();
			}
		}
		
		public System.Data.Linq.Table<Strana> Stranas
		{
			get
			{
				return this.GetTable<Strana>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Raion> Raions
		{
			get
			{
				return this.GetTable<Raion>();
			}
		}
		
		public System.Data.Linq.Table<Gorod> Gorods
		{
			get
			{
				return this.GetTable<Gorod>();
			}
		}
		
		public System.Data.Linq.Table<Zaved_stud> Zaved_studs
		{
			get
			{
				return this.GetTable<Zaved_stud>();
			}
		}
		
		public System.Data.Linq.Table<Vid_ob_rab> Vid_ob_rabs
		{
			get
			{
				return this.GetTable<Vid_ob_rab>();
			}
		}
		
		public System.Data.Linq.Table<Abit_podg> Abit_podgs
		{
			get
			{
				return this.GetTable<Abit_podg>();
			}
		}
		
		public System.Data.Linq.Table<medal_abit> medal_abits
		{
			get
			{
				return this.GetTable<medal_abit>();
			}
		}
		
		public System.Data.Linq.Table<Special_uchet> Special_uchets
		{
			get
			{
				return this.GetTable<Special_uchet>();
			}
		}
		
		public System.Data.Linq.Table<Predpr> Predprs
		{
			get
			{
				return this.GetTable<Predpr>();
			}
		}
		
		public System.Data.Linq.Table<document> documents
		{
			get
			{
				return this.GetTable<document>();
			}
		}
		
		public System.Data.Linq.Table<Doc_stud> Doc_studs
		{
			get
			{
				return this.GetTable<Doc_stud>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Voen_zvanie> Voen_zvanies
		{
			get
			{
				return this.GetTable<Voen_zvanie>();
			}
		}
		
		public System.Data.Linq.Table<sem_pol> sem_pols
		{
			get
			{
				return this.GetTable<sem_pol>();
			}
		}
		
		public System.Data.Linq.Table<Kat_zach> Kat_zaches
		{
			get
			{
				return this.GetTable<Kat_zach>();
			}
		}
		
		public System.Data.Linq.Table<Direction> Directions
		{
			get
			{
				return this.GetTable<Direction>();
			}
		}
		
		public System.Data.Linq.Table<Lang> Langs
		{
			get
			{
				return this.GetTable<Lang>();
			}
		}
		
		public System.Data.Linq.Table<Lang_stud> Lang_studs
		{
			get
			{
				return this.GetTable<Lang_stud>();
			}
		}
		
		public System.Data.Linq.Table<Step_vlad> Step_vlads
		{
			get
			{
				return this.GetTable<Step_vlad>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Vstup_exam> ABIT_Vstup_exams
		{
			get
			{
				return this.GetTable<ABIT_Vstup_exam>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_VidSdachi> ABIT_VidSdachis
		{
			get
			{
				return this.GetTable<ABIT_VidSdachi>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Disc> ABIT_Discs
		{
			get
			{
				return this.GetTable<ABIT_Disc>();
			}
		}
		
		public System.Data.Linq.Table<PersonAddress> PersonAddresses
		{
			get
			{
				return this.GetTable<PersonAddress>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_postup> ABIT_postups
		{
			get
			{
				return this.GetTable<ABIT_postup>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_sost_zach> ABIT_sost_zaches
		{
			get
			{
				return this.GetTable<ABIT_sost_zach>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Meropriatie> ABIT_Meropriaties
		{
			get
			{
				return this.GetTable<ABIT_Meropriatie>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Raspisanie> ABIT_Raspisanies
		{
			get
			{
				return this.GetTable<ABIT_Raspisanie>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_Rassadka> ABIT_Rassadkas
		{
			get
			{
				return this.GetTable<ABIT_Rassadka>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<StudGrup> StudGrups
		{
			get
			{
				return this.GetTable<StudGrup>();
			}
		}
		
		public System.Data.Linq.Table<Zach> Zaches
		{
			get
			{
				return this.GetTable<Zach>();
			}
		}
		
		public System.Data.Linq.Table<TypeKatZach> TypeKatZaches
		{
			get
			{
				return this.GetTable<TypeKatZach>();
			}
		}
		
		public System.Data.Linq.Table<AbitAverageBall> AbitAverageBalls
		{
			get
			{
				return this.GetTable<AbitAverageBall>();
			}
		}
		
		public System.Data.Linq.Table<ABIT_proh_ball> ABIT_proh_balls
		{
			get
			{
				return this.GetTable<ABIT_proh_ball>();
			}
		}
		
		public System.Data.Linq.Table<Grup> Grups
		{
			get
			{
				return this.GetTable<Grup>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AppendAbit")]
		public ISingleResult<AppendAbitResult> AppendAbit(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Clastn", DbType="VarChar(40)")] string clastn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string firstn, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(40)")] string otch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> birth, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(300)")] string placebirth, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> inval, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> deti, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> rab, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> sex, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> obchegit, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_medal, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_voen_zvanie, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SotTel", DbType="VarChar(50)")] string sotTel, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string telefon, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Photo", DbType="Image")] System.Data.Linq.Binary photo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pens, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> grazd, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> podg, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nac, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ob_rab, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sempol, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> spec_uch, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> zaved, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> godokon, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string ind_f, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> street_f, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Build_f", DbType="VarChar(10)")] string build_f, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Stroen_f", DbType="VarChar(10)")] string stroen_f, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kvart_f", DbType="VarChar(10)")] string kvart_f, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string ind_pr, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street_pr", DbType="Int")] System.Nullable<int> street_pr, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Build_pr", DbType="VarChar(10)")] string build_pr, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Stroen_pr", DbType="VarChar(10)")] string stroen_pr, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kvart_pr", DbType="VarChar(10)")] string kvart_pr, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] string dopsved, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> code, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StazYear", DbType="Int")] System.Nullable<int> stazYear, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="StazMonth", DbType="Int")] System.Nullable<int> stazMonth, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string cDolgnost, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_pred, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CLgot", DbType="VarChar(500)")] string cLgot)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, clastn, firstn, otch, birth, placebirth, inval, deti, rab, sex, obchegit, ik_medal, ik_voen_zvanie, sotTel, telefon, email, photo, pens, grazd, podg, nac, ob_rab, sempol, spec_uch, zaved, godokon, ind_f, street_f, build_f, stroen_f, kvart_f, ind_pr, street_pr, build_pr, stroen_pr, kvart_pr, dopsved, code, stazYear, stazMonth, cDolgnost, ik_pred, cLgot);
			return ((ISingleResult<AppendAbitResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AppendDoc")]
		public int AppendDoc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ncode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_vid_doc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string sd_seria, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string np_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dd_vidan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string cd_kem_vidan)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ncode, ik_vid_doc, sd_seria, np_number, dd_vidan, cd_kem_vidan);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AppendLang")]
		public int AppendLang([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> stepvlad, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> lang, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stepvlad, code, flag, lang, old);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AppendDocs")]
		public int AppendDocs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> flag, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> code, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datevidan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string kemvidan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string seria, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), flag, vid, code, datevidan, kemvidan, number, seria, old);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_Del_vstup_ekz")]
		public int ABIT_Del_vstup_ekz([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_add_postup_online")]
		public int ABIT_add_postup_online([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NNrecord", DbType="Int")] System.Nullable<int> nNrecord, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_kat_zach, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dd_pod_zayav, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsMain", DbType="Bit")] System.Nullable<bool> isMain)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nCode, nNrecord, ik_kat_zach, dd_pod_zayav, isMain);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_edit_postup_online")]
		public int ABIT_edit_postup_online([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nn_abit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Decimal(18,0)")] System.Nullable<decimal> nCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NNrecord", DbType="Int")] System.Nullable<int> nNrecord, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_kat_zach, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsMain", DbType="Bit")] System.Nullable<bool> isMain)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nn_abit, nCode, nNrecord, ik_kat_zach, isMain);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAbitAverageBall", IsComposable=true)]
		public System.Nullable<int> GetAbitAverageBall([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDApp", DbType="Int")] System.Nullable<int> iDApp)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDApp).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AppendPersonAddress")]
		public ISingleResult<AppendPersonAddressResult> AppendPersonAddress([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_AddressType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ik_street", DbType="Int")] System.Nullable<int> ik_street, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuildingNumber", DbType="VarChar(10)")] string buildingNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StructNumber", DbType="VarChar(10)")] string structNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FlatNumber", DbType="VarChar(10)")] string flatNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBegin", DbType="DateTime")] System.Nullable<System.DateTime> dateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nCode, ik_AddressType, ik_street, buildingNumber, structNumber, flatNumber, fIndex, dateBegin, dateEnd);
			return ((ISingleResult<AppendPersonAddressResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdatePersonAddress")]
		public ISingleResult<UpdatePersonAddressResult> UpdatePersonAddress([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_AddressType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ik_street", DbType="Int")] System.Nullable<int> ik_street, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BuildingNumber", DbType="VarChar(10)")] string buildingNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StructNumber", DbType="VarChar(10)")] string structNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FlatNumber", DbType="VarChar(10)")] string flatNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string fIndex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBegin", DbType="DateTime")] System.Nullable<System.DateTime> dateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_personAddress)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ik_AddressType, ik_street, buildingNumber, structNumber, flatNumber, fIndex, dateBegin, dateEnd, ik_personAddress);
			return ((ISingleResult<UpdatePersonAddressResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_add_vstup_exam")]
		public int ABIT_add_vstup_exam([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cosenka, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NN_abit", DbType="Int")] System.Nullable<int> nN_abit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_disc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_sdach, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NNvedom", DbType="Char(20)")] string nNvedom)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cosenka, nN_abit, ik_disc, ik_sdach, nNvedom);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_Edit_vstup_exam_online")]
		public int ABIT_Edit_vstup_exam_online([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cosenka, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_disc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_sdach, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NNvedom", DbType="Char(20)")] string nNvedom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cosenka, ik_disc, ik_sdach, nNvedom, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ABIT_del_postup_online")]
		public int ABIT_del_postup_online([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> nn_abit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nn_abit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditDoc")]
		public int EditDoc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> ik_doc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> datevidan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string kemvidan, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string seria)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ik_doc, vid, datevidan, kemvidan, number, seria);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fac")]
	public partial class Fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_fac;
		
		private string _Cname_fac;
		
		private string _Cshort_name_fac;
		
		private System.Nullable<System.DateTime> _fDateExit;
		
		private System.Nullable<bool> _bit_calc_nagr;
		
		private EntitySet<Relation_spec_fac> _Relation_spec_facs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_facChanging(int value);
    partial void OnIk_facChanged();
    partial void OnCname_facChanging(string value);
    partial void OnCname_facChanged();
    partial void OnCshort_name_facChanging(string value);
    partial void OnCshort_name_facChanged();
    partial void OnfDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnfDateExitChanged();
    partial void Onbit_calc_nagrChanging(System.Nullable<bool> value);
    partial void Onbit_calc_nagrChanged();
    #endregion
		
		public Fac()
		{
			this._Relation_spec_facs = new EntitySet<Relation_spec_fac>(new Action<Relation_spec_fac>(this.attach_Relation_spec_facs), new Action<Relation_spec_fac>(this.detach_Relation_spec_facs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_fac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_fac
		{
			get
			{
				return this._Ik_fac;
			}
			set
			{
				if ((this._Ik_fac != value))
				{
					this.OnIk_facChanging(value);
					this.SendPropertyChanging();
					this._Ik_fac = value;
					this.SendPropertyChanged("Ik_fac");
					this.OnIk_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_fac", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_fac
		{
			get
			{
				return this._Cname_fac;
			}
			set
			{
				if ((this._Cname_fac != value))
				{
					this.OnCname_facChanging(value);
					this.SendPropertyChanging();
					this._Cname_fac = value;
					this.SendPropertyChanged("Cname_fac");
					this.OnCname_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cshort_name_fac", DbType="VarChar(20)")]
		public string Cshort_name_fac
		{
			get
			{
				return this._Cshort_name_fac;
			}
			set
			{
				if ((this._Cshort_name_fac != value))
				{
					this.OnCshort_name_facChanging(value);
					this.SendPropertyChanging();
					this._Cshort_name_fac = value;
					this.SendPropertyChanged("Cshort_name_fac");
					this.OnCshort_name_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> fDateExit
		{
			get
			{
				return this._fDateExit;
			}
			set
			{
				if ((this._fDateExit != value))
				{
					this.OnfDateExitChanging(value);
					this.SendPropertyChanging();
					this._fDateExit = value;
					this.SendPropertyChanged("fDateExit");
					this.OnfDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_calc_nagr", DbType="Bit")]
		public System.Nullable<bool> bit_calc_nagr
		{
			get
			{
				return this._bit_calc_nagr;
			}
			set
			{
				if ((this._bit_calc_nagr != value))
				{
					this.Onbit_calc_nagrChanging(value);
					this.SendPropertyChanging();
					this._bit_calc_nagr = value;
					this.SendPropertyChanged("bit_calc_nagr");
					this.Onbit_calc_nagrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Relation_spec_fac", Storage="_Relation_spec_facs", ThisKey="Ik_fac", OtherKey="ik_fac")]
		public EntitySet<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this._Relation_spec_facs;
			}
			set
			{
				this._Relation_spec_facs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Fac = this;
		}
		
		private void detach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Diapazon_spec_fac")]
	public partial class ABIT_Diapazon_spec_fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NNrecord;
		
		private int _ik_spec_fac;
		
		private System.Nullable<int> _BeginDiapazon;
		
		private System.Nullable<int> _EndDiapazon;
		
		private int _NNyear;
		
		private System.Nullable<int> _MestCKP;
		
		private System.Nullable<int> _MestBudjet;
		
		private System.Nullable<int> _MestKontrakt;
		
		private System.Nullable<int> _Ready;
		
		private System.Nullable<bool> _lRussian;
		
		private EntitySet<ABIT_postup> _ABIT_postups;
		
		private EntitySet<ABIT_proh_ball> _ABIT_proh_balls;
		
		private EntityRef<Relation_spec_fac> _Relation_spec_fac;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNNrecordChanging(int value);
    partial void OnNNrecordChanged();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void OnBeginDiapazonChanging(System.Nullable<int> value);
    partial void OnBeginDiapazonChanged();
    partial void OnEndDiapazonChanging(System.Nullable<int> value);
    partial void OnEndDiapazonChanged();
    partial void OnNNyearChanging(int value);
    partial void OnNNyearChanged();
    partial void OnMestCKPChanging(System.Nullable<int> value);
    partial void OnMestCKPChanged();
    partial void OnMestBudjetChanging(System.Nullable<int> value);
    partial void OnMestBudjetChanged();
    partial void OnMestKontraktChanging(System.Nullable<int> value);
    partial void OnMestKontraktChanged();
    partial void OnReadyChanging(System.Nullable<int> value);
    partial void OnReadyChanged();
    partial void OnlRussianChanging(System.Nullable<bool> value);
    partial void OnlRussianChanged();
    #endregion
		
		public ABIT_Diapazon_spec_fac()
		{
			this._ABIT_postups = new EntitySet<ABIT_postup>(new Action<ABIT_postup>(this.attach_ABIT_postups), new Action<ABIT_postup>(this.detach_ABIT_postups));
			this._ABIT_proh_balls = new EntitySet<ABIT_proh_ball>(new Action<ABIT_proh_ball>(this.attach_ABIT_proh_balls), new Action<ABIT_proh_ball>(this.detach_ABIT_proh_balls));
			this._Relation_spec_fac = default(EntityRef<Relation_spec_fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNrecord", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NNrecord
		{
			get
			{
				return this._NNrecord;
			}
			set
			{
				if ((this._NNrecord != value))
				{
					this.OnNNrecordChanging(value);
					this.SendPropertyChanging();
					this._NNrecord = value;
					this.SendPropertyChanged("NNrecord");
					this.OnNNrecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", DbType="Int NOT NULL")]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					if (this._Relation_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDiapazon", DbType="Int")]
		public System.Nullable<int> BeginDiapazon
		{
			get
			{
				return this._BeginDiapazon;
			}
			set
			{
				if ((this._BeginDiapazon != value))
				{
					this.OnBeginDiapazonChanging(value);
					this.SendPropertyChanging();
					this._BeginDiapazon = value;
					this.SendPropertyChanged("BeginDiapazon");
					this.OnBeginDiapazonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDiapazon", DbType="Int")]
		public System.Nullable<int> EndDiapazon
		{
			get
			{
				return this._EndDiapazon;
			}
			set
			{
				if ((this._EndDiapazon != value))
				{
					this.OnEndDiapazonChanging(value);
					this.SendPropertyChanging();
					this._EndDiapazon = value;
					this.SendPropertyChanged("EndDiapazon");
					this.OnEndDiapazonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNyear", DbType="Int NOT NULL")]
		public int NNyear
		{
			get
			{
				return this._NNyear;
			}
			set
			{
				if ((this._NNyear != value))
				{
					this.OnNNyearChanging(value);
					this.SendPropertyChanging();
					this._NNyear = value;
					this.SendPropertyChanged("NNyear");
					this.OnNNyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MestCKP", DbType="Int")]
		public System.Nullable<int> MestCKP
		{
			get
			{
				return this._MestCKP;
			}
			set
			{
				if ((this._MestCKP != value))
				{
					this.OnMestCKPChanging(value);
					this.SendPropertyChanging();
					this._MestCKP = value;
					this.SendPropertyChanged("MestCKP");
					this.OnMestCKPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MestBudjet", DbType="Int")]
		public System.Nullable<int> MestBudjet
		{
			get
			{
				return this._MestBudjet;
			}
			set
			{
				if ((this._MestBudjet != value))
				{
					this.OnMestBudjetChanging(value);
					this.SendPropertyChanging();
					this._MestBudjet = value;
					this.SendPropertyChanged("MestBudjet");
					this.OnMestBudjetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MestKontrakt", DbType="Int")]
		public System.Nullable<int> MestKontrakt
		{
			get
			{
				return this._MestKontrakt;
			}
			set
			{
				if ((this._MestKontrakt != value))
				{
					this.OnMestKontraktChanging(value);
					this.SendPropertyChanging();
					this._MestKontrakt = value;
					this.SendPropertyChanged("MestKontrakt");
					this.OnMestKontraktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ready", DbType="Int")]
		public System.Nullable<int> Ready
		{
			get
			{
				return this._Ready;
			}
			set
			{
				if ((this._Ready != value))
				{
					this.OnReadyChanging(value);
					this.SendPropertyChanging();
					this._Ready = value;
					this.SendPropertyChanged("Ready");
					this.OnReadyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lRussian", DbType="Bit")]
		public System.Nullable<bool> lRussian
		{
			get
			{
				return this._lRussian;
			}
			set
			{
				if ((this._lRussian != value))
				{
					this.OnlRussianChanging(value);
					this.SendPropertyChanging();
					this._lRussian = value;
					this.SendPropertyChanged("lRussian");
					this.OnlRussianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Diapazon_spec_fac_ABIT_postup", Storage="_ABIT_postups", ThisKey="NNrecord", OtherKey="NNrecord")]
		public EntitySet<ABIT_postup> ABIT_postups
		{
			get
			{
				return this._ABIT_postups;
			}
			set
			{
				this._ABIT_postups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Diapazon_spec_fac_ABIT_proh_ball", Storage="_ABIT_proh_balls", ThisKey="NNrecord", OtherKey="NNrecord")]
		public EntitySet<ABIT_proh_ball> ABIT_proh_balls
		{
			get
			{
				return this._ABIT_proh_balls;
			}
			set
			{
				this._ABIT_proh_balls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_ABIT_Diapazon_spec_fac", Storage="_Relation_spec_fac", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac", IsForeignKey=true)]
		public Relation_spec_fac Relation_spec_fac
		{
			get
			{
				return this._Relation_spec_fac.Entity;
			}
			set
			{
				Relation_spec_fac previousValue = this._Relation_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._Relation_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_spec_fac.Entity = null;
						previousValue.ABIT_Diapazon_spec_facs.Remove(this);
					}
					this._Relation_spec_fac.Entity = value;
					if ((value != null))
					{
						value.ABIT_Diapazon_spec_facs.Add(this);
						this._ik_spec_fac = value.ik_spec_fac;
					}
					else
					{
						this._ik_spec_fac = default(int);
					}
					this.SendPropertyChanged("Relation_spec_fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Diapazon_spec_fac = this;
		}
		
		private void detach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Diapazon_spec_fac = null;
		}
		
		private void attach_ABIT_proh_balls(ABIT_proh_ball entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Diapazon_spec_fac = this;
		}
		
		private void detach_ABIT_proh_balls(ABIT_proh_ball entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Diapazon_spec_fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spec_stud")]
	public partial class Spec_stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_spec;
		
		private string _Cname_spec;
		
		private string _Cshort_spec;
		
		private string _Sh_spec;
		
		private System.Nullable<int> _ik_direction;
		
		private System.Nullable<int> _Ik_vip_dep;
		
		private System.Nullable<System.DateTime> _dDate_spec;
		
		private System.Nullable<decimal> _nN_prikaz;
		
		private System.Nullable<System.DateTime> _spDateExit;
		
		private string _Cname_qualif;
		
		private EntitySet<Relation_spec_fac> _Relation_spec_facs;
		
		private EntityRef<Direction> _Direction;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_specChanging(int value);
    partial void Onik_specChanged();
    partial void OnCname_specChanging(string value);
    partial void OnCname_specChanged();
    partial void OnCshort_specChanging(string value);
    partial void OnCshort_specChanged();
    partial void OnSh_specChanging(string value);
    partial void OnSh_specChanged();
    partial void Onik_directionChanging(System.Nullable<int> value);
    partial void Onik_directionChanged();
    partial void OnIk_vip_depChanging(System.Nullable<int> value);
    partial void OnIk_vip_depChanged();
    partial void OndDate_specChanging(System.Nullable<System.DateTime> value);
    partial void OndDate_specChanged();
    partial void OnnN_prikazChanging(System.Nullable<decimal> value);
    partial void OnnN_prikazChanged();
    partial void OnspDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnspDateExitChanged();
    partial void OnCname_qualifChanging(string value);
    partial void OnCname_qualifChanged();
    #endregion
		
		public Spec_stud()
		{
			this._Relation_spec_facs = new EntitySet<Relation_spec_fac>(new Action<Relation_spec_fac>(this.attach_Relation_spec_facs), new Action<Relation_spec_fac>(this.detach_Relation_spec_facs));
			this._Direction = default(EntityRef<Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_spec
		{
			get
			{
				return this._ik_spec;
			}
			set
			{
				if ((this._ik_spec != value))
				{
					this.Onik_specChanging(value);
					this.SendPropertyChanging();
					this._ik_spec = value;
					this.SendPropertyChanged("ik_spec");
					this.Onik_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_spec", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Cname_spec
		{
			get
			{
				return this._Cname_spec;
			}
			set
			{
				if ((this._Cname_spec != value))
				{
					this.OnCname_specChanging(value);
					this.SendPropertyChanging();
					this._Cname_spec = value;
					this.SendPropertyChanged("Cname_spec");
					this.OnCname_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cshort_spec", DbType="VarChar(10)")]
		public string Cshort_spec
		{
			get
			{
				return this._Cshort_spec;
			}
			set
			{
				if ((this._Cshort_spec != value))
				{
					this.OnCshort_specChanging(value);
					this.SendPropertyChanging();
					this._Cshort_spec = value;
					this.SendPropertyChanged("Cshort_spec");
					this.OnCshort_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sh_spec", DbType="VarChar(10)")]
		public string Sh_spec
		{
			get
			{
				return this._Sh_spec;
			}
			set
			{
				if ((this._Sh_spec != value))
				{
					this.OnSh_specChanging(value);
					this.SendPropertyChanging();
					this._Sh_spec = value;
					this.SendPropertyChanged("Sh_spec");
					this.OnSh_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_direction", DbType="Int")]
		public System.Nullable<int> ik_direction
		{
			get
			{
				return this._ik_direction;
			}
			set
			{
				if ((this._ik_direction != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_directionChanging(value);
					this.SendPropertyChanging();
					this._ik_direction = value;
					this.SendPropertyChanged("ik_direction");
					this.Onik_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_vip_dep", DbType="Int")]
		public System.Nullable<int> Ik_vip_dep
		{
			get
			{
				return this._Ik_vip_dep;
			}
			set
			{
				if ((this._Ik_vip_dep != value))
				{
					this.OnIk_vip_depChanging(value);
					this.SendPropertyChanging();
					this._Ik_vip_dep = value;
					this.SendPropertyChanged("Ik_vip_dep");
					this.OnIk_vip_depChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDate_spec", DbType="DateTime")]
		public System.Nullable<System.DateTime> dDate_spec
		{
			get
			{
				return this._dDate_spec;
			}
			set
			{
				if ((this._dDate_spec != value))
				{
					this.OndDate_specChanging(value);
					this.SendPropertyChanging();
					this._dDate_spec = value;
					this.SendPropertyChanged("dDate_spec");
					this.OndDate_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nN_prikaz", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> nN_prikaz
		{
			get
			{
				return this._nN_prikaz;
			}
			set
			{
				if ((this._nN_prikaz != value))
				{
					this.OnnN_prikazChanging(value);
					this.SendPropertyChanging();
					this._nN_prikaz = value;
					this.SendPropertyChanged("nN_prikaz");
					this.OnnN_prikazChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spDateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> spDateExit
		{
			get
			{
				return this._spDateExit;
			}
			set
			{
				if ((this._spDateExit != value))
				{
					this.OnspDateExitChanging(value);
					this.SendPropertyChanging();
					this._spDateExit = value;
					this.SendPropertyChanged("spDateExit");
					this.OnspDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_qualif", DbType="VarChar(50)")]
		public string Cname_qualif
		{
			get
			{
				return this._Cname_qualif;
			}
			set
			{
				if ((this._Cname_qualif != value))
				{
					this.OnCname_qualifChanging(value);
					this.SendPropertyChanging();
					this._Cname_qualif = value;
					this.SendPropertyChanged("Cname_qualif");
					this.OnCname_qualifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_stud_Relation_spec_fac", Storage="_Relation_spec_facs", ThisKey="ik_spec", OtherKey="ik_spec")]
		public EntitySet<Relation_spec_fac> Relation_spec_facs
		{
			get
			{
				return this._Relation_spec_facs;
			}
			set
			{
				this._Relation_spec_facs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_Spec_stud", Storage="_Direction", ThisKey="ik_direction", OtherKey="ik_direction", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.Spec_studs.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.Spec_studs.Add(this);
						this._ik_direction = value.ik_direction;
					}
					else
					{
						this._ik_direction = default(Nullable<int>);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Spec_stud = this;
		}
		
		private void detach_Relation_spec_facs(Relation_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Spec_stud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Relation_spec_fac")]
	public partial class Relation_spec_fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_spec_fac;
		
		private int _ik_spec;
		
		private int _ik_fac;
		
		private System.Nullable<int> _YearObuch;
		
		private System.Nullable<int> _ik_rule;
		
		private System.Nullable<int> _Ik_form_ed;
		
		private int _ik_kat_zaved;
		
		private EntitySet<ABIT_Diapazon_spec_fac> _ABIT_Diapazon_spec_facs;
		
		private EntitySet<Grup> _Grups;
		
		private EntityRef<Fac> _Fac;
		
		private EntityRef<Spec_stud> _Spec_stud;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void Onik_specChanging(int value);
    partial void Onik_specChanged();
    partial void Onik_facChanging(int value);
    partial void Onik_facChanged();
    partial void OnYearObuchChanging(System.Nullable<int> value);
    partial void OnYearObuchChanged();
    partial void Onik_ruleChanging(System.Nullable<int> value);
    partial void Onik_ruleChanged();
    partial void OnIk_form_edChanging(System.Nullable<int> value);
    partial void OnIk_form_edChanged();
    partial void Onik_kat_zavedChanging(int value);
    partial void Onik_kat_zavedChanged();
    #endregion
		
		public Relation_spec_fac()
		{
			this._ABIT_Diapazon_spec_facs = new EntitySet<ABIT_Diapazon_spec_fac>(new Action<ABIT_Diapazon_spec_fac>(this.attach_ABIT_Diapazon_spec_facs), new Action<ABIT_Diapazon_spec_fac>(this.detach_ABIT_Diapazon_spec_facs));
			this._Grups = new EntitySet<Grup>(new Action<Grup>(this.attach_Grups), new Action<Grup>(this.detach_Grups));
			this._Fac = default(EntityRef<Fac>);
			this._Spec_stud = default(EntityRef<Spec_stud>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec", DbType="Int NOT NULL")]
		public int ik_spec
		{
			get
			{
				return this._ik_spec;
			}
			set
			{
				if ((this._ik_spec != value))
				{
					if (this._Spec_stud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_specChanging(value);
					this.SendPropertyChanging();
					this._ik_spec = value;
					this.SendPropertyChanged("ik_spec");
					this.Onik_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_fac", DbType="Int NOT NULL")]
		public int ik_fac
		{
			get
			{
				return this._ik_fac;
			}
			set
			{
				if ((this._ik_fac != value))
				{
					if (this._Fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_facChanging(value);
					this.SendPropertyChanging();
					this._ik_fac = value;
					this.SendPropertyChanged("ik_fac");
					this.Onik_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearObuch", DbType="Int")]
		public System.Nullable<int> YearObuch
		{
			get
			{
				return this._YearObuch;
			}
			set
			{
				if ((this._YearObuch != value))
				{
					this.OnYearObuchChanging(value);
					this.SendPropertyChanging();
					this._YearObuch = value;
					this.SendPropertyChanged("YearObuch");
					this.OnYearObuchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_rule", DbType="Int")]
		public System.Nullable<int> ik_rule
		{
			get
			{
				return this._ik_rule;
			}
			set
			{
				if ((this._ik_rule != value))
				{
					this.Onik_ruleChanging(value);
					this.SendPropertyChanging();
					this._ik_rule = value;
					this.SendPropertyChanged("ik_rule");
					this.Onik_ruleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_form_ed", DbType="Int")]
		public System.Nullable<int> Ik_form_ed
		{
			get
			{
				return this._Ik_form_ed;
			}
			set
			{
				if ((this._Ik_form_ed != value))
				{
					this.OnIk_form_edChanging(value);
					this.SendPropertyChanging();
					this._Ik_form_ed = value;
					this.SendPropertyChanged("Ik_form_ed");
					this.OnIk_form_edChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zaved", DbType="Int NOT NULL")]
		public int ik_kat_zaved
		{
			get
			{
				return this._ik_kat_zaved;
			}
			set
			{
				if ((this._ik_kat_zaved != value))
				{
					this.Onik_kat_zavedChanging(value);
					this.SendPropertyChanging();
					this._ik_kat_zaved = value;
					this.SendPropertyChanged("ik_kat_zaved");
					this.Onik_kat_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_ABIT_Diapazon_spec_fac", Storage="_ABIT_Diapazon_spec_facs", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac")]
		public EntitySet<ABIT_Diapazon_spec_fac> ABIT_Diapazon_spec_facs
		{
			get
			{
				return this._ABIT_Diapazon_spec_facs;
			}
			set
			{
				this._ABIT_Diapazon_spec_facs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Grup", Storage="_Grups", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac")]
		public EntitySet<Grup> Grups
		{
			get
			{
				return this._Grups;
			}
			set
			{
				this._Grups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Relation_spec_fac", Storage="_Fac", ThisKey="ik_fac", OtherKey="Ik_fac", IsForeignKey=true)]
		public Fac Fac
		{
			get
			{
				return this._Fac.Entity;
			}
			set
			{
				Fac previousValue = this._Fac.Entity;
				if (((previousValue != value) 
							|| (this._Fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fac.Entity = null;
						previousValue.Relation_spec_facs.Remove(this);
					}
					this._Fac.Entity = value;
					if ((value != null))
					{
						value.Relation_spec_facs.Add(this);
						this._ik_fac = value.Ik_fac;
					}
					else
					{
						this._ik_fac = default(int);
					}
					this.SendPropertyChanged("Fac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spec_stud_Relation_spec_fac", Storage="_Spec_stud", ThisKey="ik_spec", OtherKey="ik_spec", IsForeignKey=true)]
		public Spec_stud Spec_stud
		{
			get
			{
				return this._Spec_stud.Entity;
			}
			set
			{
				Spec_stud previousValue = this._Spec_stud.Entity;
				if (((previousValue != value) 
							|| (this._Spec_stud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spec_stud.Entity = null;
						previousValue.Relation_spec_facs.Remove(this);
					}
					this._Spec_stud.Entity = value;
					if ((value != null))
					{
						value.Relation_spec_facs.Add(this);
						this._ik_spec = value.ik_spec;
					}
					else
					{
						this._ik_spec = default(int);
					}
					this.SendPropertyChanged("Spec_stud");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Diapazon_spec_facs(ABIT_Diapazon_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = this;
		}
		
		private void detach_ABIT_Diapazon_spec_facs(ABIT_Diapazon_spec_fac entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = null;
		}
		
		private void attach_Grups(Grup entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = this;
		}
		
		private void detach_Grups(Grup entity)
		{
			this.SendPropertyChanging();
			entity.Relation_spec_fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.grazd")]
	public partial class grazd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_grazd;
		
		private string _c_grazd;
		
		private EntitySet<Person> _Persons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_grazdChanging(int value);
    partial void Onik_grazdChanged();
    partial void Onc_grazdChanging(string value);
    partial void Onc_grazdChanged();
    #endregion
		
		public grazd()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_grazd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_grazd
		{
			get
			{
				return this._ik_grazd;
			}
			set
			{
				if ((this._ik_grazd != value))
				{
					this.Onik_grazdChanging(value);
					this.SendPropertyChanging();
					this._ik_grazd = value;
					this.SendPropertyChanged("ik_grazd");
					this.Onik_grazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_grazd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string c_grazd
		{
			get
			{
				return this._c_grazd;
			}
			set
			{
				if ((this._c_grazd != value))
				{
					this.Onc_grazdChanging(value);
					this.SendPropertyChanging();
					this._c_grazd = value;
					this.SendPropertyChanged("c_grazd");
					this.Onc_grazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grazd_Person", Storage="_Persons", ThisKey="ik_grazd", OtherKey="Ik_grazd")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.grazd = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.grazd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_address;
		
		private int _Ik_street;
		
		private string _BuildingNumber;
		
		private string _StructNumber;
		
		private string _FlatNumber;
		
		private string _fIndex;
		
		private EntitySet<PersonAddress> _PersonAddresses;
		
		private EntityRef<Street> _Street;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_addressChanging(int value);
    partial void Onik_addressChanged();
    partial void OnIk_streetChanging(int value);
    partial void OnIk_streetChanged();
    partial void OnBuildingNumberChanging(string value);
    partial void OnBuildingNumberChanged();
    partial void OnStructNumberChanging(string value);
    partial void OnStructNumberChanged();
    partial void OnFlatNumberChanging(string value);
    partial void OnFlatNumberChanged();
    partial void OnfIndexChanging(string value);
    partial void OnfIndexChanged();
    #endregion
		
		public Address()
		{
			this._PersonAddresses = new EntitySet<PersonAddress>(new Action<PersonAddress>(this.attach_PersonAddresses), new Action<PersonAddress>(this.detach_PersonAddresses));
			this._Street = default(EntityRef<Street>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_address", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_address
		{
			get
			{
				return this._ik_address;
			}
			set
			{
				if ((this._ik_address != value))
				{
					this.Onik_addressChanging(value);
					this.SendPropertyChanging();
					this._ik_address = value;
					this.SendPropertyChanged("ik_address");
					this.Onik_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_street", DbType="Int NOT NULL")]
		public int Ik_street
		{
			get
			{
				return this._Ik_street;
			}
			set
			{
				if ((this._Ik_street != value))
				{
					if (this._Street.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_streetChanging(value);
					this.SendPropertyChanging();
					this._Ik_street = value;
					this.SendPropertyChanged("Ik_street");
					this.OnIk_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingNumber", DbType="VarChar(10)")]
		public string BuildingNumber
		{
			get
			{
				return this._BuildingNumber;
			}
			set
			{
				if ((this._BuildingNumber != value))
				{
					this.OnBuildingNumberChanging(value);
					this.SendPropertyChanging();
					this._BuildingNumber = value;
					this.SendPropertyChanged("BuildingNumber");
					this.OnBuildingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructNumber", DbType="VarChar(10)")]
		public string StructNumber
		{
			get
			{
				return this._StructNumber;
			}
			set
			{
				if ((this._StructNumber != value))
				{
					this.OnStructNumberChanging(value);
					this.SendPropertyChanging();
					this._StructNumber = value;
					this.SendPropertyChanged("StructNumber");
					this.OnStructNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNumber", DbType="VarChar(10)")]
		public string FlatNumber
		{
			get
			{
				return this._FlatNumber;
			}
			set
			{
				if ((this._FlatNumber != value))
				{
					this.OnFlatNumberChanging(value);
					this.SendPropertyChanging();
					this._FlatNumber = value;
					this.SendPropertyChanged("FlatNumber");
					this.OnFlatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIndex", DbType="VarChar(10)")]
		public string fIndex
		{
			get
			{
				return this._fIndex;
			}
			set
			{
				if ((this._fIndex != value))
				{
					this.OnfIndexChanging(value);
					this.SendPropertyChanging();
					this._fIndex = value;
					this.SendPropertyChanged("fIndex");
					this.OnfIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_PersonAddress", Storage="_PersonAddresses", ThisKey="ik_address", OtherKey="ik_address")]
		public EntitySet<PersonAddress> PersonAddresses
		{
			get
			{
				return this._PersonAddresses;
			}
			set
			{
				this._PersonAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Address", Storage="_Street", ThisKey="Ik_street", OtherKey="Ik_street", IsForeignKey=true)]
		public Street Street
		{
			get
			{
				return this._Street.Entity;
			}
			set
			{
				Street previousValue = this._Street.Entity;
				if (((previousValue != value) 
							|| (this._Street.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Street.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Street.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._Ik_street = value.Ik_street;
					}
					else
					{
						this._Ik_street = default(int);
					}
					this.SendPropertyChanged("Street");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonAddresses(PersonAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_PersonAddresses(PersonAddress entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Street")]
	public partial class Street : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_street;
		
		private int _ik_gorod;
		
		private string _CStreet;
		
		private System.Nullable<int> _Ik_type_street;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<Gorod> _Gorod;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_streetChanging(int value);
    partial void OnIk_streetChanged();
    partial void Onik_gorodChanging(int value);
    partial void Onik_gorodChanged();
    partial void OnCStreetChanging(string value);
    partial void OnCStreetChanged();
    partial void OnIk_type_streetChanging(System.Nullable<int> value);
    partial void OnIk_type_streetChanged();
    #endregion
		
		public Street()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Gorod = default(EntityRef<Gorod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_street", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_street
		{
			get
			{
				return this._Ik_street;
			}
			set
			{
				if ((this._Ik_street != value))
				{
					this.OnIk_streetChanging(value);
					this.SendPropertyChanging();
					this._Ik_street = value;
					this.SendPropertyChanged("Ik_street");
					this.OnIk_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_gorod", DbType="Int NOT NULL")]
		public int ik_gorod
		{
			get
			{
				return this._ik_gorod;
			}
			set
			{
				if ((this._ik_gorod != value))
				{
					if (this._Gorod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_gorodChanging(value);
					this.SendPropertyChanging();
					this._ik_gorod = value;
					this.SendPropertyChanged("ik_gorod");
					this.Onik_gorodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CStreet", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CStreet
		{
			get
			{
				return this._CStreet;
			}
			set
			{
				if ((this._CStreet != value))
				{
					this.OnCStreetChanging(value);
					this.SendPropertyChanging();
					this._CStreet = value;
					this.SendPropertyChanged("CStreet");
					this.OnCStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_type_street", DbType="Int")]
		public System.Nullable<int> Ik_type_street
		{
			get
			{
				return this._Ik_type_street;
			}
			set
			{
				if ((this._Ik_type_street != value))
				{
					this.OnIk_type_streetChanging(value);
					this.SendPropertyChanging();
					this._Ik_type_street = value;
					this.SendPropertyChanged("Ik_type_street");
					this.OnIk_type_streetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Street_Address", Storage="_Addresses", ThisKey="Ik_street", OtherKey="Ik_street")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorod_Street", Storage="_Gorod", ThisKey="ik_gorod", OtherKey="Ik_gorod", IsForeignKey=true)]
		public Gorod Gorod
		{
			get
			{
				return this._Gorod.Entity;
			}
			set
			{
				Gorod previousValue = this._Gorod.Entity;
				if (((previousValue != value) 
							|| (this._Gorod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gorod.Entity = null;
						previousValue.Streets.Remove(this);
					}
					this._Gorod.Entity = value;
					if ((value != null))
					{
						value.Streets.Add(this);
						this._ik_gorod = value.Ik_gorod;
					}
					else
					{
						this._ik_gorod = default(int);
					}
					this.SendPropertyChanged("Gorod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Street = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Street = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Strana")]
	public partial class Strana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_strana;
		
		private string _Cstrana;
		
		private bool _bit_SNG;
		
		private EntitySet<Region> _Regions;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_stranaChanging(int value);
    partial void OnIk_stranaChanged();
    partial void OnCstranaChanging(string value);
    partial void OnCstranaChanged();
    partial void Onbit_SNGChanging(bool value);
    partial void Onbit_SNGChanged();
    #endregion
		
		public Strana()
		{
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_strana", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_strana
		{
			get
			{
				return this._Ik_strana;
			}
			set
			{
				if ((this._Ik_strana != value))
				{
					this.OnIk_stranaChanging(value);
					this.SendPropertyChanging();
					this._Ik_strana = value;
					this.SendPropertyChanged("Ik_strana");
					this.OnIk_stranaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cstrana", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cstrana
		{
			get
			{
				return this._Cstrana;
			}
			set
			{
				if ((this._Cstrana != value))
				{
					this.OnCstranaChanging(value);
					this.SendPropertyChanging();
					this._Cstrana = value;
					this.SendPropertyChanged("Cstrana");
					this.OnCstranaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_SNG", DbType="Bit NOT NULL")]
		public bool bit_SNG
		{
			get
			{
				return this._bit_SNG;
			}
			set
			{
				if ((this._bit_SNG != value))
				{
					this.Onbit_SNGChanging(value);
					this.SendPropertyChanging();
					this._bit_SNG = value;
					this.SendPropertyChanged("bit_SNG");
					this.Onbit_SNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strana_Region", Storage="_Regions", ThisKey="Ik_strana", OtherKey="Ik_strana")]
		public EntitySet<Region> Regions
		{
			get
			{
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Strana = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.Strana = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_region;
		
		private string _Cregion;
		
		private int _Ik_strana;
		
		private EntitySet<Raion> _Raions;
		
		private EntityRef<Strana> _Strana;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_regionChanging(int value);
    partial void OnIk_regionChanged();
    partial void OnCregionChanging(string value);
    partial void OnCregionChanged();
    partial void OnIk_stranaChanging(int value);
    partial void OnIk_stranaChanged();
    #endregion
		
		public Region()
		{
			this._Raions = new EntitySet<Raion>(new Action<Raion>(this.attach_Raions), new Action<Raion>(this.detach_Raions));
			this._Strana = default(EntityRef<Strana>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_region", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_region
		{
			get
			{
				return this._Ik_region;
			}
			set
			{
				if ((this._Ik_region != value))
				{
					this.OnIk_regionChanging(value);
					this.SendPropertyChanging();
					this._Ik_region = value;
					this.SendPropertyChanged("Ik_region");
					this.OnIk_regionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cregion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cregion
		{
			get
			{
				return this._Cregion;
			}
			set
			{
				if ((this._Cregion != value))
				{
					this.OnCregionChanging(value);
					this.SendPropertyChanging();
					this._Cregion = value;
					this.SendPropertyChanged("Cregion");
					this.OnCregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_strana", DbType="Int NOT NULL")]
		public int Ik_strana
		{
			get
			{
				return this._Ik_strana;
			}
			set
			{
				if ((this._Ik_strana != value))
				{
					if (this._Strana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_stranaChanging(value);
					this.SendPropertyChanging();
					this._Ik_strana = value;
					this.SendPropertyChanged("Ik_strana");
					this.OnIk_stranaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Raion", Storage="_Raions", ThisKey="Ik_region", OtherKey="Ik_region")]
		public EntitySet<Raion> Raions
		{
			get
			{
				return this._Raions;
			}
			set
			{
				this._Raions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strana_Region", Storage="_Strana", ThisKey="Ik_strana", OtherKey="Ik_strana", IsForeignKey=true)]
		public Strana Strana
		{
			get
			{
				return this._Strana.Entity;
			}
			set
			{
				Strana previousValue = this._Strana.Entity;
				if (((previousValue != value) 
							|| (this._Strana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Strana.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._Strana.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._Ik_strana = value.Ik_strana;
					}
					else
					{
						this._Ik_strana = default(int);
					}
					this.SendPropertyChanged("Strana");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Raions(Raion entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Raions(Raion entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Raion")]
	public partial class Raion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_raion;
		
		private string _Craion;
		
		private int _Ik_region;
		
		private EntitySet<Gorod> _Gorods;
		
		private EntityRef<Region> _Region;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_raionChanging(int value);
    partial void OnIk_raionChanged();
    partial void OnCraionChanging(string value);
    partial void OnCraionChanged();
    partial void OnIk_regionChanging(int value);
    partial void OnIk_regionChanged();
    #endregion
		
		public Raion()
		{
			this._Gorods = new EntitySet<Gorod>(new Action<Gorod>(this.attach_Gorods), new Action<Gorod>(this.detach_Gorods));
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_raion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_raion
		{
			get
			{
				return this._Ik_raion;
			}
			set
			{
				if ((this._Ik_raion != value))
				{
					this.OnIk_raionChanging(value);
					this.SendPropertyChanging();
					this._Ik_raion = value;
					this.SendPropertyChanged("Ik_raion");
					this.OnIk_raionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Craion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Craion
		{
			get
			{
				return this._Craion;
			}
			set
			{
				if ((this._Craion != value))
				{
					this.OnCraionChanging(value);
					this.SendPropertyChanging();
					this._Craion = value;
					this.SendPropertyChanged("Craion");
					this.OnCraionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_region", DbType="Int NOT NULL")]
		public int Ik_region
		{
			get
			{
				return this._Ik_region;
			}
			set
			{
				if ((this._Ik_region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_regionChanging(value);
					this.SendPropertyChanging();
					this._Ik_region = value;
					this.SendPropertyChanged("Ik_region");
					this.OnIk_regionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Raion_Gorod", Storage="_Gorods", ThisKey="Ik_raion", OtherKey="Ik_raion")]
		public EntitySet<Gorod> Gorods
		{
			get
			{
				return this._Gorods;
			}
			set
			{
				this._Gorods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Raion", Storage="_Region", ThisKey="Ik_region", OtherKey="Ik_region", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Raions.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Raions.Add(this);
						this._Ik_region = value.Ik_region;
					}
					else
					{
						this._Ik_region = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gorods(Gorod entity)
		{
			this.SendPropertyChanging();
			entity.Raion = this;
		}
		
		private void detach_Gorods(Gorod entity)
		{
			this.SendPropertyChanging();
			entity.Raion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gorod")]
	public partial class Gorod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_gorod;
		
		private string _Cgorod;
		
		private int _Ik_raion;
		
		private string _CIndex;
		
		private System.Nullable<int> _ik_type_gorod;
		
		private EntitySet<Street> _Streets;
		
		private EntitySet<Zaved_stud> _Zaved_studs;
		
		private EntityRef<Raion> _Raion;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_gorodChanging(int value);
    partial void OnIk_gorodChanged();
    partial void OnCgorodChanging(string value);
    partial void OnCgorodChanged();
    partial void OnIk_raionChanging(int value);
    partial void OnIk_raionChanged();
    partial void OnCIndexChanging(string value);
    partial void OnCIndexChanged();
    partial void Onik_type_gorodChanging(System.Nullable<int> value);
    partial void Onik_type_gorodChanged();
    #endregion
		
		public Gorod()
		{
			this._Streets = new EntitySet<Street>(new Action<Street>(this.attach_Streets), new Action<Street>(this.detach_Streets));
			this._Zaved_studs = new EntitySet<Zaved_stud>(new Action<Zaved_stud>(this.attach_Zaved_studs), new Action<Zaved_stud>(this.detach_Zaved_studs));
			this._Raion = default(EntityRef<Raion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_gorod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_gorod
		{
			get
			{
				return this._Ik_gorod;
			}
			set
			{
				if ((this._Ik_gorod != value))
				{
					this.OnIk_gorodChanging(value);
					this.SendPropertyChanging();
					this._Ik_gorod = value;
					this.SendPropertyChanged("Ik_gorod");
					this.OnIk_gorodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cgorod", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cgorod
		{
			get
			{
				return this._Cgorod;
			}
			set
			{
				if ((this._Cgorod != value))
				{
					this.OnCgorodChanging(value);
					this.SendPropertyChanging();
					this._Cgorod = value;
					this.SendPropertyChanged("Cgorod");
					this.OnCgorodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_raion", DbType="Int NOT NULL")]
		public int Ik_raion
		{
			get
			{
				return this._Ik_raion;
			}
			set
			{
				if ((this._Ik_raion != value))
				{
					if (this._Raion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_raionChanging(value);
					this.SendPropertyChanging();
					this._Ik_raion = value;
					this.SendPropertyChanged("Ik_raion");
					this.OnIk_raionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIndex", DbType="VarChar(20)")]
		public string CIndex
		{
			get
			{
				return this._CIndex;
			}
			set
			{
				if ((this._CIndex != value))
				{
					this.OnCIndexChanging(value);
					this.SendPropertyChanging();
					this._CIndex = value;
					this.SendPropertyChanged("CIndex");
					this.OnCIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_type_gorod", DbType="Int")]
		public System.Nullable<int> ik_type_gorod
		{
			get
			{
				return this._ik_type_gorod;
			}
			set
			{
				if ((this._ik_type_gorod != value))
				{
					this.Onik_type_gorodChanging(value);
					this.SendPropertyChanging();
					this._ik_type_gorod = value;
					this.SendPropertyChanged("ik_type_gorod");
					this.Onik_type_gorodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorod_Street", Storage="_Streets", ThisKey="Ik_gorod", OtherKey="ik_gorod")]
		public EntitySet<Street> Streets
		{
			get
			{
				return this._Streets;
			}
			set
			{
				this._Streets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorod_Zaved_stud", Storage="_Zaved_studs", ThisKey="Ik_gorod", OtherKey="Ik_gorod")]
		public EntitySet<Zaved_stud> Zaved_studs
		{
			get
			{
				return this._Zaved_studs;
			}
			set
			{
				this._Zaved_studs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Raion_Gorod", Storage="_Raion", ThisKey="Ik_raion", OtherKey="Ik_raion", IsForeignKey=true)]
		public Raion Raion
		{
			get
			{
				return this._Raion.Entity;
			}
			set
			{
				Raion previousValue = this._Raion.Entity;
				if (((previousValue != value) 
							|| (this._Raion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Raion.Entity = null;
						previousValue.Gorods.Remove(this);
					}
					this._Raion.Entity = value;
					if ((value != null))
					{
						value.Gorods.Add(this);
						this._Ik_raion = value.Ik_raion;
					}
					else
					{
						this._Ik_raion = default(int);
					}
					this.SendPropertyChanged("Raion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.Gorod = this;
		}
		
		private void detach_Streets(Street entity)
		{
			this.SendPropertyChanging();
			entity.Gorod = null;
		}
		
		private void attach_Zaved_studs(Zaved_stud entity)
		{
			this.SendPropertyChanging();
			entity.Gorod = this;
		}
		
		private void detach_Zaved_studs(Zaved_stud entity)
		{
			this.SendPropertyChanging();
			entity.Gorod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zaved_stud")]
	public partial class Zaved_stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_zaved;
		
		private int _ik_typ_zaved;
		
		private int _Ik_gorod;
		
		private string _cName_zaved;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Gorod> _Gorod;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_zavedChanging(int value);
    partial void Onik_zavedChanged();
    partial void Onik_typ_zavedChanging(int value);
    partial void Onik_typ_zavedChanged();
    partial void OnIk_gorodChanging(int value);
    partial void OnIk_gorodChanged();
    partial void OncName_zavedChanging(string value);
    partial void OncName_zavedChanged();
    #endregion
		
		public Zaved_stud()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Gorod = default(EntityRef<Gorod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_zaved", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_zaved
		{
			get
			{
				return this._ik_zaved;
			}
			set
			{
				if ((this._ik_zaved != value))
				{
					this.Onik_zavedChanging(value);
					this.SendPropertyChanging();
					this._ik_zaved = value;
					this.SendPropertyChanged("ik_zaved");
					this.Onik_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_typ_zaved", DbType="Int NOT NULL")]
		public int ik_typ_zaved
		{
			get
			{
				return this._ik_typ_zaved;
			}
			set
			{
				if ((this._ik_typ_zaved != value))
				{
					this.Onik_typ_zavedChanging(value);
					this.SendPropertyChanging();
					this._ik_typ_zaved = value;
					this.SendPropertyChanged("ik_typ_zaved");
					this.Onik_typ_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_gorod", DbType="Int NOT NULL")]
		public int Ik_gorod
		{
			get
			{
				return this._Ik_gorod;
			}
			set
			{
				if ((this._Ik_gorod != value))
				{
					if (this._Gorod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_gorodChanging(value);
					this.SendPropertyChanging();
					this._Ik_gorod = value;
					this.SendPropertyChanged("Ik_gorod");
					this.OnIk_gorodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_zaved", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string cName_zaved
		{
			get
			{
				return this._cName_zaved;
			}
			set
			{
				if ((this._cName_zaved != value))
				{
					this.OncName_zavedChanging(value);
					this.SendPropertyChanging();
					this._cName_zaved = value;
					this.SendPropertyChanged("cName_zaved");
					this.OncName_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaved_stud_Student", Storage="_Students", ThisKey="ik_zaved", OtherKey="Ik_zaved")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gorod_Zaved_stud", Storage="_Gorod", ThisKey="Ik_gorod", OtherKey="Ik_gorod", IsForeignKey=true)]
		public Gorod Gorod
		{
			get
			{
				return this._Gorod.Entity;
			}
			set
			{
				Gorod previousValue = this._Gorod.Entity;
				if (((previousValue != value) 
							|| (this._Gorod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gorod.Entity = null;
						previousValue.Zaved_studs.Remove(this);
					}
					this._Gorod.Entity = value;
					if ((value != null))
					{
						value.Zaved_studs.Add(this);
						this._Ik_gorod = value.Ik_gorod;
					}
					else
					{
						this._Ik_gorod = default(int);
					}
					this.SendPropertyChanged("Gorod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Zaved_stud = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Zaved_stud = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vid_ob_rab")]
	public partial class Vid_ob_rab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_ob_rab;
		
		private string _Cname_ob_rab;
		
		private EntitySet<Student> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_ob_rabChanging(int value);
    partial void OnIk_ob_rabChanged();
    partial void OnCname_ob_rabChanging(string value);
    partial void OnCname_ob_rabChanged();
    #endregion
		
		public Vid_ob_rab()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_ob_rab", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_ob_rab
		{
			get
			{
				return this._Ik_ob_rab;
			}
			set
			{
				if ((this._Ik_ob_rab != value))
				{
					this.OnIk_ob_rabChanging(value);
					this.SendPropertyChanging();
					this._Ik_ob_rab = value;
					this.SendPropertyChanged("Ik_ob_rab");
					this.OnIk_ob_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_ob_rab", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_ob_rab
		{
			get
			{
				return this._Cname_ob_rab;
			}
			set
			{
				if ((this._Cname_ob_rab != value))
				{
					this.OnCname_ob_rabChanging(value);
					this.SendPropertyChanging();
					this._Cname_ob_rab = value;
					this.SendPropertyChanged("Cname_ob_rab");
					this.OnCname_ob_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vid_ob_rab_Student", Storage="_Students", ThisKey="Ik_ob_rab", OtherKey="Ik_ob_rab")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Vid_ob_rab = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Vid_ob_rab = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abit_podg")]
	public partial class Abit_podg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_podg;
		
		private string _Cname_podg;
		
		private EntitySet<Student> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_podgChanging(int value);
    partial void OnIk_podgChanged();
    partial void OnCname_podgChanging(string value);
    partial void OnCname_podgChanged();
    #endregion
		
		public Abit_podg()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_podg", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_podg
		{
			get
			{
				return this._Ik_podg;
			}
			set
			{
				if ((this._Ik_podg != value))
				{
					this.OnIk_podgChanging(value);
					this.SendPropertyChanging();
					this._Ik_podg = value;
					this.SendPropertyChanged("Ik_podg");
					this.OnIk_podgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_podg", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_podg
		{
			get
			{
				return this._Cname_podg;
			}
			set
			{
				if ((this._Cname_podg != value))
				{
					this.OnCname_podgChanging(value);
					this.SendPropertyChanging();
					this._Cname_podg = value;
					this.SendPropertyChanged("Cname_podg");
					this.OnCname_podgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abit_podg_Student", Storage="_Students", ThisKey="Ik_podg", OtherKey="Ik_podg")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Abit_podg = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Abit_podg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.medal_abit")]
	public partial class medal_abit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_medal;
		
		private string _cmedal;
		
		private EntitySet<Student> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_medalChanging(int value);
    partial void Onik_medalChanged();
    partial void OncmedalChanging(string value);
    partial void OncmedalChanged();
    #endregion
		
		public medal_abit()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_medal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_medal
		{
			get
			{
				return this._ik_medal;
			}
			set
			{
				if ((this._ik_medal != value))
				{
					this.Onik_medalChanging(value);
					this.SendPropertyChanging();
					this._ik_medal = value;
					this.SendPropertyChanged("ik_medal");
					this.Onik_medalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cmedal", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string cmedal
		{
			get
			{
				return this._cmedal;
			}
			set
			{
				if ((this._cmedal != value))
				{
					this.OncmedalChanging(value);
					this.SendPropertyChanging();
					this._cmedal = value;
					this.SendPropertyChanged("cmedal");
					this.OncmedalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medal_abit_Student", Storage="_Students", ThisKey="ik_medal", OtherKey="ik_medal")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.medal_abit = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.medal_abit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Special_uchet")]
	public partial class Special_uchet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_special_uchet;
		
		private string _Cspecial_uchet;
		
		private EntitySet<Student> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_special_uchetChanging(int value);
    partial void OnIk_special_uchetChanged();
    partial void OnCspecial_uchetChanging(string value);
    partial void OnCspecial_uchetChanged();
    #endregion
		
		public Special_uchet()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_special_uchet", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_special_uchet
		{
			get
			{
				return this._Ik_special_uchet;
			}
			set
			{
				if ((this._Ik_special_uchet != value))
				{
					this.OnIk_special_uchetChanging(value);
					this.SendPropertyChanging();
					this._Ik_special_uchet = value;
					this.SendPropertyChanged("Ik_special_uchet");
					this.OnIk_special_uchetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cspecial_uchet", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cspecial_uchet
		{
			get
			{
				return this._Cspecial_uchet;
			}
			set
			{
				if ((this._Cspecial_uchet != value))
				{
					this.OnCspecial_uchetChanging(value);
					this.SendPropertyChanging();
					this._Cspecial_uchet = value;
					this.SendPropertyChanged("Cspecial_uchet");
					this.OnCspecial_uchetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Special_uchet_Student", Storage="_Students", ThisKey="Ik_special_uchet", OtherKey="Ik_special_uchet")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Special_uchet = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Special_uchet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Predpr")]
	public partial class Predpr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_pred;
		
		private string _Cname_pred;
		
		private EntitySet<Student> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_predChanging(int value);
    partial void OnIk_predChanged();
    partial void OnCname_predChanging(string value);
    partial void OnCname_predChanged();
    #endregion
		
		public Predpr()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_pred", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_pred
		{
			get
			{
				return this._Ik_pred;
			}
			set
			{
				if ((this._Ik_pred != value))
				{
					this.OnIk_predChanging(value);
					this.SendPropertyChanging();
					this._Ik_pred = value;
					this.SendPropertyChanged("Ik_pred");
					this.OnIk_predChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_pred", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Cname_pred
		{
			get
			{
				return this._Cname_pred;
			}
			set
			{
				if ((this._Cname_pred != value))
				{
					this.OnCname_predChanging(value);
					this.SendPropertyChanging();
					this._Cname_pred = value;
					this.SendPropertyChanged("Cname_pred");
					this.OnCname_predChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predpr_Student", Storage="_Students", ThisKey="Ik_pred", OtherKey="ik_pred")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Predpr = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Predpr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.documents")]
	public partial class document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_vid_doc;
		
		private string _cvid_doc;
		
		private bool _IsDefault;
		
		private bool _IsIdentity;
		
		private bool _IsEducational;
		
		private EntitySet<Doc_stud> _Doc_studs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_vid_docChanging(int value);
    partial void Onik_vid_docChanged();
    partial void Oncvid_docChanging(string value);
    partial void Oncvid_docChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIsIdentityChanging(bool value);
    partial void OnIsIdentityChanged();
    partial void OnIsEducationalChanging(bool value);
    partial void OnIsEducationalChanged();
    #endregion
		
		public document()
		{
			this._Doc_studs = new EntitySet<Doc_stud>(new Action<Doc_stud>(this.attach_Doc_studs), new Action<Doc_stud>(this.detach_Doc_studs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_vid_doc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_vid_doc
		{
			get
			{
				return this._ik_vid_doc;
			}
			set
			{
				if ((this._ik_vid_doc != value))
				{
					this.Onik_vid_docChanging(value);
					this.SendPropertyChanging();
					this._ik_vid_doc = value;
					this.SendPropertyChanged("ik_vid_doc");
					this.Onik_vid_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cvid_doc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cvid_doc
		{
			get
			{
				return this._cvid_doc;
			}
			set
			{
				if ((this._cvid_doc != value))
				{
					this.Oncvid_docChanging(value);
					this.SendPropertyChanging();
					this._cvid_doc = value;
					this.SendPropertyChanged("cvid_doc");
					this.Oncvid_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIdentity", DbType="Bit NOT NULL")]
		public bool IsIdentity
		{
			get
			{
				return this._IsIdentity;
			}
			set
			{
				if ((this._IsIdentity != value))
				{
					this.OnIsIdentityChanging(value);
					this.SendPropertyChanging();
					this._IsIdentity = value;
					this.SendPropertyChanged("IsIdentity");
					this.OnIsIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEducational", DbType="Bit NOT NULL")]
		public bool IsEducational
		{
			get
			{
				return this._IsEducational;
			}
			set
			{
				if ((this._IsEducational != value))
				{
					this.OnIsEducationalChanging(value);
					this.SendPropertyChanging();
					this._IsEducational = value;
					this.SendPropertyChanged("IsEducational");
					this.OnIsEducationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_Doc_stud", Storage="_Doc_studs", ThisKey="ik_vid_doc", OtherKey="Ik_vid_doc")]
		public EntitySet<Doc_stud> Doc_studs
		{
			get
			{
				return this._Doc_studs;
			}
			set
			{
				this._Doc_studs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doc_studs(Doc_stud entity)
		{
			this.SendPropertyChanging();
			entity.document = this;
		}
		
		private void detach_Doc_studs(Doc_stud entity)
		{
			this.SendPropertyChanging();
			entity.document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doc_stud")]
	public partial class Doc_stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_doc;
		
		private System.Nullable<System.DateTime> _Dd_vidan;
		
		private string _Cd_kem_vidan;
		
		private int _Ik_vid_doc;
		
		private string _Np_number;
		
		private string _Cd_seria;
		
		private decimal _nCode;
		
		private EntityRef<document> _document;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_docChanging(int value);
    partial void OnIk_docChanged();
    partial void OnDd_vidanChanging(System.Nullable<System.DateTime> value);
    partial void OnDd_vidanChanged();
    partial void OnCd_kem_vidanChanging(string value);
    partial void OnCd_kem_vidanChanged();
    partial void OnIk_vid_docChanging(int value);
    partial void OnIk_vid_docChanged();
    partial void OnNp_numberChanging(string value);
    partial void OnNp_numberChanged();
    partial void OnCd_seriaChanging(string value);
    partial void OnCd_seriaChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    #endregion
		
		public Doc_stud()
		{
			this._document = default(EntityRef<document>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_doc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_doc
		{
			get
			{
				return this._Ik_doc;
			}
			set
			{
				if ((this._Ik_doc != value))
				{
					this.OnIk_docChanging(value);
					this.SendPropertyChanging();
					this._Ik_doc = value;
					this.SendPropertyChanged("Ik_doc");
					this.OnIk_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dd_vidan", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dd_vidan
		{
			get
			{
				return this._Dd_vidan;
			}
			set
			{
				if ((this._Dd_vidan != value))
				{
					this.OnDd_vidanChanging(value);
					this.SendPropertyChanging();
					this._Dd_vidan = value;
					this.SendPropertyChanged("Dd_vidan");
					this.OnDd_vidanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd_kem_vidan", DbType="VarChar(150)")]
		public string Cd_kem_vidan
		{
			get
			{
				return this._Cd_kem_vidan;
			}
			set
			{
				if ((this._Cd_kem_vidan != value))
				{
					this.OnCd_kem_vidanChanging(value);
					this.SendPropertyChanging();
					this._Cd_kem_vidan = value;
					this.SendPropertyChanged("Cd_kem_vidan");
					this.OnCd_kem_vidanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_vid_doc", DbType="Int NOT NULL")]
		public int Ik_vid_doc
		{
			get
			{
				return this._Ik_vid_doc;
			}
			set
			{
				if ((this._Ik_vid_doc != value))
				{
					if (this._document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_vid_docChanging(value);
					this.SendPropertyChanging();
					this._Ik_vid_doc = value;
					this.SendPropertyChanged("Ik_vid_doc");
					this.OnIk_vid_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Np_number", DbType="VarChar(15)")]
		public string Np_number
		{
			get
			{
				return this._Np_number;
			}
			set
			{
				if ((this._Np_number != value))
				{
					this.OnNp_numberChanging(value);
					this.SendPropertyChanging();
					this._Np_number = value;
					this.SendPropertyChanged("Np_number");
					this.OnNp_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd_seria", DbType="VarChar(10)")]
		public string Cd_seria
		{
			get
			{
				return this._Cd_seria;
			}
			set
			{
				if ((this._Cd_seria != value))
				{
					this.OnCd_seriaChanging(value);
					this.SendPropertyChanging();
					this._Cd_seria = value;
					this.SendPropertyChanged("Cd_seria");
					this.OnCd_seriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_Doc_stud", Storage="_document", ThisKey="Ik_vid_doc", OtherKey="ik_vid_doc", IsForeignKey=true)]
		public document document
		{
			get
			{
				return this._document.Entity;
			}
			set
			{
				document previousValue = this._document.Entity;
				if (((previousValue != value) 
							|| (this._document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document.Entity = null;
						previousValue.Doc_studs.Remove(this);
					}
					this._document.Entity = value;
					if ((value != null))
					{
						value.Doc_studs.Add(this);
						this._Ik_vid_doc = value.ik_vid_doc;
					}
					else
					{
						this._Ik_vid_doc = default(int);
					}
					this.SendPropertyChanged("document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Doc_stud", Storage="_Person", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Doc_studs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Doc_studs.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _nCode;
		
		private string _Clastname;
		
		private string _Cfirstname;
		
		private string _Cotch;
		
		private System.Nullable<System.DateTime> _Dd_birth;
		
		private string _Cplacebirth;
		
		private System.Nullable<bool> _Linval;
		
		private System.Nullable<bool> _Ldeti;
		
		private System.Nullable<bool> _Lrab;
		
		private System.Nullable<bool> _lSex;
		
		private System.Nullable<bool> _Lobchegit;
		
		private string _cSotTel;
		
		private string _ctelefon;
		
		private string _cEmail;
		
		private System.Data.Linq.Binary _Photo;
		
		private System.Nullable<int> _Ik_grazd;
		
		private System.Nullable<int> _Ik_sem_pol;
		
		private string _cInn;
		
		private string _cStrax;
		
		private System.Nullable<int> _ik_voen_zvanie;
		
		private System.Nullable<int> _itab_n;
		
		private System.Nullable<int> _ik_nac;
		
		private EntitySet<Doc_stud> _Doc_studs;
		
		private EntityRef<Student> _Student;
		
		private EntitySet<Lang_stud> _Lang_studs;
		
		private EntitySet<PersonAddress> _PersonAddresses;
		
		private EntityRef<grazd> _grazd;
		
		private EntityRef<Voen_zvanie> _Voen_zvanie;
		
		private EntityRef<sem_pol> _sem_pol;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    partial void OnClastnameChanging(string value);
    partial void OnClastnameChanged();
    partial void OnCfirstnameChanging(string value);
    partial void OnCfirstnameChanged();
    partial void OnCotchChanging(string value);
    partial void OnCotchChanged();
    partial void OnDd_birthChanging(System.Nullable<System.DateTime> value);
    partial void OnDd_birthChanged();
    partial void OnCplacebirthChanging(string value);
    partial void OnCplacebirthChanged();
    partial void OnLinvalChanging(System.Nullable<bool> value);
    partial void OnLinvalChanged();
    partial void OnLdetiChanging(System.Nullable<bool> value);
    partial void OnLdetiChanged();
    partial void OnLrabChanging(System.Nullable<bool> value);
    partial void OnLrabChanged();
    partial void OnlSexChanging(System.Nullable<bool> value);
    partial void OnlSexChanged();
    partial void OnLobchegitChanging(System.Nullable<bool> value);
    partial void OnLobchegitChanged();
    partial void OncSotTelChanging(string value);
    partial void OncSotTelChanged();
    partial void OnctelefonChanging(string value);
    partial void OnctelefonChanged();
    partial void OncEmailChanging(string value);
    partial void OncEmailChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnIk_grazdChanging(System.Nullable<int> value);
    partial void OnIk_grazdChanged();
    partial void OnIk_sem_polChanging(System.Nullable<int> value);
    partial void OnIk_sem_polChanged();
    partial void OncInnChanging(string value);
    partial void OncInnChanged();
    partial void OncStraxChanging(string value);
    partial void OncStraxChanged();
    partial void Onik_voen_zvanieChanging(System.Nullable<int> value);
    partial void Onik_voen_zvanieChanged();
    partial void Onitab_nChanging(System.Nullable<int> value);
    partial void Onitab_nChanged();
    partial void Onik_nacChanging(System.Nullable<int> value);
    partial void Onik_nacChanged();
    #endregion
		
		public Person()
		{
			this._Doc_studs = new EntitySet<Doc_stud>(new Action<Doc_stud>(this.attach_Doc_studs), new Action<Doc_stud>(this.detach_Doc_studs));
			this._Student = default(EntityRef<Student>);
			this._Lang_studs = new EntitySet<Lang_stud>(new Action<Lang_stud>(this.attach_Lang_studs), new Action<Lang_stud>(this.detach_Lang_studs));
			this._PersonAddresses = new EntitySet<PersonAddress>(new Action<PersonAddress>(this.attach_PersonAddresses), new Action<PersonAddress>(this.detach_PersonAddresses));
			this._grazd = default(EntityRef<grazd>);
			this._Voen_zvanie = default(EntityRef<Voen_zvanie>);
			this._sem_pol = default(EntityRef<sem_pol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clastname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Clastname
		{
			get
			{
				return this._Clastname;
			}
			set
			{
				if ((this._Clastname != value))
				{
					this.OnClastnameChanging(value);
					this.SendPropertyChanging();
					this._Clastname = value;
					this.SendPropertyChanged("Clastname");
					this.OnClastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cfirstname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cfirstname
		{
			get
			{
				return this._Cfirstname;
			}
			set
			{
				if ((this._Cfirstname != value))
				{
					this.OnCfirstnameChanging(value);
					this.SendPropertyChanging();
					this._Cfirstname = value;
					this.SendPropertyChanged("Cfirstname");
					this.OnCfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cotch", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cotch
		{
			get
			{
				return this._Cotch;
			}
			set
			{
				if ((this._Cotch != value))
				{
					this.OnCotchChanging(value);
					this.SendPropertyChanging();
					this._Cotch = value;
					this.SendPropertyChanged("Cotch");
					this.OnCotchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dd_birth", DbType="DateTime")]
		public System.Nullable<System.DateTime> Dd_birth
		{
			get
			{
				return this._Dd_birth;
			}
			set
			{
				if ((this._Dd_birth != value))
				{
					this.OnDd_birthChanging(value);
					this.SendPropertyChanging();
					this._Dd_birth = value;
					this.SendPropertyChanged("Dd_birth");
					this.OnDd_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cplacebirth", DbType="VarChar(300)")]
		public string Cplacebirth
		{
			get
			{
				return this._Cplacebirth;
			}
			set
			{
				if ((this._Cplacebirth != value))
				{
					this.OnCplacebirthChanging(value);
					this.SendPropertyChanging();
					this._Cplacebirth = value;
					this.SendPropertyChanged("Cplacebirth");
					this.OnCplacebirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linval", DbType="Bit")]
		public System.Nullable<bool> Linval
		{
			get
			{
				return this._Linval;
			}
			set
			{
				if ((this._Linval != value))
				{
					this.OnLinvalChanging(value);
					this.SendPropertyChanging();
					this._Linval = value;
					this.SendPropertyChanged("Linval");
					this.OnLinvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ldeti", DbType="Bit")]
		public System.Nullable<bool> Ldeti
		{
			get
			{
				return this._Ldeti;
			}
			set
			{
				if ((this._Ldeti != value))
				{
					this.OnLdetiChanging(value);
					this.SendPropertyChanging();
					this._Ldeti = value;
					this.SendPropertyChanged("Ldeti");
					this.OnLdetiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lrab", DbType="Bit")]
		public System.Nullable<bool> Lrab
		{
			get
			{
				return this._Lrab;
			}
			set
			{
				if ((this._Lrab != value))
				{
					this.OnLrabChanging(value);
					this.SendPropertyChanging();
					this._Lrab = value;
					this.SendPropertyChanged("Lrab");
					this.OnLrabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lSex", DbType="Bit")]
		public System.Nullable<bool> lSex
		{
			get
			{
				return this._lSex;
			}
			set
			{
				if ((this._lSex != value))
				{
					this.OnlSexChanging(value);
					this.SendPropertyChanging();
					this._lSex = value;
					this.SendPropertyChanged("lSex");
					this.OnlSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lobchegit", DbType="Bit")]
		public System.Nullable<bool> Lobchegit
		{
			get
			{
				return this._Lobchegit;
			}
			set
			{
				if ((this._Lobchegit != value))
				{
					this.OnLobchegitChanging(value);
					this.SendPropertyChanging();
					this._Lobchegit = value;
					this.SendPropertyChanged("Lobchegit");
					this.OnLobchegitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cSotTel", DbType="VarChar(50)")]
		public string cSotTel
		{
			get
			{
				return this._cSotTel;
			}
			set
			{
				if ((this._cSotTel != value))
				{
					this.OncSotTelChanging(value);
					this.SendPropertyChanging();
					this._cSotTel = value;
					this.SendPropertyChanged("cSotTel");
					this.OncSotTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctelefon", DbType="VarChar(20)")]
		public string ctelefon
		{
			get
			{
				return this._ctelefon;
			}
			set
			{
				if ((this._ctelefon != value))
				{
					this.OnctelefonChanging(value);
					this.SendPropertyChanging();
					this._ctelefon = value;
					this.SendPropertyChanged("ctelefon");
					this.OnctelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cEmail", DbType="VarChar(50)")]
		public string cEmail
		{
			get
			{
				return this._cEmail;
			}
			set
			{
				if ((this._cEmail != value))
				{
					this.OncEmailChanging(value);
					this.SendPropertyChanging();
					this._cEmail = value;
					this.SendPropertyChanged("cEmail");
					this.OncEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grazd", DbType="Int")]
		public System.Nullable<int> Ik_grazd
		{
			get
			{
				return this._Ik_grazd;
			}
			set
			{
				if ((this._Ik_grazd != value))
				{
					if (this._grazd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_grazdChanging(value);
					this.SendPropertyChanging();
					this._Ik_grazd = value;
					this.SendPropertyChanged("Ik_grazd");
					this.OnIk_grazdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_sem_pol", DbType="Int")]
		public System.Nullable<int> Ik_sem_pol
		{
			get
			{
				return this._Ik_sem_pol;
			}
			set
			{
				if ((this._Ik_sem_pol != value))
				{
					if (this._sem_pol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_sem_polChanging(value);
					this.SendPropertyChanging();
					this._Ik_sem_pol = value;
					this.SendPropertyChanged("Ik_sem_pol");
					this.OnIk_sem_polChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cInn", DbType="VarChar(20)")]
		public string cInn
		{
			get
			{
				return this._cInn;
			}
			set
			{
				if ((this._cInn != value))
				{
					this.OncInnChanging(value);
					this.SendPropertyChanging();
					this._cInn = value;
					this.SendPropertyChanged("cInn");
					this.OncInnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStrax", DbType="VarChar(20)")]
		public string cStrax
		{
			get
			{
				return this._cStrax;
			}
			set
			{
				if ((this._cStrax != value))
				{
					this.OncStraxChanging(value);
					this.SendPropertyChanging();
					this._cStrax = value;
					this.SendPropertyChanged("cStrax");
					this.OncStraxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_voen_zvanie", DbType="Int")]
		public System.Nullable<int> ik_voen_zvanie
		{
			get
			{
				return this._ik_voen_zvanie;
			}
			set
			{
				if ((this._ik_voen_zvanie != value))
				{
					if (this._Voen_zvanie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_voen_zvanieChanging(value);
					this.SendPropertyChanging();
					this._ik_voen_zvanie = value;
					this.SendPropertyChanged("ik_voen_zvanie");
					this.Onik_voen_zvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itab_n", DbType="Int")]
		public System.Nullable<int> itab_n
		{
			get
			{
				return this._itab_n;
			}
			set
			{
				if ((this._itab_n != value))
				{
					this.Onitab_nChanging(value);
					this.SendPropertyChanging();
					this._itab_n = value;
					this.SendPropertyChanged("itab_n");
					this.Onitab_nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_nac", DbType="Int")]
		public System.Nullable<int> ik_nac
		{
			get
			{
				return this._ik_nac;
			}
			set
			{
				if ((this._ik_nac != value))
				{
					this.Onik_nacChanging(value);
					this.SendPropertyChanging();
					this._ik_nac = value;
					this.SendPropertyChanged("ik_nac");
					this.Onik_nacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Doc_stud", Storage="_Doc_studs", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<Doc_stud> Doc_studs
		{
			get
			{
				return this._Doc_studs;
			}
			set
			{
				this._Doc_studs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Student", Storage="_Student", ThisKey="nCode", OtherKey="nCode", IsUnique=true, IsForeignKey=false)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Person = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Lang_stud", Storage="_Lang_studs", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<Lang_stud> Lang_studs
		{
			get
			{
				return this._Lang_studs;
			}
			set
			{
				this._Lang_studs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonAddress", Storage="_PersonAddresses", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<PersonAddress> PersonAddresses
		{
			get
			{
				return this._PersonAddresses;
			}
			set
			{
				this._PersonAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="grazd_Person", Storage="_grazd", ThisKey="Ik_grazd", OtherKey="ik_grazd", IsForeignKey=true)]
		public grazd grazd
		{
			get
			{
				return this._grazd.Entity;
			}
			set
			{
				grazd previousValue = this._grazd.Entity;
				if (((previousValue != value) 
							|| (this._grazd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._grazd.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._grazd.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._Ik_grazd = value.ik_grazd;
					}
					else
					{
						this._Ik_grazd = default(Nullable<int>);
					}
					this.SendPropertyChanged("grazd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voen_zvanie_Person", Storage="_Voen_zvanie", ThisKey="ik_voen_zvanie", OtherKey="Ik_voen_zvanie", IsForeignKey=true)]
		public Voen_zvanie Voen_zvanie
		{
			get
			{
				return this._Voen_zvanie.Entity;
			}
			set
			{
				Voen_zvanie previousValue = this._Voen_zvanie.Entity;
				if (((previousValue != value) 
							|| (this._Voen_zvanie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Voen_zvanie.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._Voen_zvanie.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._ik_voen_zvanie = value.Ik_voen_zvanie;
					}
					else
					{
						this._ik_voen_zvanie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Voen_zvanie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sem_pol_Person", Storage="_sem_pol", ThisKey="Ik_sem_pol", OtherKey="ik_sem_pol", IsForeignKey=true)]
		public sem_pol sem_pol
		{
			get
			{
				return this._sem_pol.Entity;
			}
			set
			{
				sem_pol previousValue = this._sem_pol.Entity;
				if (((previousValue != value) 
							|| (this._sem_pol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sem_pol.Entity = null;
						previousValue.Persons.Remove(this);
					}
					this._sem_pol.Entity = value;
					if ((value != null))
					{
						value.Persons.Add(this);
						this._Ik_sem_pol = value.ik_sem_pol;
					}
					else
					{
						this._Ik_sem_pol = default(Nullable<int>);
					}
					this.SendPropertyChanged("sem_pol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doc_studs(Doc_stud entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Doc_studs(Doc_stud entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PersonAddresses(PersonAddress entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonAddresses(PersonAddress entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _nCode;
		
		private System.Nullable<decimal> _Nn_abit;
		
		private int _ik_medal;
		
		private System.Nullable<int> _Ik_vid_pens;
		
		private System.Nullable<int> _Ik_podg;
		
		private System.Nullable<int> _Ik_ob_rab;
		
		private System.Nullable<int> _Ik_special_uchet;
		
		private System.Nullable<int> _Ik_zaved;
		
		private System.Nullable<decimal> _Ngodokon;
		
		private string _Cdopsved;
		
		private System.Nullable<int> _ik_pred;
		
		private string _cDolgnost;
		
		private System.Nullable<int> _StazYear;
		
		private System.Nullable<int> _StazMonth;
		
		private string _cLgot;
		
		private string _cOsnovan;
		
		private EntitySet<ABIT_postup> _ABIT_postups;
		
		private EntitySet<Zach> _Zaches;
		
		private EntityRef<Abit_podg> _Abit_podg;
		
		private EntityRef<medal_abit> _medal_abit;
		
		private EntityRef<Predpr> _Predpr;
		
		private EntityRef<Special_uchet> _Special_uchet;
		
		private EntityRef<Vid_ob_rab> _Vid_ob_rab;
		
		private EntityRef<Zaved_stud> _Zaved_stud;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    partial void OnNn_abitChanging(System.Nullable<decimal> value);
    partial void OnNn_abitChanged();
    partial void Onik_medalChanging(int value);
    partial void Onik_medalChanged();
    partial void OnIk_vid_pensChanging(System.Nullable<int> value);
    partial void OnIk_vid_pensChanged();
    partial void OnIk_podgChanging(System.Nullable<int> value);
    partial void OnIk_podgChanged();
    partial void OnIk_ob_rabChanging(System.Nullable<int> value);
    partial void OnIk_ob_rabChanged();
    partial void OnIk_special_uchetChanging(System.Nullable<int> value);
    partial void OnIk_special_uchetChanged();
    partial void OnIk_zavedChanging(System.Nullable<int> value);
    partial void OnIk_zavedChanged();
    partial void OnNgodokonChanging(System.Nullable<decimal> value);
    partial void OnNgodokonChanged();
    partial void OnCdopsvedChanging(string value);
    partial void OnCdopsvedChanged();
    partial void Onik_predChanging(System.Nullable<int> value);
    partial void Onik_predChanged();
    partial void OncDolgnostChanging(string value);
    partial void OncDolgnostChanged();
    partial void OnStazYearChanging(System.Nullable<int> value);
    partial void OnStazYearChanged();
    partial void OnStazMonthChanging(System.Nullable<int> value);
    partial void OnStazMonthChanged();
    partial void OncLgotChanging(string value);
    partial void OncLgotChanged();
    partial void OncOsnovanChanging(string value);
    partial void OncOsnovanChanged();
    #endregion
		
		public Student()
		{
			this._ABIT_postups = new EntitySet<ABIT_postup>(new Action<ABIT_postup>(this.attach_ABIT_postups), new Action<ABIT_postup>(this.detach_ABIT_postups));
			this._Zaches = new EntitySet<Zach>(new Action<Zach>(this.attach_Zaches), new Action<Zach>(this.detach_Zaches));
			this._Abit_podg = default(EntityRef<Abit_podg>);
			this._medal_abit = default(EntityRef<medal_abit>);
			this._Predpr = default(EntityRef<Predpr>);
			this._Special_uchet = default(EntityRef<Special_uchet>);
			this._Vid_ob_rab = default(EntityRef<Vid_ob_rab>);
			this._Zaved_stud = default(EntityRef<Zaved_stud>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nn_abit", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Nn_abit
		{
			get
			{
				return this._Nn_abit;
			}
			set
			{
				if ((this._Nn_abit != value))
				{
					this.OnNn_abitChanging(value);
					this.SendPropertyChanging();
					this._Nn_abit = value;
					this.SendPropertyChanged("Nn_abit");
					this.OnNn_abitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_medal", DbType="Int NOT NULL")]
		public int ik_medal
		{
			get
			{
				return this._ik_medal;
			}
			set
			{
				if ((this._ik_medal != value))
				{
					if (this._medal_abit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_medalChanging(value);
					this.SendPropertyChanging();
					this._ik_medal = value;
					this.SendPropertyChanged("ik_medal");
					this.Onik_medalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_vid_pens", DbType="Int")]
		public System.Nullable<int> Ik_vid_pens
		{
			get
			{
				return this._Ik_vid_pens;
			}
			set
			{
				if ((this._Ik_vid_pens != value))
				{
					this.OnIk_vid_pensChanging(value);
					this.SendPropertyChanging();
					this._Ik_vid_pens = value;
					this.SendPropertyChanged("Ik_vid_pens");
					this.OnIk_vid_pensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_podg", DbType="Int")]
		public System.Nullable<int> Ik_podg
		{
			get
			{
				return this._Ik_podg;
			}
			set
			{
				if ((this._Ik_podg != value))
				{
					if (this._Abit_podg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_podgChanging(value);
					this.SendPropertyChanging();
					this._Ik_podg = value;
					this.SendPropertyChanged("Ik_podg");
					this.OnIk_podgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_ob_rab", DbType="Int")]
		public System.Nullable<int> Ik_ob_rab
		{
			get
			{
				return this._Ik_ob_rab;
			}
			set
			{
				if ((this._Ik_ob_rab != value))
				{
					if (this._Vid_ob_rab.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_ob_rabChanging(value);
					this.SendPropertyChanging();
					this._Ik_ob_rab = value;
					this.SendPropertyChanged("Ik_ob_rab");
					this.OnIk_ob_rabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_special_uchet", DbType="Int")]
		public System.Nullable<int> Ik_special_uchet
		{
			get
			{
				return this._Ik_special_uchet;
			}
			set
			{
				if ((this._Ik_special_uchet != value))
				{
					if (this._Special_uchet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_special_uchetChanging(value);
					this.SendPropertyChanging();
					this._Ik_special_uchet = value;
					this.SendPropertyChanged("Ik_special_uchet");
					this.OnIk_special_uchetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_zaved", DbType="Int")]
		public System.Nullable<int> Ik_zaved
		{
			get
			{
				return this._Ik_zaved;
			}
			set
			{
				if ((this._Ik_zaved != value))
				{
					if (this._Zaved_stud.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_zavedChanging(value);
					this.SendPropertyChanging();
					this._Ik_zaved = value;
					this.SendPropertyChanged("Ik_zaved");
					this.OnIk_zavedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngodokon", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Ngodokon
		{
			get
			{
				return this._Ngodokon;
			}
			set
			{
				if ((this._Ngodokon != value))
				{
					this.OnNgodokonChanging(value);
					this.SendPropertyChanging();
					this._Ngodokon = value;
					this.SendPropertyChanged("Ngodokon");
					this.OnNgodokonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdopsved", DbType="VarChar(2000)")]
		public string Cdopsved
		{
			get
			{
				return this._Cdopsved;
			}
			set
			{
				if ((this._Cdopsved != value))
				{
					this.OnCdopsvedChanging(value);
					this.SendPropertyChanging();
					this._Cdopsved = value;
					this.SendPropertyChanged("Cdopsved");
					this.OnCdopsvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_pred", DbType="Int")]
		public System.Nullable<int> ik_pred
		{
			get
			{
				return this._ik_pred;
			}
			set
			{
				if ((this._ik_pred != value))
				{
					if (this._Predpr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_predChanging(value);
					this.SendPropertyChanging();
					this._ik_pred = value;
					this.SendPropertyChanged("ik_pred");
					this.Onik_predChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cDolgnost", DbType="VarChar(50)")]
		public string cDolgnost
		{
			get
			{
				return this._cDolgnost;
			}
			set
			{
				if ((this._cDolgnost != value))
				{
					this.OncDolgnostChanging(value);
					this.SendPropertyChanging();
					this._cDolgnost = value;
					this.SendPropertyChanged("cDolgnost");
					this.OncDolgnostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StazYear", DbType="Int")]
		public System.Nullable<int> StazYear
		{
			get
			{
				return this._StazYear;
			}
			set
			{
				if ((this._StazYear != value))
				{
					this.OnStazYearChanging(value);
					this.SendPropertyChanging();
					this._StazYear = value;
					this.SendPropertyChanged("StazYear");
					this.OnStazYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StazMonth", DbType="Int")]
		public System.Nullable<int> StazMonth
		{
			get
			{
				return this._StazMonth;
			}
			set
			{
				if ((this._StazMonth != value))
				{
					this.OnStazMonthChanging(value);
					this.SendPropertyChanging();
					this._StazMonth = value;
					this.SendPropertyChanged("StazMonth");
					this.OnStazMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cLgot", DbType="VarChar(500)")]
		public string cLgot
		{
			get
			{
				return this._cLgot;
			}
			set
			{
				if ((this._cLgot != value))
				{
					this.OncLgotChanging(value);
					this.SendPropertyChanging();
					this._cLgot = value;
					this.SendPropertyChanged("cLgot");
					this.OncLgotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cOsnovan", DbType="VarChar(50)")]
		public string cOsnovan
		{
			get
			{
				return this._cOsnovan;
			}
			set
			{
				if ((this._cOsnovan != value))
				{
					this.OncOsnovanChanging(value);
					this.SendPropertyChanging();
					this._cOsnovan = value;
					this.SendPropertyChanged("cOsnovan");
					this.OncOsnovanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ABIT_postup", Storage="_ABIT_postups", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<ABIT_postup> ABIT_postups
		{
			get
			{
				return this._ABIT_postups;
			}
			set
			{
				this._ABIT_postups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Zach", Storage="_Zaches", ThisKey="nCode", OtherKey="nCode")]
		public EntitySet<Zach> Zaches
		{
			get
			{
				return this._Zaches;
			}
			set
			{
				this._Zaches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abit_podg_Student", Storage="_Abit_podg", ThisKey="Ik_podg", OtherKey="Ik_podg", IsForeignKey=true)]
		public Abit_podg Abit_podg
		{
			get
			{
				return this._Abit_podg.Entity;
			}
			set
			{
				Abit_podg previousValue = this._Abit_podg.Entity;
				if (((previousValue != value) 
							|| (this._Abit_podg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Abit_podg.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Abit_podg.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Ik_podg = value.Ik_podg;
					}
					else
					{
						this._Ik_podg = default(Nullable<int>);
					}
					this.SendPropertyChanged("Abit_podg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="medal_abit_Student", Storage="_medal_abit", ThisKey="ik_medal", OtherKey="ik_medal", IsForeignKey=true)]
		public medal_abit medal_abit
		{
			get
			{
				return this._medal_abit.Entity;
			}
			set
			{
				medal_abit previousValue = this._medal_abit.Entity;
				if (((previousValue != value) 
							|| (this._medal_abit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._medal_abit.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._medal_abit.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._ik_medal = value.ik_medal;
					}
					else
					{
						this._ik_medal = default(int);
					}
					this.SendPropertyChanged("medal_abit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predpr_Student", Storage="_Predpr", ThisKey="ik_pred", OtherKey="Ik_pred", IsForeignKey=true)]
		public Predpr Predpr
		{
			get
			{
				return this._Predpr.Entity;
			}
			set
			{
				Predpr previousValue = this._Predpr.Entity;
				if (((previousValue != value) 
							|| (this._Predpr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Predpr.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Predpr.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._ik_pred = value.Ik_pred;
					}
					else
					{
						this._ik_pred = default(Nullable<int>);
					}
					this.SendPropertyChanged("Predpr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Special_uchet_Student", Storage="_Special_uchet", ThisKey="Ik_special_uchet", OtherKey="Ik_special_uchet", IsForeignKey=true)]
		public Special_uchet Special_uchet
		{
			get
			{
				return this._Special_uchet.Entity;
			}
			set
			{
				Special_uchet previousValue = this._Special_uchet.Entity;
				if (((previousValue != value) 
							|| (this._Special_uchet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Special_uchet.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Special_uchet.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Ik_special_uchet = value.Ik_special_uchet;
					}
					else
					{
						this._Ik_special_uchet = default(Nullable<int>);
					}
					this.SendPropertyChanged("Special_uchet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vid_ob_rab_Student", Storage="_Vid_ob_rab", ThisKey="Ik_ob_rab", OtherKey="Ik_ob_rab", IsForeignKey=true)]
		public Vid_ob_rab Vid_ob_rab
		{
			get
			{
				return this._Vid_ob_rab.Entity;
			}
			set
			{
				Vid_ob_rab previousValue = this._Vid_ob_rab.Entity;
				if (((previousValue != value) 
							|| (this._Vid_ob_rab.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vid_ob_rab.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Vid_ob_rab.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Ik_ob_rab = value.Ik_ob_rab;
					}
					else
					{
						this._Ik_ob_rab = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vid_ob_rab");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaved_stud_Student", Storage="_Zaved_stud", ThisKey="Ik_zaved", OtherKey="ik_zaved", IsForeignKey=true)]
		public Zaved_stud Zaved_stud
		{
			get
			{
				return this._Zaved_stud.Entity;
			}
			set
			{
				Zaved_stud previousValue = this._Zaved_stud.Entity;
				if (((previousValue != value) 
							|| (this._Zaved_stud.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaved_stud.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Zaved_stud.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Ik_zaved = value.ik_zaved;
					}
					else
					{
						this._Ik_zaved = default(Nullable<int>);
					}
					this.SendPropertyChanged("Zaved_stud");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Student", Storage="_Person", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Student = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Student = this;
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_Zaches(Zach entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_Zaches(Zach entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Voen_zvanie")]
	public partial class Voen_zvanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_voen_zvanie;
		
		private string _Cvoen_zvanie;
		
		private EntitySet<Person> _Persons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_voen_zvanieChanging(int value);
    partial void OnIk_voen_zvanieChanged();
    partial void OnCvoen_zvanieChanging(string value);
    partial void OnCvoen_zvanieChanged();
    #endregion
		
		public Voen_zvanie()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_voen_zvanie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_voen_zvanie
		{
			get
			{
				return this._Ik_voen_zvanie;
			}
			set
			{
				if ((this._Ik_voen_zvanie != value))
				{
					this.OnIk_voen_zvanieChanging(value);
					this.SendPropertyChanging();
					this._Ik_voen_zvanie = value;
					this.SendPropertyChanged("Ik_voen_zvanie");
					this.OnIk_voen_zvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cvoen_zvanie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cvoen_zvanie
		{
			get
			{
				return this._Cvoen_zvanie;
			}
			set
			{
				if ((this._Cvoen_zvanie != value))
				{
					this.OnCvoen_zvanieChanging(value);
					this.SendPropertyChanging();
					this._Cvoen_zvanie = value;
					this.SendPropertyChanged("Cvoen_zvanie");
					this.OnCvoen_zvanieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Voen_zvanie_Person", Storage="_Persons", ThisKey="Ik_voen_zvanie", OtherKey="ik_voen_zvanie")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Voen_zvanie = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.Voen_zvanie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sem_pol")]
	public partial class sem_pol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_sem_pol;
		
		private string _csem_pol;
		
		private EntitySet<Person> _Persons;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_sem_polChanging(int value);
    partial void Onik_sem_polChanged();
    partial void Oncsem_polChanging(string value);
    partial void Oncsem_polChanged();
    #endregion
		
		public sem_pol()
		{
			this._Persons = new EntitySet<Person>(new Action<Person>(this.attach_Persons), new Action<Person>(this.detach_Persons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sem_pol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_sem_pol
		{
			get
			{
				return this._ik_sem_pol;
			}
			set
			{
				if ((this._ik_sem_pol != value))
				{
					this.Onik_sem_polChanging(value);
					this.SendPropertyChanging();
					this._ik_sem_pol = value;
					this.SendPropertyChanged("ik_sem_pol");
					this.Onik_sem_polChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_csem_pol", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string csem_pol
		{
			get
			{
				return this._csem_pol;
			}
			set
			{
				if ((this._csem_pol != value))
				{
					this.Oncsem_polChanging(value);
					this.SendPropertyChanging();
					this._csem_pol = value;
					this.SendPropertyChanged("csem_pol");
					this.Oncsem_polChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sem_pol_Person", Storage="_Persons", ThisKey="ik_sem_pol", OtherKey="Ik_sem_pol")]
		public EntitySet<Person> Persons
		{
			get
			{
				return this._Persons;
			}
			set
			{
				this._Persons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.sem_pol = this;
		}
		
		private void detach_Persons(Person entity)
		{
			this.SendPropertyChanging();
			entity.sem_pol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kat_zach")]
	public partial class Kat_zach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_kat_zach;
		
		private string _Cname_kat_zach;
		
		private int _ik_type_kat;
		
		private System.Nullable<bool> _bit_Lgota;
		
		private System.Nullable<System.DateTime> _OutDate;
		
		private bool _IsRussOlimpWinner;
		
		private EntitySet<ABIT_postup> _ABIT_postups;
		
		private EntitySet<StudGrup> _StudGrups;
		
		private EntitySet<ABIT_proh_ball> _ABIT_proh_balls;
		
		private EntityRef<TypeKatZach> _TypeKatZach;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_kat_zachChanging(int value);
    partial void OnIk_kat_zachChanged();
    partial void OnCname_kat_zachChanging(string value);
    partial void OnCname_kat_zachChanged();
    partial void Onik_type_katChanging(int value);
    partial void Onik_type_katChanged();
    partial void Onbit_LgotaChanging(System.Nullable<bool> value);
    partial void Onbit_LgotaChanged();
    partial void OnOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutDateChanged();
    partial void OnIsRussOlimpWinnerChanging(bool value);
    partial void OnIsRussOlimpWinnerChanged();
    #endregion
		
		public Kat_zach()
		{
			this._ABIT_postups = new EntitySet<ABIT_postup>(new Action<ABIT_postup>(this.attach_ABIT_postups), new Action<ABIT_postup>(this.detach_ABIT_postups));
			this._StudGrups = new EntitySet<StudGrup>(new Action<StudGrup>(this.attach_StudGrups), new Action<StudGrup>(this.detach_StudGrups));
			this._ABIT_proh_balls = new EntitySet<ABIT_proh_ball>(new Action<ABIT_proh_ball>(this.attach_ABIT_proh_balls), new Action<ABIT_proh_ball>(this.detach_ABIT_proh_balls));
			this._TypeKatZach = default(EntityRef<TypeKatZach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_kat_zach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_kat_zach
		{
			get
			{
				return this._Ik_kat_zach;
			}
			set
			{
				if ((this._Ik_kat_zach != value))
				{
					this.OnIk_kat_zachChanging(value);
					this.SendPropertyChanging();
					this._Ik_kat_zach = value;
					this.SendPropertyChanged("Ik_kat_zach");
					this.OnIk_kat_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_kat_zach", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_kat_zach
		{
			get
			{
				return this._Cname_kat_zach;
			}
			set
			{
				if ((this._Cname_kat_zach != value))
				{
					this.OnCname_kat_zachChanging(value);
					this.SendPropertyChanging();
					this._Cname_kat_zach = value;
					this.SendPropertyChanged("Cname_kat_zach");
					this.OnCname_kat_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_type_kat", DbType="Int NOT NULL")]
		public int ik_type_kat
		{
			get
			{
				return this._ik_type_kat;
			}
			set
			{
				if ((this._ik_type_kat != value))
				{
					if (this._TypeKatZach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_type_katChanging(value);
					this.SendPropertyChanging();
					this._ik_type_kat = value;
					this.SendPropertyChanged("ik_type_kat");
					this.Onik_type_katChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bit_Lgota", DbType="Bit")]
		public System.Nullable<bool> bit_Lgota
		{
			get
			{
				return this._bit_Lgota;
			}
			set
			{
				if ((this._bit_Lgota != value))
				{
					this.Onbit_LgotaChanging(value);
					this.SendPropertyChanging();
					this._bit_Lgota = value;
					this.SendPropertyChanged("bit_Lgota");
					this.Onbit_LgotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDate
		{
			get
			{
				return this._OutDate;
			}
			set
			{
				if ((this._OutDate != value))
				{
					this.OnOutDateChanging(value);
					this.SendPropertyChanging();
					this._OutDate = value;
					this.SendPropertyChanged("OutDate");
					this.OnOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRussOlimpWinner", DbType="Bit NOT NULL")]
		public bool IsRussOlimpWinner
		{
			get
			{
				return this._IsRussOlimpWinner;
			}
			set
			{
				if ((this._IsRussOlimpWinner != value))
				{
					this.OnIsRussOlimpWinnerChanging(value);
					this.SendPropertyChanging();
					this._IsRussOlimpWinner = value;
					this.SendPropertyChanged("IsRussOlimpWinner");
					this.OnIsRussOlimpWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_ABIT_postup", Storage="_ABIT_postups", ThisKey="Ik_kat_zach", OtherKey="ik_kat_zach")]
		public EntitySet<ABIT_postup> ABIT_postups
		{
			get
			{
				return this._ABIT_postups;
			}
			set
			{
				this._ABIT_postups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_StudGrup", Storage="_StudGrups", ThisKey="Ik_kat_zach", OtherKey="ik_kat_zach")]
		public EntitySet<StudGrup> StudGrups
		{
			get
			{
				return this._StudGrups;
			}
			set
			{
				this._StudGrups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_ABIT_proh_ball", Storage="_ABIT_proh_balls", ThisKey="Ik_kat_zach", OtherKey="ik_kat_zach")]
		public EntitySet<ABIT_proh_ball> ABIT_proh_balls
		{
			get
			{
				return this._ABIT_proh_balls;
			}
			set
			{
				this._ABIT_proh_balls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeKatZach_Kat_zach", Storage="_TypeKatZach", ThisKey="ik_type_kat", OtherKey="ik_type_kat", IsForeignKey=true)]
		public TypeKatZach TypeKatZach
		{
			get
			{
				return this._TypeKatZach.Entity;
			}
			set
			{
				TypeKatZach previousValue = this._TypeKatZach.Entity;
				if (((previousValue != value) 
							|| (this._TypeKatZach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypeKatZach.Entity = null;
						previousValue.Kat_zaches.Remove(this);
					}
					this._TypeKatZach.Entity = value;
					if ((value != null))
					{
						value.Kat_zaches.Add(this);
						this._ik_type_kat = value.ik_type_kat;
					}
					else
					{
						this._ik_type_kat = default(int);
					}
					this.SendPropertyChanged("TypeKatZach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = this;
		}
		
		private void detach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = null;
		}
		
		private void attach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = this;
		}
		
		private void detach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = null;
		}
		
		private void attach_ABIT_proh_balls(ABIT_proh_ball entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = this;
		}
		
		private void detach_ABIT_proh_balls(ABIT_proh_ball entity)
		{
			this.SendPropertyChanging();
			entity.Kat_zach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction")]
	public partial class Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_direction;
		
		private string _cName_direction;
		
		private string _cShort_name_direction;
		
		private string _ThesisName;
		
		private EntitySet<Spec_stud> _Spec_studs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_directionChanging(int value);
    partial void Onik_directionChanged();
    partial void OncName_directionChanging(string value);
    partial void OncName_directionChanged();
    partial void OncShort_name_directionChanging(string value);
    partial void OncShort_name_directionChanged();
    partial void OnThesisNameChanging(string value);
    partial void OnThesisNameChanged();
    #endregion
		
		public Direction()
		{
			this._Spec_studs = new EntitySet<Spec_stud>(new Action<Spec_stud>(this.attach_Spec_studs), new Action<Spec_stud>(this.detach_Spec_studs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_direction", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_direction
		{
			get
			{
				return this._ik_direction;
			}
			set
			{
				if ((this._ik_direction != value))
				{
					this.Onik_directionChanging(value);
					this.SendPropertyChanging();
					this._ik_direction = value;
					this.SendPropertyChanged("ik_direction");
					this.Onik_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName_direction", DbType="VarChar(20)")]
		public string cName_direction
		{
			get
			{
				return this._cName_direction;
			}
			set
			{
				if ((this._cName_direction != value))
				{
					this.OncName_directionChanging(value);
					this.SendPropertyChanging();
					this._cName_direction = value;
					this.SendPropertyChanged("cName_direction");
					this.OncName_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cShort_name_direction", DbType="VarChar(10)")]
		public string cShort_name_direction
		{
			get
			{
				return this._cShort_name_direction;
			}
			set
			{
				if ((this._cShort_name_direction != value))
				{
					this.OncShort_name_directionChanging(value);
					this.SendPropertyChanging();
					this._cShort_name_direction = value;
					this.SendPropertyChanged("cShort_name_direction");
					this.OncShort_name_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThesisName", DbType="VarChar(30)")]
		public string ThesisName
		{
			get
			{
				return this._ThesisName;
			}
			set
			{
				if ((this._ThesisName != value))
				{
					this.OnThesisNameChanging(value);
					this.SendPropertyChanging();
					this._ThesisName = value;
					this.SendPropertyChanged("ThesisName");
					this.OnThesisNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_Spec_stud", Storage="_Spec_studs", ThisKey="ik_direction", OtherKey="ik_direction")]
		public EntitySet<Spec_stud> Spec_studs
		{
			get
			{
				return this._Spec_studs;
			}
			set
			{
				this._Spec_studs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Spec_studs(Spec_stud entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_Spec_studs(Spec_stud entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lang")]
	public partial class Lang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_lang;
		
		private string _Cname_lang;
		
		private bool _IsEnglish;
		
		private bool _IsFrench;
		
		private bool _IsGerman;
		
		private bool _IsOther;
		
		private EntitySet<Lang_stud> _Lang_studs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_langChanging(int value);
    partial void OnIk_langChanged();
    partial void OnCname_langChanging(string value);
    partial void OnCname_langChanged();
    partial void OnIsEnglishChanging(bool value);
    partial void OnIsEnglishChanged();
    partial void OnIsFrenchChanging(bool value);
    partial void OnIsFrenchChanged();
    partial void OnIsGermanChanging(bool value);
    partial void OnIsGermanChanged();
    partial void OnIsOtherChanging(bool value);
    partial void OnIsOtherChanged();
    #endregion
		
		public Lang()
		{
			this._Lang_studs = new EntitySet<Lang_stud>(new Action<Lang_stud>(this.attach_Lang_studs), new Action<Lang_stud>(this.detach_Lang_studs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_lang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_lang
		{
			get
			{
				return this._Ik_lang;
			}
			set
			{
				if ((this._Ik_lang != value))
				{
					this.OnIk_langChanging(value);
					this.SendPropertyChanging();
					this._Ik_lang = value;
					this.SendPropertyChanged("Ik_lang");
					this.OnIk_langChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_lang", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_lang
		{
			get
			{
				return this._Cname_lang;
			}
			set
			{
				if ((this._Cname_lang != value))
				{
					this.OnCname_langChanging(value);
					this.SendPropertyChanging();
					this._Cname_lang = value;
					this.SendPropertyChanged("Cname_lang");
					this.OnCname_langChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnglish", DbType="Bit NOT NULL")]
		public bool IsEnglish
		{
			get
			{
				return this._IsEnglish;
			}
			set
			{
				if ((this._IsEnglish != value))
				{
					this.OnIsEnglishChanging(value);
					this.SendPropertyChanging();
					this._IsEnglish = value;
					this.SendPropertyChanged("IsEnglish");
					this.OnIsEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFrench", DbType="Bit NOT NULL")]
		public bool IsFrench
		{
			get
			{
				return this._IsFrench;
			}
			set
			{
				if ((this._IsFrench != value))
				{
					this.OnIsFrenchChanging(value);
					this.SendPropertyChanging();
					this._IsFrench = value;
					this.SendPropertyChanged("IsFrench");
					this.OnIsFrenchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGerman", DbType="Bit NOT NULL")]
		public bool IsGerman
		{
			get
			{
				return this._IsGerman;
			}
			set
			{
				if ((this._IsGerman != value))
				{
					this.OnIsGermanChanging(value);
					this.SendPropertyChanging();
					this._IsGerman = value;
					this.SendPropertyChanged("IsGerman");
					this.OnIsGermanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit NOT NULL")]
		public bool IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this.OnIsOtherChanging(value);
					this.SendPropertyChanging();
					this._IsOther = value;
					this.SendPropertyChanged("IsOther");
					this.OnIsOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lang_Lang_stud", Storage="_Lang_studs", ThisKey="Ik_lang", OtherKey="Ik_lang")]
		public EntitySet<Lang_stud> Lang_studs
		{
			get
			{
				return this._Lang_studs;
			}
			set
			{
				this._Lang_studs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Lang = this;
		}
		
		private void detach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Lang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lang_stud")]
	public partial class Lang_stud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_lang;
		
		private int _Ik_step_vlad;
		
		private decimal _nCode;
		
		private EntityRef<Lang> _Lang;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Step_vlad> _Step_vlad;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_langChanging(int value);
    partial void OnIk_langChanged();
    partial void OnIk_step_vladChanging(int value);
    partial void OnIk_step_vladChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    #endregion
		
		public Lang_stud()
		{
			this._Lang = default(EntityRef<Lang>);
			this._Person = default(EntityRef<Person>);
			this._Step_vlad = default(EntityRef<Step_vlad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_lang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ik_lang
		{
			get
			{
				return this._Ik_lang;
			}
			set
			{
				if ((this._Ik_lang != value))
				{
					if (this._Lang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_langChanging(value);
					this.SendPropertyChanging();
					this._Ik_lang = value;
					this.SendPropertyChanged("Ik_lang");
					this.OnIk_langChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_step_vlad", DbType="Int NOT NULL")]
		public int Ik_step_vlad
		{
			get
			{
				return this._Ik_step_vlad;
			}
			set
			{
				if ((this._Ik_step_vlad != value))
				{
					if (this._Step_vlad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_step_vladChanging(value);
					this.SendPropertyChanging();
					this._Ik_step_vlad = value;
					this.SendPropertyChanged("Ik_step_vlad");
					this.OnIk_step_vladChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lang_Lang_stud", Storage="_Lang", ThisKey="Ik_lang", OtherKey="Ik_lang", IsForeignKey=true)]
		public Lang Lang
		{
			get
			{
				return this._Lang.Entity;
			}
			set
			{
				Lang previousValue = this._Lang.Entity;
				if (((previousValue != value) 
							|| (this._Lang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lang.Entity = null;
						previousValue.Lang_studs.Remove(this);
					}
					this._Lang.Entity = value;
					if ((value != null))
					{
						value.Lang_studs.Add(this);
						this._Ik_lang = value.Ik_lang;
					}
					else
					{
						this._Ik_lang = default(int);
					}
					this.SendPropertyChanged("Lang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Lang_stud", Storage="_Person", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Lang_studs.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Lang_studs.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_vlad_Lang_stud", Storage="_Step_vlad", ThisKey="Ik_step_vlad", OtherKey="Ik_step_vlad", IsForeignKey=true)]
		public Step_vlad Step_vlad
		{
			get
			{
				return this._Step_vlad.Entity;
			}
			set
			{
				Step_vlad previousValue = this._Step_vlad.Entity;
				if (((previousValue != value) 
							|| (this._Step_vlad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Step_vlad.Entity = null;
						previousValue.Lang_studs.Remove(this);
					}
					this._Step_vlad.Entity = value;
					if ((value != null))
					{
						value.Lang_studs.Add(this);
						this._Ik_step_vlad = value.Ik_step_vlad;
					}
					else
					{
						this._Ik_step_vlad = default(int);
					}
					this.SendPropertyChanged("Step_vlad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Step_vlad")]
	public partial class Step_vlad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_step_vlad;
		
		private string _Cname_step_vlad;
		
		private EntitySet<Lang_stud> _Lang_studs;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_step_vladChanging(int value);
    partial void OnIk_step_vladChanged();
    partial void OnCname_step_vladChanging(string value);
    partial void OnCname_step_vladChanged();
    #endregion
		
		public Step_vlad()
		{
			this._Lang_studs = new EntitySet<Lang_stud>(new Action<Lang_stud>(this.attach_Lang_studs), new Action<Lang_stud>(this.detach_Lang_studs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_step_vlad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_step_vlad
		{
			get
			{
				return this._Ik_step_vlad;
			}
			set
			{
				if ((this._Ik_step_vlad != value))
				{
					this.OnIk_step_vladChanging(value);
					this.SendPropertyChanging();
					this._Ik_step_vlad = value;
					this.SendPropertyChanged("Ik_step_vlad");
					this.OnIk_step_vladChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_step_vlad", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_step_vlad
		{
			get
			{
				return this._Cname_step_vlad;
			}
			set
			{
				if ((this._Cname_step_vlad != value))
				{
					this.OnCname_step_vladChanging(value);
					this.SendPropertyChanging();
					this._Cname_step_vlad = value;
					this.SendPropertyChanged("Cname_step_vlad");
					this.OnCname_step_vladChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_vlad_Lang_stud", Storage="_Lang_studs", ThisKey="Ik_step_vlad", OtherKey="Ik_step_vlad")]
		public EntitySet<Lang_stud> Lang_studs
		{
			get
			{
				return this._Lang_studs;
			}
			set
			{
				this._Lang_studs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Step_vlad = this;
		}
		
		private void detach_Lang_studs(Lang_stud entity)
		{
			this.SendPropertyChanging();
			entity.Step_vlad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Vstup_exam")]
	public partial class ABIT_Vstup_exam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _cosenka;
		
		private int _NN_abit;
		
		private int _ik_disc;
		
		private int _ik_sdach;
		
		private System.Nullable<int> _id_rasp_kab;
		
		private string _NNvedom;
		
		private EntityRef<ABIT_VidSdachi> _ABIT_VidSdachi;
		
		private EntityRef<ABIT_Disc> _ABIT_Disc;
		
		private EntityRef<ABIT_postup> _ABIT_postup;
		
		private EntityRef<ABIT_Rassadka> _ABIT_Rassadka;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncosenkaChanging(System.Nullable<int> value);
    partial void OncosenkaChanged();
    partial void OnNN_abitChanging(int value);
    partial void OnNN_abitChanged();
    partial void Onik_discChanging(int value);
    partial void Onik_discChanged();
    partial void Onik_sdachChanging(int value);
    partial void Onik_sdachChanged();
    partial void Onid_rasp_kabChanging(System.Nullable<int> value);
    partial void Onid_rasp_kabChanged();
    partial void OnNNvedomChanging(string value);
    partial void OnNNvedomChanged();
    #endregion
		
		public ABIT_Vstup_exam()
		{
			this._ABIT_VidSdachi = default(EntityRef<ABIT_VidSdachi>);
			this._ABIT_Disc = default(EntityRef<ABIT_Disc>);
			this._ABIT_postup = default(EntityRef<ABIT_postup>);
			this._ABIT_Rassadka = default(EntityRef<ABIT_Rassadka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cosenka", DbType="Int")]
		public System.Nullable<int> cosenka
		{
			get
			{
				return this._cosenka;
			}
			set
			{
				if ((this._cosenka != value))
				{
					this.OncosenkaChanging(value);
					this.SendPropertyChanging();
					this._cosenka = value;
					this.SendPropertyChanged("cosenka");
					this.OncosenkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NN_abit", DbType="Int NOT NULL")]
		public int NN_abit
		{
			get
			{
				return this._NN_abit;
			}
			set
			{
				if ((this._NN_abit != value))
				{
					if (this._ABIT_postup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNN_abitChanging(value);
					this.SendPropertyChanging();
					this._NN_abit = value;
					this.SendPropertyChanged("NN_abit");
					this.OnNN_abitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int NOT NULL")]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					if (this._ABIT_Disc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_discChanging(value);
					this.SendPropertyChanging();
					this._ik_disc = value;
					this.SendPropertyChanged("ik_disc");
					this.Onik_discChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sdach", DbType="Int NOT NULL")]
		public int ik_sdach
		{
			get
			{
				return this._ik_sdach;
			}
			set
			{
				if ((this._ik_sdach != value))
				{
					if (this._ABIT_VidSdachi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sdachChanging(value);
					this.SendPropertyChanging();
					this._ik_sdach = value;
					this.SendPropertyChanged("ik_sdach");
					this.Onik_sdachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rasp_kab", DbType="Int")]
		public System.Nullable<int> id_rasp_kab
		{
			get
			{
				return this._id_rasp_kab;
			}
			set
			{
				if ((this._id_rasp_kab != value))
				{
					if (this._ABIT_Rassadka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rasp_kabChanging(value);
					this.SendPropertyChanging();
					this._id_rasp_kab = value;
					this.SendPropertyChanged("id_rasp_kab");
					this.Onid_rasp_kabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNvedom", DbType="Char(20)")]
		public string NNvedom
		{
			get
			{
				return this._NNvedom;
			}
			set
			{
				if ((this._NNvedom != value))
				{
					this.OnNNvedomChanging(value);
					this.SendPropertyChanging();
					this._NNvedom = value;
					this.SendPropertyChanged("NNvedom");
					this.OnNNvedomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_VidSdachi_ABIT_Vstup_exam", Storage="_ABIT_VidSdachi", ThisKey="ik_sdach", OtherKey="ik_sdach", IsForeignKey=true)]
		public ABIT_VidSdachi ABIT_VidSdachi
		{
			get
			{
				return this._ABIT_VidSdachi.Entity;
			}
			set
			{
				ABIT_VidSdachi previousValue = this._ABIT_VidSdachi.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_VidSdachi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_VidSdachi.Entity = null;
						previousValue.ABIT_Vstup_exams.Remove(this);
					}
					this._ABIT_VidSdachi.Entity = value;
					if ((value != null))
					{
						value.ABIT_Vstup_exams.Add(this);
						this._ik_sdach = value.ik_sdach;
					}
					else
					{
						this._ik_sdach = default(int);
					}
					this.SendPropertyChanged("ABIT_VidSdachi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Disc_ABIT_Vstup_exam", Storage="_ABIT_Disc", ThisKey="ik_disc", OtherKey="ik_disc", IsForeignKey=true)]
		public ABIT_Disc ABIT_Disc
		{
			get
			{
				return this._ABIT_Disc.Entity;
			}
			set
			{
				ABIT_Disc previousValue = this._ABIT_Disc.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Disc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Disc.Entity = null;
						previousValue.ABIT_Vstup_exams.Remove(this);
					}
					this._ABIT_Disc.Entity = value;
					if ((value != null))
					{
						value.ABIT_Vstup_exams.Add(this);
						this._ik_disc = value.ik_disc;
					}
					else
					{
						this._ik_disc = default(int);
					}
					this.SendPropertyChanged("ABIT_Disc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_postup_ABIT_Vstup_exam", Storage="_ABIT_postup", ThisKey="NN_abit", OtherKey="NN_abit", IsForeignKey=true)]
		public ABIT_postup ABIT_postup
		{
			get
			{
				return this._ABIT_postup.Entity;
			}
			set
			{
				ABIT_postup previousValue = this._ABIT_postup.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_postup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_postup.Entity = null;
						previousValue.ABIT_Vstup_exams.Remove(this);
					}
					this._ABIT_postup.Entity = value;
					if ((value != null))
					{
						value.ABIT_Vstup_exams.Add(this);
						this._NN_abit = value.NN_abit;
					}
					else
					{
						this._NN_abit = default(int);
					}
					this.SendPropertyChanged("ABIT_postup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Rassadka_ABIT_Vstup_exam", Storage="_ABIT_Rassadka", ThisKey="id_rasp_kab", OtherKey="id", IsForeignKey=true)]
		public ABIT_Rassadka ABIT_Rassadka
		{
			get
			{
				return this._ABIT_Rassadka.Entity;
			}
			set
			{
				ABIT_Rassadka previousValue = this._ABIT_Rassadka.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Rassadka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Rassadka.Entity = null;
						previousValue.ABIT_Vstup_exams.Remove(this);
					}
					this._ABIT_Rassadka.Entity = value;
					if ((value != null))
					{
						value.ABIT_Vstup_exams.Add(this);
						this._id_rasp_kab = value.id;
					}
					else
					{
						this._id_rasp_kab = default(Nullable<int>);
					}
					this.SendPropertyChanged("ABIT_Rassadka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_VidSdachi")]
	public partial class ABIT_VidSdachi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_sdach;
		
		private string _cname_sdach;
		
		private string _cshort_sdach;
		
		private System.Nullable<System.DateTime> _OutDate;
		
		private EntitySet<ABIT_Vstup_exam> _ABIT_Vstup_exams;
		
		private EntitySet<ABIT_Raspisanie> _ABIT_Raspisanies;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_sdachChanging(int value);
    partial void Onik_sdachChanged();
    partial void Oncname_sdachChanging(string value);
    partial void Oncname_sdachChanged();
    partial void Oncshort_sdachChanging(string value);
    partial void Oncshort_sdachChanged();
    partial void OnOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutDateChanged();
    #endregion
		
		public ABIT_VidSdachi()
		{
			this._ABIT_Vstup_exams = new EntitySet<ABIT_Vstup_exam>(new Action<ABIT_Vstup_exam>(this.attach_ABIT_Vstup_exams), new Action<ABIT_Vstup_exam>(this.detach_ABIT_Vstup_exams));
			this._ABIT_Raspisanies = new EntitySet<ABIT_Raspisanie>(new Action<ABIT_Raspisanie>(this.attach_ABIT_Raspisanies), new Action<ABIT_Raspisanie>(this.detach_ABIT_Raspisanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sdach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_sdach
		{
			get
			{
				return this._ik_sdach;
			}
			set
			{
				if ((this._ik_sdach != value))
				{
					this.Onik_sdachChanging(value);
					this.SendPropertyChanging();
					this._ik_sdach = value;
					this.SendPropertyChanged("ik_sdach");
					this.Onik_sdachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname_sdach", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string cname_sdach
		{
			get
			{
				return this._cname_sdach;
			}
			set
			{
				if ((this._cname_sdach != value))
				{
					this.Oncname_sdachChanging(value);
					this.SendPropertyChanging();
					this._cname_sdach = value;
					this.SendPropertyChanged("cname_sdach");
					this.Oncname_sdachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cshort_sdach", DbType="Char(50)")]
		public string cshort_sdach
		{
			get
			{
				return this._cshort_sdach;
			}
			set
			{
				if ((this._cshort_sdach != value))
				{
					this.Oncshort_sdachChanging(value);
					this.SendPropertyChanging();
					this._cshort_sdach = value;
					this.SendPropertyChanged("cshort_sdach");
					this.Oncshort_sdachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDate
		{
			get
			{
				return this._OutDate;
			}
			set
			{
				if ((this._OutDate != value))
				{
					this.OnOutDateChanging(value);
					this.SendPropertyChanging();
					this._OutDate = value;
					this.SendPropertyChanged("OutDate");
					this.OnOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_VidSdachi_ABIT_Vstup_exam", Storage="_ABIT_Vstup_exams", ThisKey="ik_sdach", OtherKey="ik_sdach")]
		public EntitySet<ABIT_Vstup_exam> ABIT_Vstup_exams
		{
			get
			{
				return this._ABIT_Vstup_exams;
			}
			set
			{
				this._ABIT_Vstup_exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_VidSdachi_ABIT_Raspisanie", Storage="_ABIT_Raspisanies", ThisKey="ik_sdach", OtherKey="ik_sdach")]
		public EntitySet<ABIT_Raspisanie> ABIT_Raspisanies
		{
			get
			{
				return this._ABIT_Raspisanies;
			}
			set
			{
				this._ABIT_Raspisanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_VidSdachi = this;
		}
		
		private void detach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_VidSdachi = null;
		}
		
		private void attach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_VidSdachi = this;
		}
		
		private void detach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_VidSdachi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Disc")]
	public partial class ABIT_Disc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_disc;
		
		private string _сname_disc;
		
		private System.Nullable<System.DateTime> _OutDate;
		
		private System.Nullable<int> _OrderNumber;
		
		private EntitySet<ABIT_Vstup_exam> _ABIT_Vstup_exams;
		
		private EntitySet<ABIT_Raspisanie> _ABIT_Raspisanies;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_discChanging(int value);
    partial void Onik_discChanged();
    partial void Onсname_discChanging(string value);
    partial void Onсname_discChanged();
    partial void OnOutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutDateChanged();
    partial void OnOrderNumberChanging(System.Nullable<int> value);
    partial void OnOrderNumberChanged();
    #endregion
		
		public ABIT_Disc()
		{
			this._ABIT_Vstup_exams = new EntitySet<ABIT_Vstup_exam>(new Action<ABIT_Vstup_exam>(this.attach_ABIT_Vstup_exams), new Action<ABIT_Vstup_exam>(this.detach_ABIT_Vstup_exams));
			this._ABIT_Raspisanies = new EntitySet<ABIT_Raspisanie>(new Action<ABIT_Raspisanie>(this.attach_ABIT_Raspisanies), new Action<ABIT_Raspisanie>(this.detach_ABIT_Raspisanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					this.Onik_discChanging(value);
					this.SendPropertyChanging();
					this._ik_disc = value;
					this.SendPropertyChanged("ik_disc");
					this.Onik_discChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_сname_disc", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string сname_disc
		{
			get
			{
				return this._сname_disc;
			}
			set
			{
				if ((this._сname_disc != value))
				{
					this.Onсname_discChanging(value);
					this.SendPropertyChanging();
					this._сname_disc = value;
					this.SendPropertyChanged("сname_disc");
					this.Onсname_discChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutDate
		{
			get
			{
				return this._OutDate;
			}
			set
			{
				if ((this._OutDate != value))
				{
					this.OnOutDateChanging(value);
					this.SendPropertyChanging();
					this._OutDate = value;
					this.SendPropertyChanged("OutDate");
					this.OnOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Disc_ABIT_Vstup_exam", Storage="_ABIT_Vstup_exams", ThisKey="ik_disc", OtherKey="ik_disc")]
		public EntitySet<ABIT_Vstup_exam> ABIT_Vstup_exams
		{
			get
			{
				return this._ABIT_Vstup_exams;
			}
			set
			{
				this._ABIT_Vstup_exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Disc_ABIT_Raspisanie", Storage="_ABIT_Raspisanies", ThisKey="ik_disc", OtherKey="ik_disc")]
		public EntitySet<ABIT_Raspisanie> ABIT_Raspisanies
		{
			get
			{
				return this._ABIT_Raspisanies;
			}
			set
			{
				this._ABIT_Raspisanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Disc = this;
		}
		
		private void detach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Disc = null;
		}
		
		private void attach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Disc = this;
		}
		
		private void detach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Disc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonAddress")]
	public partial class PersonAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_personAddress;
		
		private int _ik_address;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private int _ik_AddressType;
		
		private decimal _nCode;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_personAddressChanging(int value);
    partial void Onik_personAddressChanged();
    partial void Onik_addressChanging(int value);
    partial void Onik_addressChanged();
    partial void OnDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void Onik_AddressTypeChanging(int value);
    partial void Onik_AddressTypeChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    #endregion
		
		public PersonAddress()
		{
			this._Address = default(EntityRef<Address>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_personAddress", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_personAddress
		{
			get
			{
				return this._ik_personAddress;
			}
			set
			{
				if ((this._ik_personAddress != value))
				{
					this.Onik_personAddressChanging(value);
					this.SendPropertyChanging();
					this._ik_personAddress = value;
					this.SendPropertyChanged("ik_personAddress");
					this.Onik_personAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_address", DbType="Int NOT NULL")]
		public int ik_address
		{
			get
			{
				return this._ik_address;
			}
			set
			{
				if ((this._ik_address != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_addressChanging(value);
					this.SendPropertyChanging();
					this._ik_address = value;
					this.SendPropertyChanged("ik_address");
					this.Onik_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_AddressType", DbType="Int NOT NULL")]
		public int ik_AddressType
		{
			get
			{
				return this._ik_AddressType;
			}
			set
			{
				if ((this._ik_AddressType != value))
				{
					this.Onik_AddressTypeChanging(value);
					this.SendPropertyChanging();
					this._ik_AddressType = value;
					this.SendPropertyChanged("ik_AddressType");
					this.Onik_AddressTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_PersonAddress", Storage="_Address", ThisKey="ik_address", OtherKey="ik_address", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.PersonAddresses.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.PersonAddresses.Add(this);
						this._ik_address = value.ik_address;
					}
					else
					{
						this._ik_address = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonAddress", Storage="_Person", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonAddresses.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonAddresses.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_postup")]
	public partial class ABIT_postup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NN_abit;
		
		private int _RegNomer;
		
		private decimal _nCode;
		
		private int _NNrecord;
		
		private System.Nullable<int> _ik_zach;
		
		private int _ik_kat_zach;
		
		private System.DateTime _dd_pod_zayav;
		
		private System.Nullable<System.DateTime> _dd_vozvr_zayav;
		
		private bool _Realy_postup;
		
		private bool _IsMain;
		
		private System.Nullable<System.DateTime> _dd_vvoda_zayav;
		
		private System.Nullable<System.DateTime> _dd_online;
		
		private EntitySet<ABIT_Vstup_exam> _ABIT_Vstup_exams;
		
		private EntityRef<ABIT_Diapazon_spec_fac> _ABIT_Diapazon_spec_fac;
		
		private EntityRef<Kat_zach> _Kat_zach;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<ABIT_sost_zach> _ABIT_sost_zach;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNN_abitChanging(int value);
    partial void OnNN_abitChanged();
    partial void OnRegNomerChanging(int value);
    partial void OnRegNomerChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    partial void OnNNrecordChanging(int value);
    partial void OnNNrecordChanged();
    partial void Onik_zachChanging(System.Nullable<int> value);
    partial void Onik_zachChanged();
    partial void Onik_kat_zachChanging(int value);
    partial void Onik_kat_zachChanged();
    partial void Ondd_pod_zayavChanging(System.DateTime value);
    partial void Ondd_pod_zayavChanged();
    partial void Ondd_vozvr_zayavChanging(System.Nullable<System.DateTime> value);
    partial void Ondd_vozvr_zayavChanged();
    partial void OnRealy_postupChanging(bool value);
    partial void OnRealy_postupChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    partial void Ondd_vvoda_zayavChanging(System.Nullable<System.DateTime> value);
    partial void Ondd_vvoda_zayavChanged();
    partial void Ondd_onlineChanging(System.Nullable<System.DateTime> value);
    partial void Ondd_onlineChanged();
    #endregion
		
		public ABIT_postup()
		{
			this._ABIT_Vstup_exams = new EntitySet<ABIT_Vstup_exam>(new Action<ABIT_Vstup_exam>(this.attach_ABIT_Vstup_exams), new Action<ABIT_Vstup_exam>(this.detach_ABIT_Vstup_exams));
			this._ABIT_Diapazon_spec_fac = default(EntityRef<ABIT_Diapazon_spec_fac>);
			this._Kat_zach = default(EntityRef<Kat_zach>);
			this._Student = default(EntityRef<Student>);
			this._ABIT_sost_zach = default(EntityRef<ABIT_sost_zach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NN_abit", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NN_abit
		{
			get
			{
				return this._NN_abit;
			}
			set
			{
				if ((this._NN_abit != value))
				{
					this.OnNN_abitChanging(value);
					this.SendPropertyChanging();
					this._NN_abit = value;
					this.SendPropertyChanged("NN_abit");
					this.OnNN_abitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNomer", DbType="Int NOT NULL")]
		public int RegNomer
		{
			get
			{
				return this._RegNomer;
			}
			set
			{
				if ((this._RegNomer != value))
				{
					this.OnRegNomerChanging(value);
					this.SendPropertyChanging();
					this._RegNomer = value;
					this.SendPropertyChanged("RegNomer");
					this.OnRegNomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNrecord", DbType="Int NOT NULL")]
		public int NNrecord
		{
			get
			{
				return this._NNrecord;
			}
			set
			{
				if ((this._NNrecord != value))
				{
					if (this._ABIT_Diapazon_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNNrecordChanging(value);
					this.SendPropertyChanging();
					this._NNrecord = value;
					this.SendPropertyChanged("NNrecord");
					this.OnNNrecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_zach", DbType="Int")]
		public System.Nullable<int> ik_zach
		{
			get
			{
				return this._ik_zach;
			}
			set
			{
				if ((this._ik_zach != value))
				{
					if (this._ABIT_sost_zach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_zach = value;
					this.SendPropertyChanged("ik_zach");
					this.Onik_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zach", DbType="Int NOT NULL")]
		public int ik_kat_zach
		{
			get
			{
				return this._ik_kat_zach;
			}
			set
			{
				if ((this._ik_kat_zach != value))
				{
					if (this._Kat_zach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_kat_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_kat_zach = value;
					this.SendPropertyChanged("ik_kat_zach");
					this.Onik_kat_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dd_pod_zayav", DbType="DateTime NOT NULL")]
		public System.DateTime dd_pod_zayav
		{
			get
			{
				return this._dd_pod_zayav;
			}
			set
			{
				if ((this._dd_pod_zayav != value))
				{
					this.Ondd_pod_zayavChanging(value);
					this.SendPropertyChanging();
					this._dd_pod_zayav = value;
					this.SendPropertyChanged("dd_pod_zayav");
					this.Ondd_pod_zayavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dd_vozvr_zayav", DbType="DateTime")]
		public System.Nullable<System.DateTime> dd_vozvr_zayav
		{
			get
			{
				return this._dd_vozvr_zayav;
			}
			set
			{
				if ((this._dd_vozvr_zayav != value))
				{
					this.Ondd_vozvr_zayavChanging(value);
					this.SendPropertyChanging();
					this._dd_vozvr_zayav = value;
					this.SendPropertyChanged("dd_vozvr_zayav");
					this.Ondd_vozvr_zayavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Realy_postup", DbType="Bit NOT NULL")]
		public bool Realy_postup
		{
			get
			{
				return this._Realy_postup;
			}
			set
			{
				if ((this._Realy_postup != value))
				{
					this.OnRealy_postupChanging(value);
					this.SendPropertyChanging();
					this._Realy_postup = value;
					this.SendPropertyChanged("Realy_postup");
					this.OnRealy_postupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dd_vvoda_zayav", DbType="DateTime")]
		public System.Nullable<System.DateTime> dd_vvoda_zayav
		{
			get
			{
				return this._dd_vvoda_zayav;
			}
			set
			{
				if ((this._dd_vvoda_zayav != value))
				{
					this.Ondd_vvoda_zayavChanging(value);
					this.SendPropertyChanging();
					this._dd_vvoda_zayav = value;
					this.SendPropertyChanged("dd_vvoda_zayav");
					this.Ondd_vvoda_zayavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dd_online", DbType="DateTime")]
		public System.Nullable<System.DateTime> dd_online
		{
			get
			{
				return this._dd_online;
			}
			set
			{
				if ((this._dd_online != value))
				{
					this.Ondd_onlineChanging(value);
					this.SendPropertyChanging();
					this._dd_online = value;
					this.SendPropertyChanged("dd_online");
					this.Ondd_onlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_postup_ABIT_Vstup_exam", Storage="_ABIT_Vstup_exams", ThisKey="NN_abit", OtherKey="NN_abit")]
		public EntitySet<ABIT_Vstup_exam> ABIT_Vstup_exams
		{
			get
			{
				return this._ABIT_Vstup_exams;
			}
			set
			{
				this._ABIT_Vstup_exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Diapazon_spec_fac_ABIT_postup", Storage="_ABIT_Diapazon_spec_fac", ThisKey="NNrecord", OtherKey="NNrecord", IsForeignKey=true)]
		public ABIT_Diapazon_spec_fac ABIT_Diapazon_spec_fac
		{
			get
			{
				return this._ABIT_Diapazon_spec_fac.Entity;
			}
			set
			{
				ABIT_Diapazon_spec_fac previousValue = this._ABIT_Diapazon_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Diapazon_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Diapazon_spec_fac.Entity = null;
						previousValue.ABIT_postups.Remove(this);
					}
					this._ABIT_Diapazon_spec_fac.Entity = value;
					if ((value != null))
					{
						value.ABIT_postups.Add(this);
						this._NNrecord = value.NNrecord;
					}
					else
					{
						this._NNrecord = default(int);
					}
					this.SendPropertyChanged("ABIT_Diapazon_spec_fac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_ABIT_postup", Storage="_Kat_zach", ThisKey="ik_kat_zach", OtherKey="Ik_kat_zach", IsForeignKey=true)]
		public Kat_zach Kat_zach
		{
			get
			{
				return this._Kat_zach.Entity;
			}
			set
			{
				Kat_zach previousValue = this._Kat_zach.Entity;
				if (((previousValue != value) 
							|| (this._Kat_zach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kat_zach.Entity = null;
						previousValue.ABIT_postups.Remove(this);
					}
					this._Kat_zach.Entity = value;
					if ((value != null))
					{
						value.ABIT_postups.Add(this);
						this._ik_kat_zach = value.Ik_kat_zach;
					}
					else
					{
						this._ik_kat_zach = default(int);
					}
					this.SendPropertyChanged("Kat_zach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_ABIT_postup", Storage="_Student", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.ABIT_postups.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.ABIT_postups.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_sost_zach_ABIT_postup", Storage="_ABIT_sost_zach", ThisKey="ik_zach", OtherKey="ik_zach", IsForeignKey=true)]
		public ABIT_sost_zach ABIT_sost_zach
		{
			get
			{
				return this._ABIT_sost_zach.Entity;
			}
			set
			{
				ABIT_sost_zach previousValue = this._ABIT_sost_zach.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_sost_zach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_sost_zach.Entity = null;
						previousValue.ABIT_postups.Remove(this);
					}
					this._ABIT_sost_zach.Entity = value;
					if ((value != null))
					{
						value.ABIT_postups.Add(this);
						this._ik_zach = value.ik_zach;
					}
					else
					{
						this._ik_zach = default(Nullable<int>);
					}
					this.SendPropertyChanged("ABIT_sost_zach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_postup = this;
		}
		
		private void detach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_postup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_sost_zach")]
	public partial class ABIT_sost_zach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_zach;
		
		private string _cname_zach;
		
		private System.Nullable<int> _ik_type_zach;
		
		private EntitySet<ABIT_postup> _ABIT_postups;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_zachChanging(int value);
    partial void Onik_zachChanged();
    partial void Oncname_zachChanging(string value);
    partial void Oncname_zachChanged();
    partial void Onik_type_zachChanging(System.Nullable<int> value);
    partial void Onik_type_zachChanged();
    #endregion
		
		public ABIT_sost_zach()
		{
			this._ABIT_postups = new EntitySet<ABIT_postup>(new Action<ABIT_postup>(this.attach_ABIT_postups), new Action<ABIT_postup>(this.detach_ABIT_postups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_zach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_zach
		{
			get
			{
				return this._ik_zach;
			}
			set
			{
				if ((this._ik_zach != value))
				{
					this.Onik_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_zach = value;
					this.SendPropertyChanged("ik_zach");
					this.Onik_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname_zach", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string cname_zach
		{
			get
			{
				return this._cname_zach;
			}
			set
			{
				if ((this._cname_zach != value))
				{
					this.Oncname_zachChanging(value);
					this.SendPropertyChanging();
					this._cname_zach = value;
					this.SendPropertyChanged("cname_zach");
					this.Oncname_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_type_zach", DbType="Int")]
		public System.Nullable<int> ik_type_zach
		{
			get
			{
				return this._ik_type_zach;
			}
			set
			{
				if ((this._ik_type_zach != value))
				{
					this.Onik_type_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_type_zach = value;
					this.SendPropertyChanged("ik_type_zach");
					this.Onik_type_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_sost_zach_ABIT_postup", Storage="_ABIT_postups", ThisKey="ik_zach", OtherKey="ik_zach")]
		public EntitySet<ABIT_postup> ABIT_postups
		{
			get
			{
				return this._ABIT_postups;
			}
			set
			{
				this._ABIT_postups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_sost_zach = this;
		}
		
		private void detach_ABIT_postups(ABIT_postup entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_sost_zach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Meropriatie")]
	public partial class ABIT_Meropriatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_typ_mer;
		
		private string _cname_mer;
		
		private EntitySet<ABIT_Raspisanie> _ABIT_Raspisanies;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_typ_merChanging(int value);
    partial void Onik_typ_merChanged();
    partial void Oncname_merChanging(string value);
    partial void Oncname_merChanged();
    #endregion
		
		public ABIT_Meropriatie()
		{
			this._ABIT_Raspisanies = new EntitySet<ABIT_Raspisanie>(new Action<ABIT_Raspisanie>(this.attach_ABIT_Raspisanies), new Action<ABIT_Raspisanie>(this.detach_ABIT_Raspisanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_typ_mer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_typ_mer
		{
			get
			{
				return this._ik_typ_mer;
			}
			set
			{
				if ((this._ik_typ_mer != value))
				{
					this.Onik_typ_merChanging(value);
					this.SendPropertyChanging();
					this._ik_typ_mer = value;
					this.SendPropertyChanged("ik_typ_mer");
					this.Onik_typ_merChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname_mer", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string cname_mer
		{
			get
			{
				return this._cname_mer;
			}
			set
			{
				if ((this._cname_mer != value))
				{
					this.Oncname_merChanging(value);
					this.SendPropertyChanging();
					this._cname_mer = value;
					this.SendPropertyChanged("cname_mer");
					this.Oncname_merChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Meropriatie_ABIT_Raspisanie", Storage="_ABIT_Raspisanies", ThisKey="ik_typ_mer", OtherKey="ik_typ_mer")]
		public EntitySet<ABIT_Raspisanie> ABIT_Raspisanies
		{
			get
			{
				return this._ABIT_Raspisanies;
			}
			set
			{
				this._ABIT_Raspisanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Meropriatie = this;
		}
		
		private void detach_ABIT_Raspisanies(ABIT_Raspisanie entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Meropriatie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Raspisanie")]
	public partial class ABIT_Raspisanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rasp;
		
		private System.DateTime _date_of;
		
		private System.Nullable<System.DateTime> _TimeBegin;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private System.Nullable<int> _ik_sdach;
		
		private System.Nullable<int> _ik_disc;
		
		private System.Nullable<int> _ik_typ_mer;
		
		private EntitySet<ABIT_Rassadka> _ABIT_Rassadkas;
		
		private EntityRef<ABIT_Disc> _ABIT_Disc;
		
		private EntityRef<ABIT_Meropriatie> _ABIT_Meropriatie;
		
		private EntityRef<ABIT_VidSdachi> _ABIT_VidSdachi;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_raspChanging(int value);
    partial void Onid_raspChanged();
    partial void Ondate_ofChanging(System.DateTime value);
    partial void Ondate_ofChanged();
    partial void OnTimeBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeBeginChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void Onik_sdachChanging(System.Nullable<int> value);
    partial void Onik_sdachChanged();
    partial void Onik_discChanging(System.Nullable<int> value);
    partial void Onik_discChanged();
    partial void Onik_typ_merChanging(System.Nullable<int> value);
    partial void Onik_typ_merChanged();
    #endregion
		
		public ABIT_Raspisanie()
		{
			this._ABIT_Rassadkas = new EntitySet<ABIT_Rassadka>(new Action<ABIT_Rassadka>(this.attach_ABIT_Rassadkas), new Action<ABIT_Rassadka>(this.detach_ABIT_Rassadkas));
			this._ABIT_Disc = default(EntityRef<ABIT_Disc>);
			this._ABIT_Meropriatie = default(EntityRef<ABIT_Meropriatie>);
			this._ABIT_VidSdachi = default(EntityRef<ABIT_VidSdachi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rasp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rasp
		{
			get
			{
				return this._id_rasp;
			}
			set
			{
				if ((this._id_rasp != value))
				{
					this.Onid_raspChanging(value);
					this.SendPropertyChanging();
					this._id_rasp = value;
					this.SendPropertyChanged("id_rasp");
					this.Onid_raspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of", DbType="DateTime NOT NULL")]
		public System.DateTime date_of
		{
			get
			{
				return this._date_of;
			}
			set
			{
				if ((this._date_of != value))
				{
					this.Ondate_ofChanging(value);
					this.SendPropertyChanging();
					this._date_of = value;
					this.SendPropertyChanged("date_of");
					this.Ondate_ofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TimeBegin
		{
			get
			{
				return this._TimeBegin;
			}
			set
			{
				if ((this._TimeBegin != value))
				{
					this.OnTimeBeginChanging(value);
					this.SendPropertyChanging();
					this._TimeBegin = value;
					this.SendPropertyChanged("TimeBegin");
					this.OnTimeBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_sdach", DbType="Int")]
		public System.Nullable<int> ik_sdach
		{
			get
			{
				return this._ik_sdach;
			}
			set
			{
				if ((this._ik_sdach != value))
				{
					if (this._ABIT_VidSdachi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_sdachChanging(value);
					this.SendPropertyChanging();
					this._ik_sdach = value;
					this.SendPropertyChanged("ik_sdach");
					this.Onik_sdachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_disc", DbType="Int")]
		public System.Nullable<int> ik_disc
		{
			get
			{
				return this._ik_disc;
			}
			set
			{
				if ((this._ik_disc != value))
				{
					if (this._ABIT_Disc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_discChanging(value);
					this.SendPropertyChanging();
					this._ik_disc = value;
					this.SendPropertyChanged("ik_disc");
					this.Onik_discChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_typ_mer", DbType="Int")]
		public System.Nullable<int> ik_typ_mer
		{
			get
			{
				return this._ik_typ_mer;
			}
			set
			{
				if ((this._ik_typ_mer != value))
				{
					if (this._ABIT_Meropriatie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_typ_merChanging(value);
					this.SendPropertyChanging();
					this._ik_typ_mer = value;
					this.SendPropertyChanged("ik_typ_mer");
					this.Onik_typ_merChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Raspisanie_ABIT_Rassadka", Storage="_ABIT_Rassadkas", ThisKey="id_rasp", OtherKey="id_rasp")]
		public EntitySet<ABIT_Rassadka> ABIT_Rassadkas
		{
			get
			{
				return this._ABIT_Rassadkas;
			}
			set
			{
				this._ABIT_Rassadkas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Disc_ABIT_Raspisanie", Storage="_ABIT_Disc", ThisKey="ik_disc", OtherKey="ik_disc", IsForeignKey=true)]
		public ABIT_Disc ABIT_Disc
		{
			get
			{
				return this._ABIT_Disc.Entity;
			}
			set
			{
				ABIT_Disc previousValue = this._ABIT_Disc.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Disc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Disc.Entity = null;
						previousValue.ABIT_Raspisanies.Remove(this);
					}
					this._ABIT_Disc.Entity = value;
					if ((value != null))
					{
						value.ABIT_Raspisanies.Add(this);
						this._ik_disc = value.ik_disc;
					}
					else
					{
						this._ik_disc = default(Nullable<int>);
					}
					this.SendPropertyChanged("ABIT_Disc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Meropriatie_ABIT_Raspisanie", Storage="_ABIT_Meropriatie", ThisKey="ik_typ_mer", OtherKey="ik_typ_mer", IsForeignKey=true)]
		public ABIT_Meropriatie ABIT_Meropriatie
		{
			get
			{
				return this._ABIT_Meropriatie.Entity;
			}
			set
			{
				ABIT_Meropriatie previousValue = this._ABIT_Meropriatie.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Meropriatie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Meropriatie.Entity = null;
						previousValue.ABIT_Raspisanies.Remove(this);
					}
					this._ABIT_Meropriatie.Entity = value;
					if ((value != null))
					{
						value.ABIT_Raspisanies.Add(this);
						this._ik_typ_mer = value.ik_typ_mer;
					}
					else
					{
						this._ik_typ_mer = default(Nullable<int>);
					}
					this.SendPropertyChanged("ABIT_Meropriatie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_VidSdachi_ABIT_Raspisanie", Storage="_ABIT_VidSdachi", ThisKey="ik_sdach", OtherKey="ik_sdach", IsForeignKey=true)]
		public ABIT_VidSdachi ABIT_VidSdachi
		{
			get
			{
				return this._ABIT_VidSdachi.Entity;
			}
			set
			{
				ABIT_VidSdachi previousValue = this._ABIT_VidSdachi.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_VidSdachi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_VidSdachi.Entity = null;
						previousValue.ABIT_Raspisanies.Remove(this);
					}
					this._ABIT_VidSdachi.Entity = value;
					if ((value != null))
					{
						value.ABIT_Raspisanies.Add(this);
						this._ik_sdach = value.ik_sdach;
					}
					else
					{
						this._ik_sdach = default(Nullable<int>);
					}
					this.SendPropertyChanged("ABIT_VidSdachi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Rassadkas(ABIT_Rassadka entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Raspisanie = this;
		}
		
		private void detach_ABIT_Rassadkas(ABIT_Rassadka entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Raspisanie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_Rassadka")]
	public partial class ABIT_Rassadka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_rasp;
		
		private int _ik_room;
		
		private EntitySet<ABIT_Vstup_exam> _ABIT_Vstup_exams;
		
		private EntityRef<ABIT_Raspisanie> _ABIT_Raspisanie;
		
		private EntityRef<Room> _Room;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_raspChanging(int value);
    partial void Onid_raspChanged();
    partial void Onik_roomChanging(int value);
    partial void Onik_roomChanged();
    #endregion
		
		public ABIT_Rassadka()
		{
			this._ABIT_Vstup_exams = new EntitySet<ABIT_Vstup_exam>(new Action<ABIT_Vstup_exam>(this.attach_ABIT_Vstup_exams), new Action<ABIT_Vstup_exam>(this.detach_ABIT_Vstup_exams));
			this._ABIT_Raspisanie = default(EntityRef<ABIT_Raspisanie>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rasp", DbType="Int NOT NULL")]
		public int id_rasp
		{
			get
			{
				return this._id_rasp;
			}
			set
			{
				if ((this._id_rasp != value))
				{
					if (this._ABIT_Raspisanie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_raspChanging(value);
					this.SendPropertyChanging();
					this._id_rasp = value;
					this.SendPropertyChanged("id_rasp");
					this.Onid_raspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", DbType="Int NOT NULL")]
		public int ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_roomChanging(value);
					this.SendPropertyChanging();
					this._ik_room = value;
					this.SendPropertyChanged("ik_room");
					this.Onik_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Rassadka_ABIT_Vstup_exam", Storage="_ABIT_Vstup_exams", ThisKey="id", OtherKey="id_rasp_kab")]
		public EntitySet<ABIT_Vstup_exam> ABIT_Vstup_exams
		{
			get
			{
				return this._ABIT_Vstup_exams;
			}
			set
			{
				this._ABIT_Vstup_exams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Raspisanie_ABIT_Rassadka", Storage="_ABIT_Raspisanie", ThisKey="id_rasp", OtherKey="id_rasp", IsForeignKey=true)]
		public ABIT_Raspisanie ABIT_Raspisanie
		{
			get
			{
				return this._ABIT_Raspisanie.Entity;
			}
			set
			{
				ABIT_Raspisanie previousValue = this._ABIT_Raspisanie.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Raspisanie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Raspisanie.Entity = null;
						previousValue.ABIT_Rassadkas.Remove(this);
					}
					this._ABIT_Raspisanie.Entity = value;
					if ((value != null))
					{
						value.ABIT_Rassadkas.Add(this);
						this._id_rasp = value.id_rasp;
					}
					else
					{
						this._id_rasp = default(int);
					}
					this.SendPropertyChanged("ABIT_Raspisanie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_ABIT_Rassadka", Storage="_Room", ThisKey="ik_room", OtherKey="ik_room", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.ABIT_Rassadkas.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.ABIT_Rassadkas.Add(this);
						this._ik_room = value.ik_room;
					}
					else
					{
						this._ik_room = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Rassadka = this;
		}
		
		private void detach_ABIT_Vstup_exams(ABIT_Vstup_exam entity)
		{
			this.SendPropertyChanging();
			entity.ABIT_Rassadka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_room;
		
		private string _Cname_room;
		
		private System.Nullable<int> _ik_campus;
		
		private System.Nullable<byte> _iSeatCount;
		
		private System.Nullable<int> _ik_room_type;
		
		private EntitySet<ABIT_Rassadka> _ABIT_Rassadkas;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_roomChanging(int value);
    partial void Onik_roomChanged();
    partial void OnCname_roomChanging(string value);
    partial void OnCname_roomChanged();
    partial void Onik_campusChanging(System.Nullable<int> value);
    partial void Onik_campusChanged();
    partial void OniSeatCountChanging(System.Nullable<byte> value);
    partial void OniSeatCountChanged();
    partial void Onik_room_typeChanging(System.Nullable<int> value);
    partial void Onik_room_typeChanged();
    #endregion
		
		public Room()
		{
			this._ABIT_Rassadkas = new EntitySet<ABIT_Rassadka>(new Action<ABIT_Rassadka>(this.attach_ABIT_Rassadkas), new Action<ABIT_Rassadka>(this.detach_ABIT_Rassadkas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_room
		{
			get
			{
				return this._ik_room;
			}
			set
			{
				if ((this._ik_room != value))
				{
					this.Onik_roomChanging(value);
					this.SendPropertyChanging();
					this._ik_room = value;
					this.SendPropertyChanged("ik_room");
					this.Onik_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_room
		{
			get
			{
				return this._Cname_room;
			}
			set
			{
				if ((this._Cname_room != value))
				{
					this.OnCname_roomChanging(value);
					this.SendPropertyChanging();
					this._Cname_room = value;
					this.SendPropertyChanged("Cname_room");
					this.OnCname_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_campus", DbType="Int")]
		public System.Nullable<int> ik_campus
		{
			get
			{
				return this._ik_campus;
			}
			set
			{
				if ((this._ik_campus != value))
				{
					this.Onik_campusChanging(value);
					this.SendPropertyChanging();
					this._ik_campus = value;
					this.SendPropertyChanged("ik_campus");
					this.Onik_campusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSeatCount", DbType="TinyInt")]
		public System.Nullable<byte> iSeatCount
		{
			get
			{
				return this._iSeatCount;
			}
			set
			{
				if ((this._iSeatCount != value))
				{
					this.OniSeatCountChanging(value);
					this.SendPropertyChanging();
					this._iSeatCount = value;
					this.SendPropertyChanged("iSeatCount");
					this.OniSeatCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_room_type", DbType="Int")]
		public System.Nullable<int> ik_room_type
		{
			get
			{
				return this._ik_room_type;
			}
			set
			{
				if ((this._ik_room_type != value))
				{
					this.Onik_room_typeChanging(value);
					this.SendPropertyChanging();
					this._ik_room_type = value;
					this.SendPropertyChanged("ik_room_type");
					this.Onik_room_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_ABIT_Rassadka", Storage="_ABIT_Rassadkas", ThisKey="ik_room", OtherKey="ik_room")]
		public EntitySet<ABIT_Rassadka> ABIT_Rassadkas
		{
			get
			{
				return this._ABIT_Rassadkas;
			}
			set
			{
				this._ABIT_Rassadkas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABIT_Rassadkas(ABIT_Rassadka entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_ABIT_Rassadkas(ABIT_Rassadka entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudGrup")]
	public partial class StudGrup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_grup;
		
		private int _Ik_zach;
		
		private System.Nullable<int> _ik_kat_zach;
		
		private System.Nullable<int> _Ik_prikazZach;
		
		private int _ik_pricZach;
		
		private string _cObosnZach;
		
		private System.Nullable<int> _Ik_prikazOtch;
		
		private System.Nullable<int> _ik_pricOtch;
		
		private string _cObosnOtch;
		
		private int _Ik_studGrup;
		
		private EntityRef<Kat_zach> _Kat_zach;
		
		private EntityRef<Zach> _Zach;
		
		private EntityRef<Grup> _Grup;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_grupChanging(int value);
    partial void OnIk_grupChanged();
    partial void OnIk_zachChanging(int value);
    partial void OnIk_zachChanged();
    partial void Onik_kat_zachChanging(System.Nullable<int> value);
    partial void Onik_kat_zachChanged();
    partial void OnIk_prikazZachChanging(System.Nullable<int> value);
    partial void OnIk_prikazZachChanged();
    partial void Onik_pricZachChanging(int value);
    partial void Onik_pricZachChanged();
    partial void OncObosnZachChanging(string value);
    partial void OncObosnZachChanged();
    partial void OnIk_prikazOtchChanging(System.Nullable<int> value);
    partial void OnIk_prikazOtchChanged();
    partial void Onik_pricOtchChanging(System.Nullable<int> value);
    partial void Onik_pricOtchChanged();
    partial void OncObosnOtchChanging(string value);
    partial void OncObosnOtchChanged();
    partial void OnIk_studGrupChanging(int value);
    partial void OnIk_studGrupChanged();
    #endregion
		
		public StudGrup()
		{
			this._Kat_zach = default(EntityRef<Kat_zach>);
			this._Zach = default(EntityRef<Zach>);
			this._Grup = default(EntityRef<Grup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grup", DbType="Int NOT NULL")]
		public int Ik_grup
		{
			get
			{
				return this._Ik_grup;
			}
			set
			{
				if ((this._Ik_grup != value))
				{
					if (this._Grup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_grupChanging(value);
					this.SendPropertyChanging();
					this._Ik_grup = value;
					this.SendPropertyChanged("Ik_grup");
					this.OnIk_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_zach", DbType="Int NOT NULL")]
		public int Ik_zach
		{
			get
			{
				return this._Ik_zach;
			}
			set
			{
				if ((this._Ik_zach != value))
				{
					if (this._Zach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIk_zachChanging(value);
					this.SendPropertyChanging();
					this._Ik_zach = value;
					this.SendPropertyChanged("Ik_zach");
					this.OnIk_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zach", DbType="Int")]
		public System.Nullable<int> ik_kat_zach
		{
			get
			{
				return this._ik_kat_zach;
			}
			set
			{
				if ((this._ik_kat_zach != value))
				{
					if (this._Kat_zach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_kat_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_kat_zach = value;
					this.SendPropertyChanged("ik_kat_zach");
					this.Onik_kat_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_prikazZach", DbType="Int")]
		public System.Nullable<int> Ik_prikazZach
		{
			get
			{
				return this._Ik_prikazZach;
			}
			set
			{
				if ((this._Ik_prikazZach != value))
				{
					this.OnIk_prikazZachChanging(value);
					this.SendPropertyChanging();
					this._Ik_prikazZach = value;
					this.SendPropertyChanged("Ik_prikazZach");
					this.OnIk_prikazZachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_pricZach", DbType="Int NOT NULL")]
		public int ik_pricZach
		{
			get
			{
				return this._ik_pricZach;
			}
			set
			{
				if ((this._ik_pricZach != value))
				{
					this.Onik_pricZachChanging(value);
					this.SendPropertyChanging();
					this._ik_pricZach = value;
					this.SendPropertyChanged("ik_pricZach");
					this.Onik_pricZachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cObosnZach", DbType="VarChar(500)")]
		public string cObosnZach
		{
			get
			{
				return this._cObosnZach;
			}
			set
			{
				if ((this._cObosnZach != value))
				{
					this.OncObosnZachChanging(value);
					this.SendPropertyChanging();
					this._cObosnZach = value;
					this.SendPropertyChanged("cObosnZach");
					this.OncObosnZachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_prikazOtch", DbType="Int")]
		public System.Nullable<int> Ik_prikazOtch
		{
			get
			{
				return this._Ik_prikazOtch;
			}
			set
			{
				if ((this._Ik_prikazOtch != value))
				{
					this.OnIk_prikazOtchChanging(value);
					this.SendPropertyChanging();
					this._Ik_prikazOtch = value;
					this.SendPropertyChanged("Ik_prikazOtch");
					this.OnIk_prikazOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_pricOtch", DbType="Int")]
		public System.Nullable<int> ik_pricOtch
		{
			get
			{
				return this._ik_pricOtch;
			}
			set
			{
				if ((this._ik_pricOtch != value))
				{
					this.Onik_pricOtchChanging(value);
					this.SendPropertyChanging();
					this._ik_pricOtch = value;
					this.SendPropertyChanged("ik_pricOtch");
					this.Onik_pricOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cObosnOtch", DbType="VarChar(500)")]
		public string cObosnOtch
		{
			get
			{
				return this._cObosnOtch;
			}
			set
			{
				if ((this._cObosnOtch != value))
				{
					this.OncObosnOtchChanging(value);
					this.SendPropertyChanging();
					this._cObosnOtch = value;
					this.SendPropertyChanged("cObosnOtch");
					this.OncObosnOtchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_studGrup", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_studGrup
		{
			get
			{
				return this._Ik_studGrup;
			}
			set
			{
				if ((this._Ik_studGrup != value))
				{
					this.OnIk_studGrupChanging(value);
					this.SendPropertyChanging();
					this._Ik_studGrup = value;
					this.SendPropertyChanged("Ik_studGrup");
					this.OnIk_studGrupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_StudGrup", Storage="_Kat_zach", ThisKey="ik_kat_zach", OtherKey="Ik_kat_zach", IsForeignKey=true)]
		public Kat_zach Kat_zach
		{
			get
			{
				return this._Kat_zach.Entity;
			}
			set
			{
				Kat_zach previousValue = this._Kat_zach.Entity;
				if (((previousValue != value) 
							|| (this._Kat_zach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kat_zach.Entity = null;
						previousValue.StudGrups.Remove(this);
					}
					this._Kat_zach.Entity = value;
					if ((value != null))
					{
						value.StudGrups.Add(this);
						this._ik_kat_zach = value.Ik_kat_zach;
					}
					else
					{
						this._ik_kat_zach = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kat_zach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zach_StudGrup", Storage="_Zach", ThisKey="Ik_zach", OtherKey="Ik_zach", IsForeignKey=true)]
		public Zach Zach
		{
			get
			{
				return this._Zach.Entity;
			}
			set
			{
				Zach previousValue = this._Zach.Entity;
				if (((previousValue != value) 
							|| (this._Zach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zach.Entity = null;
						previousValue.StudGrups.Remove(this);
					}
					this._Zach.Entity = value;
					if ((value != null))
					{
						value.StudGrups.Add(this);
						this._Ik_zach = value.Ik_zach;
					}
					else
					{
						this._Ik_zach = default(int);
					}
					this.SendPropertyChanged("Zach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_StudGrup", Storage="_Grup", ThisKey="Ik_grup", OtherKey="Ik_grup", IsForeignKey=true)]
		public Grup Grup
		{
			get
			{
				return this._Grup.Entity;
			}
			set
			{
				Grup previousValue = this._Grup.Entity;
				if (((previousValue != value) 
							|| (this._Grup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grup.Entity = null;
						previousValue.StudGrups.Remove(this);
					}
					this._Grup.Entity = value;
					if ((value != null))
					{
						value.StudGrups.Add(this);
						this._Ik_grup = value.Ik_grup;
					}
					else
					{
						this._Ik_grup = default(int);
					}
					this.SendPropertyChanged("Grup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zach")]
	public partial class Zach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_zach;
		
		private string _Nn_zach;
		
		private decimal _nCode;
		
		private EntitySet<StudGrup> _StudGrups;
		
		private EntityRef<Student> _Student;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_zachChanging(int value);
    partial void OnIk_zachChanged();
    partial void OnNn_zachChanging(string value);
    partial void OnNn_zachChanged();
    partial void OnnCodeChanging(decimal value);
    partial void OnnCodeChanged();
    #endregion
		
		public Zach()
		{
			this._StudGrups = new EntitySet<StudGrup>(new Action<StudGrup>(this.attach_StudGrups), new Action<StudGrup>(this.detach_StudGrups));
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_zach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_zach
		{
			get
			{
				return this._Ik_zach;
			}
			set
			{
				if ((this._Ik_zach != value))
				{
					this.OnIk_zachChanging(value);
					this.SendPropertyChanging();
					this._Ik_zach = value;
					this.SendPropertyChanged("Ik_zach");
					this.OnIk_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nn_zach", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string Nn_zach
		{
			get
			{
				return this._Nn_zach;
			}
			set
			{
				if ((this._Nn_zach != value))
				{
					this.OnNn_zachChanging(value);
					this.SendPropertyChanging();
					this._Nn_zach = value;
					this.SendPropertyChanged("Nn_zach");
					this.OnNn_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nCode", DbType="Decimal(18,0) NOT NULL")]
		public decimal nCode
		{
			get
			{
				return this._nCode;
			}
			set
			{
				if ((this._nCode != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnCodeChanging(value);
					this.SendPropertyChanging();
					this._nCode = value;
					this.SendPropertyChanged("nCode");
					this.OnnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zach_StudGrup", Storage="_StudGrups", ThisKey="Ik_zach", OtherKey="Ik_zach")]
		public EntitySet<StudGrup> StudGrups
		{
			get
			{
				return this._StudGrups;
			}
			set
			{
				this._StudGrups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Zach", Storage="_Student", ThisKey="nCode", OtherKey="nCode", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.Zaches.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.Zaches.Add(this);
						this._nCode = value.nCode;
					}
					else
					{
						this._nCode = default(decimal);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Zach = this;
		}
		
		private void detach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Zach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeKatZach")]
	public partial class TypeKatZach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ik_type_kat;
		
		private string _CType_kat;
		
		private EntitySet<Kat_zach> _Kat_zaches;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onik_type_katChanging(int value);
    partial void Onik_type_katChanged();
    partial void OnCType_katChanging(string value);
    partial void OnCType_katChanged();
    #endregion
		
		public TypeKatZach()
		{
			this._Kat_zaches = new EntitySet<Kat_zach>(new Action<Kat_zach>(this.attach_Kat_zaches), new Action<Kat_zach>(this.detach_Kat_zaches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_type_kat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ik_type_kat
		{
			get
			{
				return this._ik_type_kat;
			}
			set
			{
				if ((this._ik_type_kat != value))
				{
					this.Onik_type_katChanging(value);
					this.SendPropertyChanging();
					this._ik_type_kat = value;
					this.SendPropertyChanged("ik_type_kat");
					this.Onik_type_katChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CType_kat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CType_kat
		{
			get
			{
				return this._CType_kat;
			}
			set
			{
				if ((this._CType_kat != value))
				{
					this.OnCType_katChanging(value);
					this.SendPropertyChanging();
					this._CType_kat = value;
					this.SendPropertyChanged("CType_kat");
					this.OnCType_katChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypeKatZach_Kat_zach", Storage="_Kat_zaches", ThisKey="ik_type_kat", OtherKey="ik_type_kat")]
		public EntitySet<Kat_zach> Kat_zaches
		{
			get
			{
				return this._Kat_zaches;
			}
			set
			{
				this._Kat_zaches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kat_zaches(Kat_zach entity)
		{
			this.SendPropertyChanging();
			entity.TypeKatZach = this;
		}
		
		private void detach_Kat_zaches(Kat_zach entity)
		{
			this.SendPropertyChanging();
			entity.TypeKatZach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbitAverageBalls")]
	public partial class AbitAverageBall
	{
		
		private int _RegNomer;
		
		private int _NN_abit;
		
		private System.Nullable<int> _AVGBall;
		
		private int _NNrecord;
		
		private int _ik_kat_zach;
		
		private string _Cname_kat_zach;
		
		private int _ik_type_kat;
		
		public AbitAverageBall()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNomer", DbType="Int NOT NULL")]
		public int RegNomer
		{
			get
			{
				return this._RegNomer;
			}
			set
			{
				if ((this._RegNomer != value))
				{
					this._RegNomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NN_abit", DbType="Int NOT NULL")]
		public int NN_abit
		{
			get
			{
				return this._NN_abit;
			}
			set
			{
				if ((this._NN_abit != value))
				{
					this._NN_abit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVGBall", DbType="Int")]
		public System.Nullable<int> AVGBall
		{
			get
			{
				return this._AVGBall;
			}
			set
			{
				if ((this._AVGBall != value))
				{
					this._AVGBall = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNrecord", DbType="Int NOT NULL")]
		public int NNrecord
		{
			get
			{
				return this._NNrecord;
			}
			set
			{
				if ((this._NNrecord != value))
				{
					this._NNrecord = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zach", DbType="Int NOT NULL")]
		public int ik_kat_zach
		{
			get
			{
				return this._ik_kat_zach;
			}
			set
			{
				if ((this._ik_kat_zach != value))
				{
					this._ik_kat_zach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_kat_zach", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_kat_zach
		{
			get
			{
				return this._Cname_kat_zach;
			}
			set
			{
				if ((this._Cname_kat_zach != value))
				{
					this._Cname_kat_zach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_type_kat", DbType="Int NOT NULL")]
		public int ik_type_kat
		{
			get
			{
				return this._ik_type_kat;
			}
			set
			{
				if ((this._ik_type_kat != value))
				{
					this._ik_type_kat = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABIT_proh_ball")]
	public partial class ABIT_proh_ball : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NNrecord;
		
		private int _ik_kat_zach;
		
		private System.Nullable<int> _Ball;
		
		private EntityRef<ABIT_Diapazon_spec_fac> _ABIT_Diapazon_spec_fac;
		
		private EntityRef<Kat_zach> _Kat_zach;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNNrecordChanging(int value);
    partial void OnNNrecordChanged();
    partial void Onik_kat_zachChanging(int value);
    partial void Onik_kat_zachChanged();
    partial void OnBallChanging(System.Nullable<int> value);
    partial void OnBallChanged();
    #endregion
		
		public ABIT_proh_ball()
		{
			this._ABIT_Diapazon_spec_fac = default(EntityRef<ABIT_Diapazon_spec_fac>);
			this._Kat_zach = default(EntityRef<Kat_zach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NNrecord", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NNrecord
		{
			get
			{
				return this._NNrecord;
			}
			set
			{
				if ((this._NNrecord != value))
				{
					if (this._ABIT_Diapazon_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNNrecordChanging(value);
					this.SendPropertyChanging();
					this._NNrecord = value;
					this.SendPropertyChanged("NNrecord");
					this.OnNNrecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_kat_zach", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ik_kat_zach
		{
			get
			{
				return this._ik_kat_zach;
			}
			set
			{
				if ((this._ik_kat_zach != value))
				{
					if (this._Kat_zach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_kat_zachChanging(value);
					this.SendPropertyChanging();
					this._ik_kat_zach = value;
					this.SendPropertyChanged("ik_kat_zach");
					this.Onik_kat_zachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ball", DbType="Int")]
		public System.Nullable<int> Ball
		{
			get
			{
				return this._Ball;
			}
			set
			{
				if ((this._Ball != value))
				{
					this.OnBallChanging(value);
					this.SendPropertyChanging();
					this._Ball = value;
					this.SendPropertyChanged("Ball");
					this.OnBallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ABIT_Diapazon_spec_fac_ABIT_proh_ball", Storage="_ABIT_Diapazon_spec_fac", ThisKey="NNrecord", OtherKey="NNrecord", IsForeignKey=true)]
		public ABIT_Diapazon_spec_fac ABIT_Diapazon_spec_fac
		{
			get
			{
				return this._ABIT_Diapazon_spec_fac.Entity;
			}
			set
			{
				ABIT_Diapazon_spec_fac previousValue = this._ABIT_Diapazon_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._ABIT_Diapazon_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ABIT_Diapazon_spec_fac.Entity = null;
						previousValue.ABIT_proh_balls.Remove(this);
					}
					this._ABIT_Diapazon_spec_fac.Entity = value;
					if ((value != null))
					{
						value.ABIT_proh_balls.Add(this);
						this._NNrecord = value.NNrecord;
					}
					else
					{
						this._NNrecord = default(int);
					}
					this.SendPropertyChanged("ABIT_Diapazon_spec_fac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kat_zach_ABIT_proh_ball", Storage="_Kat_zach", ThisKey="ik_kat_zach", OtherKey="Ik_kat_zach", IsForeignKey=true)]
		public Kat_zach Kat_zach
		{
			get
			{
				return this._Kat_zach.Entity;
			}
			set
			{
				Kat_zach previousValue = this._Kat_zach.Entity;
				if (((previousValue != value) 
							|| (this._Kat_zach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kat_zach.Entity = null;
						previousValue.ABIT_proh_balls.Remove(this);
					}
					this._Kat_zach.Entity = value;
					if ((value != null))
					{
						value.ABIT_proh_balls.Add(this);
						this._ik_kat_zach = value.Ik_kat_zach;
					}
					else
					{
						this._ik_kat_zach = default(int);
					}
					this.SendPropertyChanged("Kat_zach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grup")]
	public partial class Grup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ik_grup;
		
		private int _ik_spec_fac;
		
		private string _Cname_grup;
		
		private System.Nullable<int> _Ik_uch_plan;
		
		private System.Nullable<int> _nYear_post;
		
		private System.Nullable<System.DateTime> _DateCreate;
		
		private System.Nullable<System.DateTime> _DateExit;
		
		private EntitySet<StudGrup> _StudGrups;
		
		private EntityRef<Relation_spec_fac> _Relation_spec_fac;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIk_grupChanging(int value);
    partial void OnIk_grupChanged();
    partial void Onik_spec_facChanging(int value);
    partial void Onik_spec_facChanged();
    partial void OnCname_grupChanging(string value);
    partial void OnCname_grupChanged();
    partial void OnIk_uch_planChanging(System.Nullable<int> value);
    partial void OnIk_uch_planChanged();
    partial void OnnYear_postChanging(System.Nullable<int> value);
    partial void OnnYear_postChanged();
    partial void OnDateCreateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreateChanged();
    partial void OnDateExitChanging(System.Nullable<System.DateTime> value);
    partial void OnDateExitChanged();
    #endregion
		
		public Grup()
		{
			this._StudGrups = new EntitySet<StudGrup>(new Action<StudGrup>(this.attach_StudGrups), new Action<StudGrup>(this.detach_StudGrups));
			this._Relation_spec_fac = default(EntityRef<Relation_spec_fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_grup", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ik_grup
		{
			get
			{
				return this._Ik_grup;
			}
			set
			{
				if ((this._Ik_grup != value))
				{
					this.OnIk_grupChanging(value);
					this.SendPropertyChanging();
					this._Ik_grup = value;
					this.SendPropertyChanged("Ik_grup");
					this.OnIk_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ik_spec_fac", DbType="Int NOT NULL")]
		public int ik_spec_fac
		{
			get
			{
				return this._ik_spec_fac;
			}
			set
			{
				if ((this._ik_spec_fac != value))
				{
					if (this._Relation_spec_fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onik_spec_facChanging(value);
					this.SendPropertyChanging();
					this._ik_spec_fac = value;
					this.SendPropertyChanged("ik_spec_fac");
					this.Onik_spec_facChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cname_grup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cname_grup
		{
			get
			{
				return this._Cname_grup;
			}
			set
			{
				if ((this._Cname_grup != value))
				{
					this.OnCname_grupChanging(value);
					this.SendPropertyChanging();
					this._Cname_grup = value;
					this.SendPropertyChanged("Cname_grup");
					this.OnCname_grupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ik_uch_plan", DbType="Int")]
		public System.Nullable<int> Ik_uch_plan
		{
			get
			{
				return this._Ik_uch_plan;
			}
			set
			{
				if ((this._Ik_uch_plan != value))
				{
					this.OnIk_uch_planChanging(value);
					this.SendPropertyChanging();
					this._Ik_uch_plan = value;
					this.SendPropertyChanged("Ik_uch_plan");
					this.OnIk_uch_planChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nYear_post", DbType="Int")]
		public System.Nullable<int> nYear_post
		{
			get
			{
				return this._nYear_post;
			}
			set
			{
				if ((this._nYear_post != value))
				{
					this.OnnYear_postChanging(value);
					this.SendPropertyChanging();
					this._nYear_post = value;
					this.SendPropertyChanged("nYear_post");
					this.OnnYear_postChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreate
		{
			get
			{
				return this._DateCreate;
			}
			set
			{
				if ((this._DateCreate != value))
				{
					this.OnDateCreateChanging(value);
					this.SendPropertyChanging();
					this._DateCreate = value;
					this.SendPropertyChanged("DateCreate");
					this.OnDateCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateExit", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateExit
		{
			get
			{
				return this._DateExit;
			}
			set
			{
				if ((this._DateExit != value))
				{
					this.OnDateExitChanging(value);
					this.SendPropertyChanging();
					this._DateExit = value;
					this.SendPropertyChanged("DateExit");
					this.OnDateExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grup_StudGrup", Storage="_StudGrups", ThisKey="Ik_grup", OtherKey="Ik_grup")]
		public EntitySet<StudGrup> StudGrups
		{
			get
			{
				return this._StudGrups;
			}
			set
			{
				this._StudGrups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Relation_spec_fac_Grup", Storage="_Relation_spec_fac", ThisKey="ik_spec_fac", OtherKey="ik_spec_fac", IsForeignKey=true)]
		public Relation_spec_fac Relation_spec_fac
		{
			get
			{
				return this._Relation_spec_fac.Entity;
			}
			set
			{
				Relation_spec_fac previousValue = this._Relation_spec_fac.Entity;
				if (((previousValue != value) 
							|| (this._Relation_spec_fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Relation_spec_fac.Entity = null;
						previousValue.Grups.Remove(this);
					}
					this._Relation_spec_fac.Entity = value;
					if ((value != null))
					{
						value.Grups.Add(this);
						this._ik_spec_fac = value.ik_spec_fac;
					}
					else
					{
						this._ik_spec_fac = default(int);
					}
					this.SendPropertyChanged("Relation_spec_fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = this;
		}
		
		private void detach_StudGrups(StudGrup entity)
		{
			this.SendPropertyChanging();
			entity.Grup = null;
		}
	}
	
	public partial class AppendAbitResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
		public AppendAbitResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
	
	public partial class AppendPersonAddressResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
		public AppendPersonAddressResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
	
	public partial class UpdatePersonAddressResult
	{
		
		private System.Nullable<int> _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
		public UpdatePersonAddressResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this._ErrorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this._ErrorSeverity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this._ErrorState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(128)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this._ErrorProcedure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this._ErrorLine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this._ErrorMessage = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
