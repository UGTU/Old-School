unit TestCommandController;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SysUtils, Db, CommandController, Data.Win.ADODB, System.Variants;

type
  // Test methods for class TBaseSelectController

  TestTBaseSelectController = class(TTestCase)
  strict private
    FBaseSelectController: TBaseSelectController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestRefresh;
    procedure TestSave;
  end;
  // Test methods for class TBaseCommandController

  TestTBaseCommandController = class(TTestCase)
  strict private
    FBaseCommandController: TBaseCommandController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  end;
  // Test methods for class TGroupController

  TestTGroupController = class(TTestCase)
  strict private
    FGroupController: TGroupController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure SetGroup;
  end;
  // Test methods for class TBRSVedomostController

  TestTBRSVedomostController = class(TTestCase)
  strict private
    FBRSVedomostController: TBRSVedomostController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  end;
  // Test methods for class TnoBRSVedomostController

  TestTnoBRSVedomostController = class(TTestCase)
  strict private
    FnoBRSVedomostController: TnoBRSVedomostController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  end;

implementation

procedure TestTBaseSelectController.SetUp;
begin
  FBaseSelectController := TBaseSelectController.Create('grup');
end;

procedure TestTBaseSelectController.TearDown;
begin
  FBaseSelectController.Free;
  FBaseSelectController := nil;
end;

procedure TestTBaseSelectController.TestRefresh;
var
  ReturnValue: Boolean;
begin
//  ReturnValue := FBaseSelectController.Refresh;
  // TODO: Validate method results
end;

procedure TestTBaseSelectController.TestSave;
begin
//  FBaseSelectController.Save;
  // TODO: Validate method results
end;

procedure TestTBaseCommandController.SetUp;
begin
  //FBaseCommandController := TBaseCommandController.Create;
end;

procedure TestTBaseCommandController.TearDown;
begin
  FBaseCommandController.Free;
  FBaseCommandController := nil;
end;

procedure TestTGroupController.SetGroup;
begin
  FGroupController.Group := 2040;
end;

procedure TestTGroupController.SetUp;
begin
  FGroupController := TGroupController.Create;
end;

procedure TestTGroupController.TearDown;
begin
  FGroupController.Free;
  FGroupController := nil;
end;

procedure TestTBRSVedomostController.SetUp;
begin
  //FBRSVedomostController := TBRSVedomostController.Create;
end;

procedure TestTBRSVedomostController.TearDown;
begin
  FBRSVedomostController.Free;
  FBRSVedomostController := nil;
end;

procedure TestTnoBRSVedomostController.SetUp;
begin
  //FnoBRSVedomostController := TnoBRSVedomostController.Create;
end;

procedure TestTnoBRSVedomostController.TearDown;
begin
  FnoBRSVedomostController.Free;
  FnoBRSVedomostController := nil;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTBaseSelectController.Suite);
  RegisterTest(TestTBaseCommandController.Suite);
  RegisterTest(TestTGroupController.Suite);
  RegisterTest(TestTBRSVedomostController.Suite);
  RegisterTest(TestTnoBRSVedomostController.Suite);
end.

